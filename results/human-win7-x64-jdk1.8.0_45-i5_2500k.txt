# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 0, b = 0.5)

# Run progress: 0.00% complete, ETA 01:38:00
# Fork: 1 of 2
# Warmup Iteration   1: 52.229 ns/op
# Warmup Iteration   2: 52.333 ns/op
# Warmup Iteration   3: 51.925 ns/op
# Warmup Iteration   4: 51.838 ns/op
# Warmup Iteration   5: 51.955 ns/op
Iteration   1: 51.800 ns/op
Iteration   2: 51.862 ns/op
Iteration   3: 51.840 ns/op
Iteration   4: 51.655 ns/op
Iteration   5: 52.336 ns/op

# Run progress: 0.17% complete, ETA 01:50:03
# Fork: 2 of 2
# Warmup Iteration   1: 52.451 ns/op
# Warmup Iteration   2: 52.435 ns/op
# Warmup Iteration   3: 51.922 ns/op
# Warmup Iteration   4: 52.054 ns/op
# Warmup Iteration   5: 52.268 ns/op
Iteration   1: 52.002 ns/op
Iteration   2: 51.883 ns/op
Iteration   3: 51.990 ns/op
Iteration   4: 51.873 ns/op
Iteration   5: 51.867 ns/op


Result "baselineAtan":
  51.911 ±(99.9%) 0.269 ns/op [Average]
  (min, avg, max) = (51.655, 51.911, 52.336), stdev = 0.178
  CI (99.9%): [51.642, 52.180] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 0, b = 1)

# Run progress: 0.34% complete, ETA 01:49:48
# Fork: 1 of 2
# Warmup Iteration   1: 52.275 ns/op
# Warmup Iteration   2: 52.235 ns/op
# Warmup Iteration   3: 51.779 ns/op
# Warmup Iteration   4: 51.875 ns/op
# Warmup Iteration   5: 51.861 ns/op
Iteration   1: 51.897 ns/op
Iteration   2: 51.808 ns/op
Iteration   3: 51.800 ns/op
Iteration   4: 52.012 ns/op
Iteration   5: 51.821 ns/op

# Run progress: 0.51% complete, ETA 01:49:44
# Fork: 2 of 2
# Warmup Iteration   1: 52.267 ns/op
# Warmup Iteration   2: 52.365 ns/op
# Warmup Iteration   3: 51.768 ns/op
# Warmup Iteration   4: 51.906 ns/op
# Warmup Iteration   5: 51.922 ns/op
Iteration   1: 51.850 ns/op
Iteration   2: 51.798 ns/op
Iteration   3: 51.867 ns/op
Iteration   4: 51.878 ns/op
Iteration   5: 51.786 ns/op


Result "baselineAtan":
  51.852 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (51.786, 51.852, 52.012), stdev = 0.068
  CI (99.9%): [51.749, 51.954] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 0, b = 5)

# Run progress: 0.68% complete, ETA 01:49:29
# Fork: 1 of 2
# Warmup Iteration   1: 74.081 ns/op
# Warmup Iteration   2: 74.113 ns/op
# Warmup Iteration   3: 73.345 ns/op
# Warmup Iteration   4: 73.239 ns/op
# Warmup Iteration   5: 73.324 ns/op
Iteration   1: 73.353 ns/op
Iteration   2: 73.259 ns/op
Iteration   3: 73.329 ns/op
Iteration   4: 73.499 ns/op
Iteration   5: 73.150 ns/op

# Run progress: 0.85% complete, ETA 01:49:16
# Fork: 2 of 2
# Warmup Iteration   1: 74.137 ns/op
# Warmup Iteration   2: 74.000 ns/op
# Warmup Iteration   3: 73.042 ns/op
# Warmup Iteration   4: 72.945 ns/op
# Warmup Iteration   5: 72.971 ns/op
Iteration   1: 73.027 ns/op
Iteration   2: 73.032 ns/op
Iteration   3: 73.126 ns/op
Iteration   4: 73.128 ns/op
Iteration   5: 73.083 ns/op


Result "baselineAtan":
  73.199 ±(99.9%) 0.235 ns/op [Average]
  (min, avg, max) = (73.027, 73.199, 73.499), stdev = 0.156
  CI (99.9%): [72.964, 73.434] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 0, b = 10)

# Run progress: 1.02% complete, ETA 01:49:03
# Fork: 1 of 2
# Warmup Iteration   1: 75.636 ns/op
# Warmup Iteration   2: 75.489 ns/op
# Warmup Iteration   3: 74.898 ns/op
# Warmup Iteration   4: 74.946 ns/op
# Warmup Iteration   5: 74.963 ns/op
Iteration   1: 74.809 ns/op
Iteration   2: 74.841 ns/op
Iteration   3: 74.926 ns/op
Iteration   4: 74.986 ns/op
Iteration   5: 75.037 ns/op

# Run progress: 1.19% complete, ETA 01:48:50
# Fork: 2 of 2
# Warmup Iteration   1: 75.413 ns/op
# Warmup Iteration   2: 75.544 ns/op
# Warmup Iteration   3: 74.675 ns/op
# Warmup Iteration   4: 74.799 ns/op
# Warmup Iteration   5: 74.700 ns/op
Iteration   1: 74.673 ns/op
Iteration   2: 74.726 ns/op
Iteration   3: 74.857 ns/op
Iteration   4: 74.875 ns/op
Iteration   5: 74.698 ns/op


Result "baselineAtan":
  74.843 ±(99.9%) 0.182 ns/op [Average]
  (min, avg, max) = (74.673, 74.843, 75.037), stdev = 0.121
  CI (99.9%): [74.660, 75.025] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 0, b = 100)

# Run progress: 1.36% complete, ETA 01:48:37
# Fork: 1 of 2
# Warmup Iteration   1: 76.532 ns/op
# Warmup Iteration   2: 76.220 ns/op
# Warmup Iteration   3: 76.431 ns/op
# Warmup Iteration   4: 76.078 ns/op
# Warmup Iteration   5: 76.123 ns/op
Iteration   1: 76.114 ns/op
Iteration   2: 75.995 ns/op
Iteration   3: 76.398 ns/op
Iteration   4: 76.089 ns/op
Iteration   5: 76.266 ns/op

# Run progress: 1.53% complete, ETA 01:48:26
# Fork: 2 of 2
# Warmup Iteration   1: 76.428 ns/op
# Warmup Iteration   2: 76.377 ns/op
# Warmup Iteration   3: 75.717 ns/op
# Warmup Iteration   4: 75.866 ns/op
# Warmup Iteration   5: 75.706 ns/op
Iteration   1: 75.783 ns/op
Iteration   2: 75.719 ns/op
Iteration   3: 75.744 ns/op
Iteration   4: 75.767 ns/op
Iteration   5: 75.700 ns/op


Result "baselineAtan":
  75.957 ±(99.9%) 0.379 ns/op [Average]
  (min, avg, max) = (75.700, 75.957, 76.398), stdev = 0.251
  CI (99.9%): [75.578, 76.337] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 0, b = 1000)

# Run progress: 1.70% complete, ETA 01:48:14
# Fork: 1 of 2
# Warmup Iteration   1: 76.604 ns/op
# Warmup Iteration   2: 76.197 ns/op
# Warmup Iteration   3: 75.755 ns/op
# Warmup Iteration   4: 75.778 ns/op
# Warmup Iteration   5: 75.811 ns/op
Iteration   1: 75.864 ns/op
Iteration   2: 75.916 ns/op
Iteration   3: 75.883 ns/op
Iteration   4: 75.950 ns/op
Iteration   5: 75.777 ns/op

# Run progress: 1.87% complete, ETA 01:48:03
# Fork: 2 of 2
# Warmup Iteration   1: 76.413 ns/op
# Warmup Iteration   2: 76.114 ns/op
# Warmup Iteration   3: 75.756 ns/op
# Warmup Iteration   4: 75.749 ns/op
# Warmup Iteration   5: 75.830 ns/op
Iteration   1: 75.644 ns/op
Iteration   2: 75.892 ns/op
Iteration   3: 75.855 ns/op
Iteration   4: 75.719 ns/op
Iteration   5: 75.619 ns/op


Result "baselineAtan":
  75.812 ±(99.9%) 0.175 ns/op [Average]
  (min, avg, max) = (75.619, 75.812, 75.950), stdev = 0.116
  CI (99.9%): [75.637, 75.987] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 0, b = 10000)

# Run progress: 2.04% complete, ETA 01:47:51
# Fork: 1 of 2
# Warmup Iteration   1: 76.611 ns/op
# Warmup Iteration   2: 76.213 ns/op
# Warmup Iteration   3: 75.736 ns/op
# Warmup Iteration   4: 75.792 ns/op
# Warmup Iteration   5: 75.955 ns/op
Iteration   1: 75.878 ns/op
Iteration   2: 75.795 ns/op
Iteration   3: 75.865 ns/op
Iteration   4: 76.541 ns/op
Iteration   5: 76.599 ns/op

# Run progress: 2.21% complete, ETA 01:47:40
# Fork: 2 of 2
# Warmup Iteration   1: 76.468 ns/op
# Warmup Iteration   2: 76.233 ns/op
# Warmup Iteration   3: 75.874 ns/op
# Warmup Iteration   4: 75.833 ns/op
# Warmup Iteration   5: 75.909 ns/op
Iteration   1: 75.932 ns/op
Iteration   2: 75.886 ns/op
Iteration   3: 75.927 ns/op
Iteration   4: 76.535 ns/op
Iteration   5: 76.793 ns/op


Result "baselineAtan":
  76.175 ±(99.9%) 0.588 ns/op [Average]
  (min, avg, max) = (75.795, 76.175, 76.793), stdev = 0.389
  CI (99.9%): [75.588, 76.763] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 5, b = 0.5)

# Run progress: 2.38% complete, ETA 01:47:28
# Fork: 1 of 2
# Warmup Iteration   1: 52.300 ns/op
# Warmup Iteration   2: 52.321 ns/op
# Warmup Iteration   3: 51.969 ns/op
# Warmup Iteration   4: 51.824 ns/op
# Warmup Iteration   5: 51.853 ns/op
Iteration   1: 51.851 ns/op
Iteration   2: 51.975 ns/op
Iteration   3: 51.894 ns/op
Iteration   4: 52.615 ns/op
Iteration   5: 52.520 ns/op

# Run progress: 2.55% complete, ETA 01:47:16
# Fork: 2 of 2
# Warmup Iteration   1: 52.499 ns/op
# Warmup Iteration   2: 52.555 ns/op
# Warmup Iteration   3: 51.888 ns/op
# Warmup Iteration   4: 51.775 ns/op
# Warmup Iteration   5: 52.364 ns/op
Iteration   1: 51.824 ns/op
Iteration   2: 51.815 ns/op
Iteration   3: 51.822 ns/op
Iteration   4: 51.788 ns/op
Iteration   5: 51.867 ns/op


Result "baselineAtan":
  51.997 ±(99.9%) 0.463 ns/op [Average]
  (min, avg, max) = (51.788, 51.997, 52.615), stdev = 0.306
  CI (99.9%): [51.534, 52.460] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 5, b = 1)

# Run progress: 2.72% complete, ETA 01:47:04
# Fork: 1 of 2
# Warmup Iteration   1: 52.272 ns/op
# Warmup Iteration   2: 52.329 ns/op
# Warmup Iteration   3: 51.859 ns/op
# Warmup Iteration   4: 51.814 ns/op
# Warmup Iteration   5: 51.819 ns/op
Iteration   1: 51.825 ns/op
Iteration   2: 51.852 ns/op
Iteration   3: 51.965 ns/op
Iteration   4: 51.790 ns/op
Iteration   5: 51.887 ns/op

# Run progress: 2.89% complete, ETA 01:46:53
# Fork: 2 of 2
# Warmup Iteration   1: 52.269 ns/op
# Warmup Iteration   2: 52.402 ns/op
# Warmup Iteration   3: 51.820 ns/op
# Warmup Iteration   4: 52.008 ns/op
# Warmup Iteration   5: 51.862 ns/op
Iteration   1: 52.031 ns/op
Iteration   2: 51.961 ns/op
Iteration   3: 51.962 ns/op
Iteration   4: 51.934 ns/op
Iteration   5: 51.886 ns/op


Result "baselineAtan":
  51.909 ±(99.9%) 0.112 ns/op [Average]
  (min, avg, max) = (51.790, 51.909, 52.031), stdev = 0.074
  CI (99.9%): [51.797, 52.022] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 5, b = 5)

# Run progress: 3.06% complete, ETA 01:46:41
# Fork: 1 of 2
# Warmup Iteration   1: 74.037 ns/op
# Warmup Iteration   2: 73.857 ns/op
# Warmup Iteration   3: 73.220 ns/op
# Warmup Iteration   4: 73.212 ns/op
# Warmup Iteration   5: 73.251 ns/op
Iteration   1: 73.198 ns/op
Iteration   2: 73.191 ns/op
Iteration   3: 73.157 ns/op
Iteration   4: 73.198 ns/op
Iteration   5: 73.238 ns/op

# Run progress: 3.23% complete, ETA 01:46:30
# Fork: 2 of 2
# Warmup Iteration   1: 73.975 ns/op
# Warmup Iteration   2: 74.089 ns/op
# Warmup Iteration   3: 73.128 ns/op
# Warmup Iteration   4: 73.165 ns/op
# Warmup Iteration   5: 73.285 ns/op
Iteration   1: 73.323 ns/op
Iteration   2: 73.118 ns/op
Iteration   3: 73.146 ns/op
Iteration   4: 73.215 ns/op
Iteration   5: 73.571 ns/op


Result "baselineAtan":
  73.235 ±(99.9%) 0.197 ns/op [Average]
  (min, avg, max) = (73.118, 73.235, 73.571), stdev = 0.131
  CI (99.9%): [73.038, 73.433] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 5, b = 10)

# Run progress: 3.40% complete, ETA 01:46:19
# Fork: 1 of 2
# Warmup Iteration   1: 75.448 ns/op
# Warmup Iteration   2: 75.422 ns/op
# Warmup Iteration   3: 74.591 ns/op
# Warmup Iteration   4: 74.860 ns/op
# Warmup Iteration   5: 74.598 ns/op
Iteration   1: 74.632 ns/op
Iteration   2: 74.554 ns/op
Iteration   3: 74.588 ns/op
Iteration   4: 74.749 ns/op
Iteration   5: 74.718 ns/op

# Run progress: 3.57% complete, ETA 01:46:07
# Fork: 2 of 2
# Warmup Iteration   1: 75.461 ns/op
# Warmup Iteration   2: 75.533 ns/op
# Warmup Iteration   3: 74.788 ns/op
# Warmup Iteration   4: 74.887 ns/op
# Warmup Iteration   5: 74.787 ns/op
Iteration   1: 74.595 ns/op
Iteration   2: 74.902 ns/op
Iteration   3: 74.850 ns/op
Iteration   4: 74.749 ns/op
Iteration   5: 74.715 ns/op


Result "baselineAtan":
  74.705 ±(99.9%) 0.173 ns/op [Average]
  (min, avg, max) = (74.554, 74.705, 74.902), stdev = 0.114
  CI (99.9%): [74.532, 74.878] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 5, b = 100)

# Run progress: 3.74% complete, ETA 01:45:56
# Fork: 1 of 2
# Warmup Iteration   1: 76.168 ns/op
# Warmup Iteration   2: 76.092 ns/op
# Warmup Iteration   3: 75.576 ns/op
# Warmup Iteration   4: 75.719 ns/op
# Warmup Iteration   5: 75.868 ns/op
Iteration   1: 75.644 ns/op
Iteration   2: 75.658 ns/op
Iteration   3: 75.673 ns/op
Iteration   4: 75.735 ns/op
Iteration   5: 75.627 ns/op

# Run progress: 3.91% complete, ETA 01:45:45
# Fork: 2 of 2
# Warmup Iteration   1: 76.473 ns/op
# Warmup Iteration   2: 76.195 ns/op
# Warmup Iteration   3: 75.968 ns/op
# Warmup Iteration   4: 75.882 ns/op
# Warmup Iteration   5: 75.777 ns/op
Iteration   1: 75.793 ns/op
Iteration   2: 75.888 ns/op
Iteration   3: 75.802 ns/op
Iteration   4: 76.208 ns/op
Iteration   5: 75.911 ns/op


Result "baselineAtan":
  75.794 ±(99.9%) 0.267 ns/op [Average]
  (min, avg, max) = (75.627, 75.794, 76.208), stdev = 0.177
  CI (99.9%): [75.527, 76.061] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 5, b = 1000)

# Run progress: 4.08% complete, ETA 01:45:34
# Fork: 1 of 2
# Warmup Iteration   1: 76.390 ns/op
# Warmup Iteration   2: 76.292 ns/op
# Warmup Iteration   3: 75.785 ns/op
# Warmup Iteration   4: 75.988 ns/op
# Warmup Iteration   5: 75.769 ns/op
Iteration   1: 75.942 ns/op
Iteration   2: 75.865 ns/op
Iteration   3: 75.720 ns/op
Iteration   4: 75.845 ns/op
Iteration   5: 75.943 ns/op

# Run progress: 4.25% complete, ETA 01:45:22
# Fork: 2 of 2
# Warmup Iteration   1: 76.207 ns/op
# Warmup Iteration   2: 76.062 ns/op
# Warmup Iteration   3: 75.850 ns/op
# Warmup Iteration   4: 75.776 ns/op
# Warmup Iteration   5: 75.809 ns/op
Iteration   1: 75.752 ns/op
Iteration   2: 75.817 ns/op
Iteration   3: 75.862 ns/op
Iteration   4: 75.791 ns/op
Iteration   5: 75.689 ns/op


Result "baselineAtan":
  75.823 ±(99.9%) 0.131 ns/op [Average]
  (min, avg, max) = (75.689, 75.823, 75.943), stdev = 0.086
  CI (99.9%): [75.692, 75.953] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 5, b = 10000)

# Run progress: 4.42% complete, ETA 01:45:11
# Fork: 1 of 2
# Warmup Iteration   1: 76.636 ns/op
# Warmup Iteration   2: 76.278 ns/op
# Warmup Iteration   3: 76.127 ns/op
# Warmup Iteration   4: 75.869 ns/op
# Warmup Iteration   5: 75.823 ns/op
Iteration   1: 75.934 ns/op
Iteration   2: 75.780 ns/op
Iteration   3: 75.898 ns/op
Iteration   4: 75.992 ns/op
Iteration   5: 75.864 ns/op

# Run progress: 4.59% complete, ETA 01:45:00
# Fork: 2 of 2
# Warmup Iteration   1: 76.495 ns/op
# Warmup Iteration   2: 76.359 ns/op
# Warmup Iteration   3: 75.616 ns/op
# Warmup Iteration   4: 75.742 ns/op
# Warmup Iteration   5: 75.716 ns/op
Iteration   1: 75.706 ns/op
Iteration   2: 75.650 ns/op
Iteration   3: 75.735 ns/op
Iteration   4: 75.700 ns/op
Iteration   5: 75.734 ns/op


Result "baselineAtan":
  75.799 ±(99.9%) 0.174 ns/op [Average]
  (min, avg, max) = (75.650, 75.799, 75.992), stdev = 0.115
  CI (99.9%): [75.626, 75.973] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 30, b = 0.5)

# Run progress: 4.76% complete, ETA 01:44:48
# Fork: 1 of 2
# Warmup Iteration   1: 52.401 ns/op
# Warmup Iteration   2: 52.341 ns/op
# Warmup Iteration   3: 51.834 ns/op
# Warmup Iteration   4: 51.878 ns/op
# Warmup Iteration   5: 51.855 ns/op
Iteration   1: 51.995 ns/op
Iteration   2: 51.841 ns/op
Iteration   3: 51.829 ns/op
Iteration   4: 51.870 ns/op
Iteration   5: 51.774 ns/op

# Run progress: 4.93% complete, ETA 01:44:37
# Fork: 2 of 2
# Warmup Iteration   1: 52.319 ns/op
# Warmup Iteration   2: 52.354 ns/op
# Warmup Iteration   3: 51.790 ns/op
# Warmup Iteration   4: 51.701 ns/op
# Warmup Iteration   5: 51.854 ns/op
Iteration   1: 51.686 ns/op
Iteration   2: 51.702 ns/op
Iteration   3: 51.666 ns/op
Iteration   4: 51.668 ns/op
Iteration   5: 51.759 ns/op


Result "baselineAtan":
  51.779 ±(99.9%) 0.160 ns/op [Average]
  (min, avg, max) = (51.666, 51.779, 51.995), stdev = 0.106
  CI (99.9%): [51.619, 51.939] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 30, b = 1)

# Run progress: 5.10% complete, ETA 01:44:26
# Fork: 1 of 2
# Warmup Iteration   1: 52.388 ns/op
# Warmup Iteration   2: 52.446 ns/op
# Warmup Iteration   3: 51.819 ns/op
# Warmup Iteration   4: 51.813 ns/op
# Warmup Iteration   5: 51.756 ns/op
Iteration   1: 51.813 ns/op
Iteration   2: 51.809 ns/op
Iteration   3: 51.758 ns/op
Iteration   4: 51.871 ns/op
Iteration   5: 51.828 ns/op

# Run progress: 5.27% complete, ETA 01:44:15
# Fork: 2 of 2
# Warmup Iteration   1: 52.240 ns/op
# Warmup Iteration   2: 52.254 ns/op
# Warmup Iteration   3: 51.725 ns/op
# Warmup Iteration   4: 51.724 ns/op
# Warmup Iteration   5: 51.789 ns/op
Iteration   1: 51.697 ns/op
Iteration   2: 51.793 ns/op
Iteration   3: 51.807 ns/op
Iteration   4: 51.792 ns/op
Iteration   5: 51.843 ns/op


Result "baselineAtan":
  51.801 ±(99.9%) 0.072 ns/op [Average]
  (min, avg, max) = (51.697, 51.801, 51.871), stdev = 0.048
  CI (99.9%): [51.729, 51.873] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 30, b = 5)

# Run progress: 5.44% complete, ETA 01:44:04
# Fork: 1 of 2
# Warmup Iteration   1: 74.278 ns/op
# Warmup Iteration   2: 74.089 ns/op
# Warmup Iteration   3: 73.491 ns/op
# Warmup Iteration   4: 73.604 ns/op
# Warmup Iteration   5: 73.551 ns/op
Iteration   1: 73.417 ns/op
Iteration   2: 73.540 ns/op
Iteration   3: 73.469 ns/op
Iteration   4: 73.351 ns/op
Iteration   5: 73.405 ns/op

# Run progress: 5.61% complete, ETA 01:43:53
# Fork: 2 of 2
# Warmup Iteration   1: 74.010 ns/op
# Warmup Iteration   2: 73.673 ns/op
# Warmup Iteration   3: 72.973 ns/op
# Warmup Iteration   4: 73.075 ns/op
# Warmup Iteration   5: 73.124 ns/op
Iteration   1: 73.052 ns/op
Iteration   2: 72.856 ns/op
Iteration   3: 72.993 ns/op
Iteration   4: 72.988 ns/op
Iteration   5: 73.145 ns/op


Result "baselineAtan":
  73.222 ±(99.9%) 0.365 ns/op [Average]
  (min, avg, max) = (72.856, 73.222, 73.540), stdev = 0.242
  CI (99.9%): [72.856, 73.587] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 30, b = 10)

# Run progress: 5.78% complete, ETA 01:43:41
# Fork: 1 of 2
# Warmup Iteration   1: 75.504 ns/op
# Warmup Iteration   2: 75.576 ns/op
# Warmup Iteration   3: 74.792 ns/op
# Warmup Iteration   4: 74.887 ns/op
# Warmup Iteration   5: 74.737 ns/op
Iteration   1: 74.718 ns/op
Iteration   2: 74.937 ns/op
Iteration   3: 74.774 ns/op
Iteration   4: 74.707 ns/op
Iteration   5: 74.777 ns/op

# Run progress: 5.95% complete, ETA 01:43:30
# Fork: 2 of 2
# Warmup Iteration   1: 75.536 ns/op
# Warmup Iteration   2: 75.528 ns/op
# Warmup Iteration   3: 74.761 ns/op
# Warmup Iteration   4: 74.895 ns/op
# Warmup Iteration   5: 74.796 ns/op
Iteration   1: 74.970 ns/op
Iteration   2: 74.816 ns/op
Iteration   3: 75.035 ns/op
Iteration   4: 74.866 ns/op
Iteration   5: 74.810 ns/op


Result "baselineAtan":
  74.841 ±(99.9%) 0.165 ns/op [Average]
  (min, avg, max) = (74.707, 74.841, 75.035), stdev = 0.109
  CI (99.9%): [74.676, 75.006] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 30, b = 100)

# Run progress: 6.12% complete, ETA 01:43:18
# Fork: 1 of 2
# Warmup Iteration   1: 76.516 ns/op
# Warmup Iteration   2: 76.398 ns/op
# Warmup Iteration   3: 75.885 ns/op
# Warmup Iteration   4: 75.877 ns/op
# Warmup Iteration   5: 75.817 ns/op
Iteration   1: 75.887 ns/op
Iteration   2: 75.909 ns/op
Iteration   3: 75.721 ns/op
Iteration   4: 75.877 ns/op
Iteration   5: 75.730 ns/op

# Run progress: 6.29% complete, ETA 01:43:07
# Fork: 2 of 2
# Warmup Iteration   1: 76.591 ns/op
# Warmup Iteration   2: 76.494 ns/op
# Warmup Iteration   3: 76.001 ns/op
# Warmup Iteration   4: 76.001 ns/op
# Warmup Iteration   5: 75.865 ns/op
Iteration   1: 75.850 ns/op
Iteration   2: 75.949 ns/op
Iteration   3: 75.900 ns/op
Iteration   4: 76.023 ns/op
Iteration   5: 75.747 ns/op


Result "baselineAtan":
  75.859 ±(99.9%) 0.150 ns/op [Average]
  (min, avg, max) = (75.721, 75.859, 76.023), stdev = 0.099
  CI (99.9%): [75.709, 76.009] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 30, b = 1000)

# Run progress: 6.46% complete, ETA 01:42:56
# Fork: 1 of 2
# Warmup Iteration   1: 76.321 ns/op
# Warmup Iteration   2: 76.177 ns/op
# Warmup Iteration   3: 75.757 ns/op
# Warmup Iteration   4: 75.750 ns/op
# Warmup Iteration   5: 75.900 ns/op
Iteration   1: 75.700 ns/op
Iteration   2: 75.889 ns/op
Iteration   3: 75.769 ns/op
Iteration   4: 75.904 ns/op
Iteration   5: 75.881 ns/op

# Run progress: 6.63% complete, ETA 01:42:45
# Fork: 2 of 2
# Warmup Iteration   1: 76.482 ns/op
# Warmup Iteration   2: 76.217 ns/op
# Warmup Iteration   3: 75.841 ns/op
# Warmup Iteration   4: 75.932 ns/op
# Warmup Iteration   5: 75.784 ns/op
Iteration   1: 75.994 ns/op
Iteration   2: 75.925 ns/op
Iteration   3: 75.877 ns/op
Iteration   4: 75.877 ns/op
Iteration   5: 76.012 ns/op


Result "baselineAtan":
  75.883 ±(99.9%) 0.141 ns/op [Average]
  (min, avg, max) = (75.700, 75.883, 76.012), stdev = 0.093
  CI (99.9%): [75.742, 76.023] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 30, b = 10000)

# Run progress: 6.80% complete, ETA 01:42:34
# Fork: 1 of 2
# Warmup Iteration   1: 76.256 ns/op
# Warmup Iteration   2: 76.090 ns/op
# Warmup Iteration   3: 75.667 ns/op
# Warmup Iteration   4: 75.904 ns/op
# Warmup Iteration   5: 75.745 ns/op
Iteration   1: 75.653 ns/op
Iteration   2: 75.748 ns/op
Iteration   3: 75.753 ns/op
Iteration   4: 75.603 ns/op
Iteration   5: 75.744 ns/op

# Run progress: 6.97% complete, ETA 01:42:22
# Fork: 2 of 2
# Warmup Iteration   1: 76.449 ns/op
# Warmup Iteration   2: 76.211 ns/op
# Warmup Iteration   3: 75.803 ns/op
# Warmup Iteration   4: 75.797 ns/op
# Warmup Iteration   5: 75.935 ns/op
Iteration   1: 76.066 ns/op
Iteration   2: 75.941 ns/op
Iteration   3: 75.934 ns/op
Iteration   4: 75.808 ns/op
Iteration   5: 76.675 ns/op


Result "baselineAtan":
  75.893 ±(99.9%) 0.466 ns/op [Average]
  (min, avg, max) = (75.603, 75.893, 76.675), stdev = 0.309
  CI (99.9%): [75.426, 76.359] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 45, b = 0.5)

# Run progress: 7.14% complete, ETA 01:42:11
# Fork: 1 of 2
# Warmup Iteration   1: 52.320 ns/op
# Warmup Iteration   2: 52.324 ns/op
# Warmup Iteration   3: 51.685 ns/op
# Warmup Iteration   4: 51.814 ns/op
# Warmup Iteration   5: 51.697 ns/op
Iteration   1: 51.893 ns/op
Iteration   2: 51.833 ns/op
Iteration   3: 51.873 ns/op
Iteration   4: 52.727 ns/op
Iteration   5: 52.584 ns/op

# Run progress: 7.31% complete, ETA 01:42:00
# Fork: 2 of 2
# Warmup Iteration   1: 52.295 ns/op
# Warmup Iteration   2: 52.475 ns/op
# Warmup Iteration   3: 51.825 ns/op
# Warmup Iteration   4: 51.866 ns/op
# Warmup Iteration   5: 51.879 ns/op
Iteration   1: 51.877 ns/op
Iteration   2: 51.794 ns/op
Iteration   3: 51.877 ns/op
Iteration   4: 51.886 ns/op
Iteration   5: 51.979 ns/op


Result "baselineAtan":
  52.032 ±(99.9%) 0.504 ns/op [Average]
  (min, avg, max) = (51.794, 52.032, 52.727), stdev = 0.334
  CI (99.9%): [51.528, 52.537] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 45, b = 1)

# Run progress: 7.48% complete, ETA 01:41:49
# Fork: 1 of 2
# Warmup Iteration   1: 52.212 ns/op
# Warmup Iteration   2: 52.245 ns/op
# Warmup Iteration   3: 51.942 ns/op
# Warmup Iteration   4: 51.955 ns/op
# Warmup Iteration   5: 52.011 ns/op
Iteration   1: 51.977 ns/op
Iteration   2: 51.947 ns/op
Iteration   3: 52.104 ns/op
Iteration   4: 51.986 ns/op
Iteration   5: 51.847 ns/op

# Run progress: 7.65% complete, ETA 01:41:37
# Fork: 2 of 2
# Warmup Iteration   1: 52.303 ns/op
# Warmup Iteration   2: 52.312 ns/op
# Warmup Iteration   3: 51.965 ns/op
# Warmup Iteration   4: 51.990 ns/op
# Warmup Iteration   5: 51.679 ns/op
Iteration   1: 51.927 ns/op
Iteration   2: 51.792 ns/op
Iteration   3: 51.672 ns/op
Iteration   4: 51.886 ns/op
Iteration   5: 51.796 ns/op


Result "baselineAtan":
  51.893 ±(99.9%) 0.185 ns/op [Average]
  (min, avg, max) = (51.672, 51.893, 52.104), stdev = 0.122
  CI (99.9%): [51.708, 52.078] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 45, b = 5)

# Run progress: 7.82% complete, ETA 01:41:26
# Fork: 1 of 2
# Warmup Iteration   1: 74.321 ns/op
# Warmup Iteration   2: 74.084 ns/op
# Warmup Iteration   3: 73.112 ns/op
# Warmup Iteration   4: 73.092 ns/op
# Warmup Iteration   5: 73.602 ns/op
Iteration   1: 73.202 ns/op
Iteration   2: 73.108 ns/op
Iteration   3: 73.119 ns/op
Iteration   4: 73.553 ns/op
Iteration   5: 73.596 ns/op

# Run progress: 7.99% complete, ETA 01:41:15
# Fork: 2 of 2
# Warmup Iteration   1: 74.125 ns/op
# Warmup Iteration   2: 73.899 ns/op
# Warmup Iteration   3: 73.288 ns/op
# Warmup Iteration   4: 73.196 ns/op
# Warmup Iteration   5: 73.059 ns/op
Iteration   1: 73.164 ns/op
Iteration   2: 73.079 ns/op
Iteration   3: 73.127 ns/op
Iteration   4: 73.241 ns/op
Iteration   5: 73.138 ns/op


Result "baselineAtan":
  73.233 ±(99.9%) 0.282 ns/op [Average]
  (min, avg, max) = (73.079, 73.233, 73.596), stdev = 0.186
  CI (99.9%): [72.951, 73.514] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 45, b = 10)

# Run progress: 8.16% complete, ETA 01:41:03
# Fork: 1 of 2
# Warmup Iteration   1: 75.623 ns/op
# Warmup Iteration   2: 75.716 ns/op
# Warmup Iteration   3: 74.913 ns/op
# Warmup Iteration   4: 75.032 ns/op
# Warmup Iteration   5: 74.954 ns/op
Iteration   1: 74.967 ns/op
Iteration   2: 74.833 ns/op
Iteration   3: 74.890 ns/op
Iteration   4: 74.931 ns/op
Iteration   5: 74.921 ns/op

# Run progress: 8.33% complete, ETA 01:40:52
# Fork: 2 of 2
# Warmup Iteration   1: 75.554 ns/op
# Warmup Iteration   2: 75.598 ns/op
# Warmup Iteration   3: 75.033 ns/op
# Warmup Iteration   4: 75.043 ns/op
# Warmup Iteration   5: 74.871 ns/op
Iteration   1: 74.899 ns/op
Iteration   2: 74.833 ns/op
Iteration   3: 75.032 ns/op
Iteration   4: 75.044 ns/op
Iteration   5: 75.200 ns/op


Result "baselineAtan":
  74.955 ±(99.9%) 0.170 ns/op [Average]
  (min, avg, max) = (74.833, 74.955, 75.200), stdev = 0.112
  CI (99.9%): [74.785, 75.124] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 45, b = 100)

# Run progress: 8.50% complete, ETA 01:40:41
# Fork: 1 of 2
# Warmup Iteration   1: 76.623 ns/op
# Warmup Iteration   2: 76.611 ns/op
# Warmup Iteration   3: 75.896 ns/op
# Warmup Iteration   4: 75.844 ns/op
# Warmup Iteration   5: 75.896 ns/op
Iteration   1: 76.056 ns/op
Iteration   2: 75.961 ns/op
Iteration   3: 75.821 ns/op
Iteration   4: 75.768 ns/op
Iteration   5: 76.066 ns/op

# Run progress: 8.67% complete, ETA 01:40:30
# Fork: 2 of 2
# Warmup Iteration   1: 76.425 ns/op
# Warmup Iteration   2: 76.158 ns/op
# Warmup Iteration   3: 75.702 ns/op
# Warmup Iteration   4: 75.811 ns/op
# Warmup Iteration   5: 75.760 ns/op
Iteration   1: 75.727 ns/op
Iteration   2: 75.865 ns/op
Iteration   3: 75.655 ns/op
Iteration   4: 75.753 ns/op
Iteration   5: 76.445 ns/op


Result "baselineAtan":
  75.912 ±(99.9%) 0.352 ns/op [Average]
  (min, avg, max) = (75.655, 75.912, 76.445), stdev = 0.233
  CI (99.9%): [75.560, 76.264] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 45, b = 1000)

# Run progress: 8.84% complete, ETA 01:40:18
# Fork: 1 of 2
# Warmup Iteration   1: 76.501 ns/op
# Warmup Iteration   2: 76.180 ns/op
# Warmup Iteration   3: 75.849 ns/op
# Warmup Iteration   4: 75.804 ns/op
# Warmup Iteration   5: 75.892 ns/op
Iteration   1: 75.775 ns/op
Iteration   2: 75.896 ns/op
Iteration   3: 75.755 ns/op
Iteration   4: 75.855 ns/op
Iteration   5: 75.922 ns/op

# Run progress: 9.01% complete, ETA 01:40:07
# Fork: 2 of 2
# Warmup Iteration   1: 76.307 ns/op
# Warmup Iteration   2: 76.004 ns/op
# Warmup Iteration   3: 75.886 ns/op
# Warmup Iteration   4: 75.902 ns/op
# Warmup Iteration   5: 75.836 ns/op
Iteration   1: 76.141 ns/op
Iteration   2: 75.913 ns/op
Iteration   3: 76.019 ns/op
Iteration   4: 75.819 ns/op
Iteration   5: 75.856 ns/op


Result "baselineAtan":
  75.895 ±(99.9%) 0.175 ns/op [Average]
  (min, avg, max) = (75.755, 75.895, 76.141), stdev = 0.115
  CI (99.9%): [75.721, 76.070] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 45, b = 10000)

# Run progress: 9.18% complete, ETA 01:39:56
# Fork: 1 of 2
# Warmup Iteration   1: 76.622 ns/op
# Warmup Iteration   2: 76.219 ns/op
# Warmup Iteration   3: 75.834 ns/op
# Warmup Iteration   4: 75.854 ns/op
# Warmup Iteration   5: 75.964 ns/op
Iteration   1: 75.886 ns/op
Iteration   2: 75.746 ns/op
Iteration   3: 75.825 ns/op
Iteration   4: 75.955 ns/op
Iteration   5: 75.749 ns/op

# Run progress: 9.35% complete, ETA 01:39:45
# Fork: 2 of 2
# Warmup Iteration   1: 76.444 ns/op
# Warmup Iteration   2: 76.258 ns/op
# Warmup Iteration   3: 76.114 ns/op
# Warmup Iteration   4: 75.781 ns/op
# Warmup Iteration   5: 75.850 ns/op
Iteration   1: 75.914 ns/op
Iteration   2: 75.939 ns/op
Iteration   3: 75.985 ns/op
Iteration   4: 75.980 ns/op
Iteration   5: 75.967 ns/op


Result "baselineAtan":
  75.895 ±(99.9%) 0.138 ns/op [Average]
  (min, avg, max) = (75.746, 75.895, 75.985), stdev = 0.091
  CI (99.9%): [75.756, 76.033] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 60, b = 0.5)

# Run progress: 9.52% complete, ETA 01:39:33
# Fork: 1 of 2
# Warmup Iteration   1: 52.378 ns/op
# Warmup Iteration   2: 52.352 ns/op
# Warmup Iteration   3: 51.897 ns/op
# Warmup Iteration   4: 51.962 ns/op
# Warmup Iteration   5: 51.994 ns/op
Iteration   1: 51.977 ns/op
Iteration   2: 51.804 ns/op
Iteration   3: 51.911 ns/op
Iteration   4: 52.597 ns/op
Iteration   5: 52.522 ns/op

# Run progress: 9.69% complete, ETA 01:39:22
# Fork: 2 of 2
# Warmup Iteration   1: 52.335 ns/op
# Warmup Iteration   2: 52.323 ns/op
# Warmup Iteration   3: 51.862 ns/op
# Warmup Iteration   4: 51.851 ns/op
# Warmup Iteration   5: 51.843 ns/op
Iteration   1: 51.903 ns/op
Iteration   2: 51.873 ns/op
Iteration   3: 51.832 ns/op
Iteration   4: 51.855 ns/op
Iteration   5: 51.852 ns/op


Result "baselineAtan":
  52.013 ±(99.9%) 0.442 ns/op [Average]
  (min, avg, max) = (51.804, 52.013, 52.597), stdev = 0.293
  CI (99.9%): [51.570, 52.455] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 60, b = 1)

# Run progress: 9.86% complete, ETA 01:39:11
# Fork: 1 of 2
# Warmup Iteration   1: 52.210 ns/op
# Warmup Iteration   2: 52.300 ns/op
# Warmup Iteration   3: 51.851 ns/op
# Warmup Iteration   4: 51.868 ns/op
# Warmup Iteration   5: 51.786 ns/op
Iteration   1: 51.826 ns/op
Iteration   2: 51.717 ns/op
Iteration   3: 51.832 ns/op
Iteration   4: 51.762 ns/op
Iteration   5: 51.867 ns/op

# Run progress: 10.03% complete, ETA 01:39:00
# Fork: 2 of 2
# Warmup Iteration   1: 52.244 ns/op
# Warmup Iteration   2: 52.314 ns/op
# Warmup Iteration   3: 51.893 ns/op
# Warmup Iteration   4: 51.711 ns/op
# Warmup Iteration   5: 51.902 ns/op
Iteration   1: 51.893 ns/op
Iteration   2: 51.840 ns/op
Iteration   3: 51.799 ns/op
Iteration   4: 51.872 ns/op
Iteration   5: 51.801 ns/op


Result "baselineAtan":
  51.821 ±(99.9%) 0.081 ns/op [Average]
  (min, avg, max) = (51.717, 51.821, 51.893), stdev = 0.053
  CI (99.9%): [51.740, 51.902] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 60, b = 5)

# Run progress: 10.20% complete, ETA 01:38:49
# Fork: 1 of 2
# Warmup Iteration   1: 73.897 ns/op
# Warmup Iteration   2: 73.992 ns/op
# Warmup Iteration   3: 73.066 ns/op
# Warmup Iteration   4: 73.234 ns/op
# Warmup Iteration   5: 72.966 ns/op
Iteration   1: 73.081 ns/op
Iteration   2: 72.992 ns/op
Iteration   3: 73.020 ns/op
Iteration   4: 72.933 ns/op
Iteration   5: 73.257 ns/op

# Run progress: 10.37% complete, ETA 01:38:38
# Fork: 2 of 2
# Warmup Iteration   1: 73.910 ns/op
# Warmup Iteration   2: 73.938 ns/op
# Warmup Iteration   3: 73.217 ns/op
# Warmup Iteration   4: 73.208 ns/op
# Warmup Iteration   5: 73.426 ns/op
Iteration   1: 73.243 ns/op
Iteration   2: 73.380 ns/op
Iteration   3: 73.404 ns/op
Iteration   4: 73.258 ns/op
Iteration   5: 73.160 ns/op


Result "baselineAtan":
  73.173 ±(99.9%) 0.246 ns/op [Average]
  (min, avg, max) = (72.933, 73.173, 73.404), stdev = 0.162
  CI (99.9%): [72.927, 73.418] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 60, b = 10)

# Run progress: 10.54% complete, ETA 01:38:26
# Fork: 1 of 2
# Warmup Iteration   1: 75.601 ns/op
# Warmup Iteration   2: 75.546 ns/op
# Warmup Iteration   3: 74.736 ns/op
# Warmup Iteration   4: 74.753 ns/op
# Warmup Iteration   5: 74.651 ns/op
Iteration   1: 74.680 ns/op
Iteration   2: 74.719 ns/op
Iteration   3: 74.672 ns/op
Iteration   4: 74.749 ns/op
Iteration   5: 74.716 ns/op

# Run progress: 10.71% complete, ETA 01:38:15
# Fork: 2 of 2
# Warmup Iteration   1: 75.509 ns/op
# Warmup Iteration   2: 75.580 ns/op
# Warmup Iteration   3: 74.975 ns/op
# Warmup Iteration   4: 75.004 ns/op
# Warmup Iteration   5: 74.813 ns/op
Iteration   1: 74.817 ns/op
Iteration   2: 74.781 ns/op
Iteration   3: 74.873 ns/op
Iteration   4: 74.832 ns/op
Iteration   5: 74.722 ns/op


Result "baselineAtan":
  74.756 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (74.672, 74.756, 74.873), stdev = 0.067
  CI (99.9%): [74.654, 74.858] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 60, b = 100)

# Run progress: 10.88% complete, ETA 01:38:04
# Fork: 1 of 2
# Warmup Iteration   1: 76.168 ns/op
# Warmup Iteration   2: 76.348 ns/op
# Warmup Iteration   3: 75.913 ns/op
# Warmup Iteration   4: 75.979 ns/op
# Warmup Iteration   5: 75.880 ns/op
Iteration   1: 75.677 ns/op
Iteration   2: 75.659 ns/op
Iteration   3: 75.907 ns/op
Iteration   4: 75.752 ns/op
Iteration   5: 76.035 ns/op

# Run progress: 11.05% complete, ETA 01:37:53
# Fork: 2 of 2
# Warmup Iteration   1: 76.382 ns/op
# Warmup Iteration   2: 76.273 ns/op
# Warmup Iteration   3: 75.808 ns/op
# Warmup Iteration   4: 75.772 ns/op
# Warmup Iteration   5: 75.837 ns/op
Iteration   1: 75.785 ns/op
Iteration   2: 75.876 ns/op
Iteration   3: 75.943 ns/op
Iteration   4: 75.664 ns/op
Iteration   5: 75.814 ns/op


Result "baselineAtan":
  75.811 ±(99.9%) 0.194 ns/op [Average]
  (min, avg, max) = (75.659, 75.811, 76.035), stdev = 0.128
  CI (99.9%): [75.617, 76.005] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 60, b = 1000)

# Run progress: 11.22% complete, ETA 01:37:41
# Fork: 1 of 2
# Warmup Iteration   1: 76.428 ns/op
# Warmup Iteration   2: 76.165 ns/op
# Warmup Iteration   3: 75.659 ns/op
# Warmup Iteration   4: 75.974 ns/op
# Warmup Iteration   5: 75.780 ns/op
Iteration   1: 75.763 ns/op
Iteration   2: 75.926 ns/op
Iteration   3: 75.775 ns/op
Iteration   4: 75.874 ns/op
Iteration   5: 75.826 ns/op

# Run progress: 11.39% complete, ETA 01:37:30
# Fork: 2 of 2
# Warmup Iteration   1: 76.557 ns/op
# Warmup Iteration   2: 76.343 ns/op
# Warmup Iteration   3: 75.873 ns/op
# Warmup Iteration   4: 75.757 ns/op
# Warmup Iteration   5: 75.751 ns/op
Iteration   1: 75.830 ns/op
Iteration   2: 75.848 ns/op
Iteration   3: 75.965 ns/op
Iteration   4: 75.590 ns/op
Iteration   5: 75.643 ns/op


Result "baselineAtan":
  75.804 ±(99.9%) 0.177 ns/op [Average]
  (min, avg, max) = (75.590, 75.804, 75.965), stdev = 0.117
  CI (99.9%): [75.627, 75.981] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 60, b = 10000)

# Run progress: 11.56% complete, ETA 01:37:19
# Fork: 1 of 2
# Warmup Iteration   1: 76.559 ns/op
# Warmup Iteration   2: 76.245 ns/op
# Warmup Iteration   3: 75.983 ns/op
# Warmup Iteration   4: 75.896 ns/op
# Warmup Iteration   5: 75.804 ns/op
Iteration   1: 75.953 ns/op
Iteration   2: 75.841 ns/op
Iteration   3: 75.917 ns/op
Iteration   4: 76.003 ns/op
Iteration   5: 75.877 ns/op

# Run progress: 11.73% complete, ETA 01:37:07
# Fork: 2 of 2
# Warmup Iteration   1: 76.430 ns/op
# Warmup Iteration   2: 76.121 ns/op
# Warmup Iteration   3: 75.751 ns/op
# Warmup Iteration   4: 75.838 ns/op
# Warmup Iteration   5: 75.665 ns/op
Iteration   1: 75.775 ns/op
Iteration   2: 75.767 ns/op
Iteration   3: 75.761 ns/op
Iteration   4: 75.627 ns/op
Iteration   5: 75.985 ns/op


Result "baselineAtan":
  75.851 ±(99.9%) 0.180 ns/op [Average]
  (min, avg, max) = (75.627, 75.851, 76.003), stdev = 0.119
  CI (99.9%): [75.671, 76.031] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 85, b = 0.5)

# Run progress: 11.90% complete, ETA 01:36:56
# Fork: 1 of 2
# Warmup Iteration   1: 52.505 ns/op
# Warmup Iteration   2: 52.682 ns/op
# Warmup Iteration   3: 51.959 ns/op
# Warmup Iteration   4: 51.939 ns/op
# Warmup Iteration   5: 51.912 ns/op
Iteration   1: 51.937 ns/op
Iteration   2: 52.021 ns/op
Iteration   3: 51.901 ns/op
Iteration   4: 51.939 ns/op
Iteration   5: 52.786 ns/op

# Run progress: 12.07% complete, ETA 01:36:45
# Fork: 2 of 2
# Warmup Iteration   1: 52.258 ns/op
# Warmup Iteration   2: 52.394 ns/op
# Warmup Iteration   3: 51.917 ns/op
# Warmup Iteration   4: 51.882 ns/op
# Warmup Iteration   5: 51.763 ns/op
Iteration   1: 51.811 ns/op
Iteration   2: 51.793 ns/op
Iteration   3: 51.781 ns/op
Iteration   4: 51.796 ns/op
Iteration   5: 51.775 ns/op


Result "baselineAtan":
  51.954 ±(99.9%) 0.460 ns/op [Average]
  (min, avg, max) = (51.775, 51.954, 52.786), stdev = 0.304
  CI (99.9%): [51.494, 52.414] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 85, b = 1)

# Run progress: 12.24% complete, ETA 01:36:34
# Fork: 1 of 2
# Warmup Iteration   1: 52.350 ns/op
# Warmup Iteration   2: 52.315 ns/op
# Warmup Iteration   3: 51.845 ns/op
# Warmup Iteration   4: 51.884 ns/op
# Warmup Iteration   5: 51.925 ns/op
Iteration   1: 51.895 ns/op
Iteration   2: 51.852 ns/op
Iteration   3: 51.858 ns/op
Iteration   4: 51.847 ns/op
Iteration   5: 51.802 ns/op

# Run progress: 12.41% complete, ETA 01:36:22
# Fork: 2 of 2
# Warmup Iteration   1: 52.230 ns/op
# Warmup Iteration   2: 52.386 ns/op
# Warmup Iteration   3: 51.794 ns/op
# Warmup Iteration   4: 51.788 ns/op
# Warmup Iteration   5: 51.795 ns/op
Iteration   1: 51.850 ns/op
Iteration   2: 51.772 ns/op
Iteration   3: 51.758 ns/op
Iteration   4: 51.865 ns/op
Iteration   5: 51.673 ns/op


Result "baselineAtan":
  51.817 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (51.673, 51.817, 51.895), stdev = 0.067
  CI (99.9%): [51.716, 51.918] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 85, b = 5)

# Run progress: 12.59% complete, ETA 01:36:11
# Fork: 1 of 2
# Warmup Iteration   1: 74.333 ns/op
# Warmup Iteration   2: 74.390 ns/op
# Warmup Iteration   3: 73.386 ns/op
# Warmup Iteration   4: 73.296 ns/op
# Warmup Iteration   5: 73.235 ns/op
Iteration   1: 73.302 ns/op
Iteration   2: 73.393 ns/op
Iteration   3: 73.348 ns/op
Iteration   4: 73.584 ns/op
Iteration   5: 73.603 ns/op

# Run progress: 12.76% complete, ETA 01:36:00
# Fork: 2 of 2
# Warmup Iteration   1: 73.965 ns/op
# Warmup Iteration   2: 73.872 ns/op
# Warmup Iteration   3: 73.271 ns/op
# Warmup Iteration   4: 72.974 ns/op
# Warmup Iteration   5: 73.223 ns/op
Iteration   1: 73.185 ns/op
Iteration   2: 73.170 ns/op
Iteration   3: 73.055 ns/op
Iteration   4: 73.132 ns/op
Iteration   5: 73.126 ns/op


Result "baselineAtan":
  73.290 ±(99.9%) 0.290 ns/op [Average]
  (min, avg, max) = (73.055, 73.290, 73.603), stdev = 0.192
  CI (99.9%): [73.000, 73.580] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 85, b = 10)

# Run progress: 12.93% complete, ETA 01:35:49
# Fork: 1 of 2
# Warmup Iteration   1: 75.466 ns/op
# Warmup Iteration   2: 75.559 ns/op
# Warmup Iteration   3: 74.684 ns/op
# Warmup Iteration   4: 74.724 ns/op
# Warmup Iteration   5: 74.731 ns/op
Iteration   1: 74.704 ns/op
Iteration   2: 74.740 ns/op
Iteration   3: 74.707 ns/op
Iteration   4: 74.893 ns/op
Iteration   5: 74.900 ns/op

# Run progress: 13.10% complete, ETA 01:35:38
# Fork: 2 of 2
# Warmup Iteration   1: 75.631 ns/op
# Warmup Iteration   2: 75.644 ns/op
# Warmup Iteration   3: 74.719 ns/op
# Warmup Iteration   4: 74.744 ns/op
# Warmup Iteration   5: 74.867 ns/op
Iteration   1: 74.857 ns/op
Iteration   2: 74.849 ns/op
Iteration   3: 74.816 ns/op
Iteration   4: 75.545 ns/op
Iteration   5: 75.587 ns/op


Result "baselineAtan":
  74.960 ±(99.9%) 0.495 ns/op [Average]
  (min, avg, max) = (74.704, 74.960, 75.587), stdev = 0.327
  CI (99.9%): [74.465, 75.455] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 85, b = 100)

# Run progress: 13.27% complete, ETA 01:35:26
# Fork: 1 of 2
# Warmup Iteration   1: 76.517 ns/op
# Warmup Iteration   2: 76.031 ns/op
# Warmup Iteration   3: 75.687 ns/op
# Warmup Iteration   4: 75.580 ns/op
# Warmup Iteration   5: 75.752 ns/op
Iteration   1: 75.745 ns/op
Iteration   2: 75.682 ns/op
Iteration   3: 75.840 ns/op
Iteration   4: 75.688 ns/op
Iteration   5: 75.963 ns/op

# Run progress: 13.44% complete, ETA 01:35:15
# Fork: 2 of 2
# Warmup Iteration   1: 76.687 ns/op
# Warmup Iteration   2: 76.471 ns/op
# Warmup Iteration   3: 76.026 ns/op
# Warmup Iteration   4: 75.968 ns/op
# Warmup Iteration   5: 75.872 ns/op
Iteration   1: 75.986 ns/op
Iteration   2: 76.164 ns/op
Iteration   3: 76.005 ns/op
Iteration   4: 75.821 ns/op
Iteration   5: 75.930 ns/op


Result "baselineAtan":
  75.882 ±(99.9%) 0.234 ns/op [Average]
  (min, avg, max) = (75.682, 75.882, 76.164), stdev = 0.155
  CI (99.9%): [75.648, 76.117] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 85, b = 1000)

# Run progress: 13.61% complete, ETA 01:35:04
# Fork: 1 of 2
# Warmup Iteration   1: 76.597 ns/op
# Warmup Iteration   2: 76.197 ns/op
# Warmup Iteration   3: 75.779 ns/op
# Warmup Iteration   4: 75.800 ns/op
# Warmup Iteration   5: 76.010 ns/op
Iteration   1: 75.829 ns/op
Iteration   2: 75.715 ns/op
Iteration   3: 75.630 ns/op
Iteration   4: 76.686 ns/op
Iteration   5: 76.445 ns/op

# Run progress: 13.78% complete, ETA 01:34:53
# Fork: 2 of 2
# Warmup Iteration   1: 76.405 ns/op
# Warmup Iteration   2: 76.264 ns/op
# Warmup Iteration   3: 75.989 ns/op
# Warmup Iteration   4: 76.059 ns/op
# Warmup Iteration   5: 76.093 ns/op
Iteration   1: 76.161 ns/op
Iteration   2: 76.006 ns/op
Iteration   3: 76.433 ns/op
Iteration   4: 76.184 ns/op
Iteration   5: 76.114 ns/op


Result "baselineAtan":
  76.120 ±(99.9%) 0.512 ns/op [Average]
  (min, avg, max) = (75.630, 76.120, 76.686), stdev = 0.339
  CI (99.9%): [75.608, 76.632] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 85, b = 10000)

# Run progress: 13.95% complete, ETA 01:34:41
# Fork: 1 of 2
# Warmup Iteration   1: 76.353 ns/op
# Warmup Iteration   2: 76.058 ns/op
# Warmup Iteration   3: 75.809 ns/op
# Warmup Iteration   4: 75.744 ns/op
# Warmup Iteration   5: 75.553 ns/op
Iteration   1: 75.711 ns/op
Iteration   2: 75.889 ns/op
Iteration   3: 75.698 ns/op
Iteration   4: 75.832 ns/op
Iteration   5: 76.106 ns/op

# Run progress: 14.12% complete, ETA 01:34:30
# Fork: 2 of 2
# Warmup Iteration   1: 76.638 ns/op
# Warmup Iteration   2: 76.368 ns/op
# Warmup Iteration   3: 75.970 ns/op
# Warmup Iteration   4: 75.932 ns/op
# Warmup Iteration   5: 75.860 ns/op
Iteration   1: 75.950 ns/op
Iteration   2: 75.864 ns/op
Iteration   3: 75.929 ns/op
Iteration   4: 75.930 ns/op
Iteration   5: 75.816 ns/op


Result "baselineAtan":
  75.873 ±(99.9%) 0.181 ns/op [Average]
  (min, avg, max) = (75.698, 75.873, 76.106), stdev = 0.120
  CI (99.9%): [75.692, 76.053] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 90, b = 0.5)

# Run progress: 14.29% complete, ETA 01:34:19
# Fork: 1 of 2
# Warmup Iteration   1: 52.186 ns/op
# Warmup Iteration   2: 52.372 ns/op
# Warmup Iteration   3: 51.800 ns/op
# Warmup Iteration   4: 51.797 ns/op
# Warmup Iteration   5: 51.909 ns/op
Iteration   1: 51.760 ns/op
Iteration   2: 51.847 ns/op
Iteration   3: 51.881 ns/op
Iteration   4: 51.770 ns/op
Iteration   5: 51.698 ns/op

# Run progress: 14.46% complete, ETA 01:34:08
# Fork: 2 of 2
# Warmup Iteration   1: 52.384 ns/op
# Warmup Iteration   2: 52.524 ns/op
# Warmup Iteration   3: 51.839 ns/op
# Warmup Iteration   4: 51.854 ns/op
# Warmup Iteration   5: 51.891 ns/op
Iteration   1: 51.809 ns/op
Iteration   2: 51.880 ns/op
Iteration   3: 51.975 ns/op
Iteration   4: 51.927 ns/op
Iteration   5: 51.868 ns/op


Result "baselineAtan":
  51.842 ±(99.9%) 0.126 ns/op [Average]
  (min, avg, max) = (51.698, 51.842, 51.975), stdev = 0.083
  CI (99.9%): [51.716, 51.967] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 90, b = 1)

# Run progress: 14.63% complete, ETA 01:33:57
# Fork: 1 of 2
# Warmup Iteration   1: 52.173 ns/op
# Warmup Iteration   2: 52.232 ns/op
# Warmup Iteration   3: 51.788 ns/op
# Warmup Iteration   4: 51.739 ns/op
# Warmup Iteration   5: 51.798 ns/op
Iteration   1: 51.580 ns/op
Iteration   2: 51.676 ns/op
Iteration   3: 51.592 ns/op
Iteration   4: 51.729 ns/op
Iteration   5: 51.863 ns/op

# Run progress: 14.80% complete, ETA 01:33:45
# Fork: 2 of 2
# Warmup Iteration   1: 52.386 ns/op
# Warmup Iteration   2: 52.432 ns/op
# Warmup Iteration   3: 51.924 ns/op
# Warmup Iteration   4: 51.998 ns/op
# Warmup Iteration   5: 51.872 ns/op
Iteration   1: 51.843 ns/op
Iteration   2: 51.872 ns/op
Iteration   3: 51.854 ns/op
Iteration   4: 51.779 ns/op
Iteration   5: 51.800 ns/op


Result "baselineAtan":
  51.759 ±(99.9%) 0.167 ns/op [Average]
  (min, avg, max) = (51.580, 51.759, 51.872), stdev = 0.110
  CI (99.9%): [51.592, 51.926] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 90, b = 5)

# Run progress: 14.97% complete, ETA 01:33:34
# Fork: 1 of 2
# Warmup Iteration   1: 74.142 ns/op
# Warmup Iteration   2: 74.375 ns/op
# Warmup Iteration   3: 73.755 ns/op
# Warmup Iteration   4: 73.738 ns/op
# Warmup Iteration   5: 73.805 ns/op
Iteration   1: 73.760 ns/op
Iteration   2: 73.723 ns/op
Iteration   3: 73.480 ns/op
Iteration   4: 73.867 ns/op
Iteration   5: 73.700 ns/op

# Run progress: 15.14% complete, ETA 01:33:23
# Fork: 2 of 2
# Warmup Iteration   1: 73.953 ns/op
# Warmup Iteration   2: 73.761 ns/op
# Warmup Iteration   3: 73.048 ns/op
# Warmup Iteration   4: 73.128 ns/op
# Warmup Iteration   5: 73.105 ns/op
Iteration   1: 73.148 ns/op
Iteration   2: 73.098 ns/op
Iteration   3: 73.039 ns/op
Iteration   4: 73.075 ns/op
Iteration   5: 73.063 ns/op


Result "baselineAtan":
  73.395 ±(99.9%) 0.517 ns/op [Average]
  (min, avg, max) = (73.039, 73.395, 73.867), stdev = 0.342
  CI (99.9%): [72.878, 73.913] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 90, b = 10)

# Run progress: 15.31% complete, ETA 01:33:12
# Fork: 1 of 2
# Warmup Iteration   1: 75.452 ns/op
# Warmup Iteration   2: 75.550 ns/op
# Warmup Iteration   3: 74.916 ns/op
# Warmup Iteration   4: 74.764 ns/op
# Warmup Iteration   5: 74.769 ns/op
Iteration   1: 75.166 ns/op
Iteration   2: 74.953 ns/op
Iteration   3: 75.008 ns/op
Iteration   4: 75.613 ns/op
Iteration   5: 75.804 ns/op

# Run progress: 15.48% complete, ETA 01:33:00
# Fork: 2 of 2
# Warmup Iteration   1: 75.358 ns/op
# Warmup Iteration   2: 75.372 ns/op
# Warmup Iteration   3: 74.798 ns/op
# Warmup Iteration   4: 74.611 ns/op
# Warmup Iteration   5: 74.621 ns/op
Iteration   1: 74.825 ns/op
Iteration   2: 74.719 ns/op
Iteration   3: 74.671 ns/op
Iteration   4: 74.755 ns/op
Iteration   5: 74.819 ns/op


Result "baselineAtan":
  75.033 ±(99.9%) 0.586 ns/op [Average]
  (min, avg, max) = (74.671, 75.033, 75.804), stdev = 0.388
  CI (99.9%): [74.448, 75.619] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 90, b = 100)

# Run progress: 15.65% complete, ETA 01:32:49
# Fork: 1 of 2
# Warmup Iteration   1: 76.405 ns/op
# Warmup Iteration   2: 76.210 ns/op
# Warmup Iteration   3: 76.024 ns/op
# Warmup Iteration   4: 75.811 ns/op
# Warmup Iteration   5: 75.863 ns/op
Iteration   1: 75.904 ns/op
Iteration   2: 75.771 ns/op
Iteration   3: 75.913 ns/op
Iteration   4: 75.781 ns/op
Iteration   5: 75.879 ns/op

# Run progress: 15.82% complete, ETA 01:32:38
# Fork: 2 of 2
# Warmup Iteration   1: 76.437 ns/op
# Warmup Iteration   2: 76.100 ns/op
# Warmup Iteration   3: 76.019 ns/op
# Warmup Iteration   4: 75.808 ns/op
# Warmup Iteration   5: 75.781 ns/op
Iteration   1: 75.775 ns/op
Iteration   2: 75.942 ns/op
Iteration   3: 75.780 ns/op
Iteration   4: 75.997 ns/op
Iteration   5: 75.732 ns/op


Result "baselineAtan":
  75.847 ±(99.9%) 0.136 ns/op [Average]
  (min, avg, max) = (75.732, 75.847, 75.997), stdev = 0.090
  CI (99.9%): [75.711, 75.984] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 90, b = 1000)

# Run progress: 15.99% complete, ETA 01:32:27
# Fork: 1 of 2
# Warmup Iteration   1: 76.640 ns/op
# Warmup Iteration   2: 76.389 ns/op
# Warmup Iteration   3: 76.071 ns/op
# Warmup Iteration   4: 75.888 ns/op
# Warmup Iteration   5: 75.934 ns/op
Iteration   1: 75.933 ns/op
Iteration   2: 76.056 ns/op
Iteration   3: 75.945 ns/op
Iteration   4: 75.938 ns/op
Iteration   5: 75.954 ns/op

# Run progress: 16.16% complete, ETA 01:32:15
# Fork: 2 of 2
# Warmup Iteration   1: 76.349 ns/op
# Warmup Iteration   2: 76.079 ns/op
# Warmup Iteration   3: 75.726 ns/op
# Warmup Iteration   4: 75.813 ns/op
# Warmup Iteration   5: 75.829 ns/op
Iteration   1: 75.756 ns/op
Iteration   2: 75.765 ns/op
Iteration   3: 75.760 ns/op
Iteration   4: 75.718 ns/op
Iteration   5: 75.809 ns/op


Result "baselineAtan":
  75.863 ±(99.9%) 0.174 ns/op [Average]
  (min, avg, max) = (75.718, 75.863, 76.056), stdev = 0.115
  CI (99.9%): [75.690, 76.037] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineAtan
# Parameters: (a = 90, b = 10000)

# Run progress: 16.33% complete, ETA 01:32:04
# Fork: 1 of 2
# Warmup Iteration   1: 76.508 ns/op
# Warmup Iteration   2: 76.365 ns/op
# Warmup Iteration   3: 75.930 ns/op
# Warmup Iteration   4: 75.716 ns/op
# Warmup Iteration   5: 75.796 ns/op
Iteration   1: 75.789 ns/op
Iteration   2: 75.649 ns/op
Iteration   3: 75.744 ns/op
Iteration   4: 76.615 ns/op
Iteration   5: 76.562 ns/op

# Run progress: 16.50% complete, ETA 01:31:53
# Fork: 2 of 2
# Warmup Iteration   1: 76.337 ns/op
# Warmup Iteration   2: 76.205 ns/op
# Warmup Iteration   3: 75.548 ns/op
# Warmup Iteration   4: 75.630 ns/op
# Warmup Iteration   5: 75.630 ns/op
Iteration   1: 75.821 ns/op
Iteration   2: 75.766 ns/op
Iteration   3: 75.625 ns/op
Iteration   4: 75.702 ns/op
Iteration   5: 75.841 ns/op


Result "baselineAtan":
  75.911 ±(99.9%) 0.550 ns/op [Average]
  (min, avg, max) = (75.625, 75.911, 76.615), stdev = 0.364
  CI (99.9%): [75.361, 76.461] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 0, b = 0.5)

# Run progress: 16.67% complete, ETA 01:31:42
# Fork: 1 of 2
# Warmup Iteration   1: 24.370 ns/op
# Warmup Iteration   2: 24.322 ns/op
# Warmup Iteration   3: 21.578 ns/op
# Warmup Iteration   4: 21.652 ns/op
# Warmup Iteration   5: 21.579 ns/op
Iteration   1: 21.542 ns/op
Iteration   2: 21.995 ns/op
Iteration   3: 21.580 ns/op
Iteration   4: 21.569 ns/op
Iteration   5: 21.993 ns/op

# Run progress: 16.84% complete, ETA 01:31:30
# Fork: 2 of 2
# Warmup Iteration   1: 24.412 ns/op
# Warmup Iteration   2: 24.324 ns/op
# Warmup Iteration   3: 21.623 ns/op
# Warmup Iteration   4: 22.031 ns/op
# Warmup Iteration   5: 21.586 ns/op
Iteration   1: 22.034 ns/op
Iteration   2: 21.577 ns/op
Iteration   3: 21.613 ns/op
Iteration   4: 22.021 ns/op
Iteration   5: 21.594 ns/op


Result "baselineCos":
  21.752 ±(99.9%) 0.338 ns/op [Average]
  (min, avg, max) = (21.542, 21.752, 22.034), stdev = 0.224
  CI (99.9%): [21.414, 22.090] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 0, b = 1)

# Run progress: 17.01% complete, ETA 01:31:19
# Fork: 1 of 2
# Warmup Iteration   1: 23.833 ns/op
# Warmup Iteration   2: 23.762 ns/op
# Warmup Iteration   3: 21.576 ns/op
# Warmup Iteration   4: 21.557 ns/op
# Warmup Iteration   5: 21.988 ns/op
Iteration   1: 21.587 ns/op
Iteration   2: 21.995 ns/op
Iteration   3: 21.564 ns/op
Iteration   4: 21.517 ns/op
Iteration   5: 21.552 ns/op

# Run progress: 17.18% complete, ETA 01:31:08
# Fork: 2 of 2
# Warmup Iteration   1: 24.376 ns/op
# Warmup Iteration   2: 24.407 ns/op
# Warmup Iteration   3: 21.568 ns/op
# Warmup Iteration   4: 21.591 ns/op
# Warmup Iteration   5: 21.636 ns/op
Iteration   1: 21.605 ns/op
Iteration   2: 21.614 ns/op
Iteration   3: 21.596 ns/op
Iteration   4: 21.656 ns/op
Iteration   5: 21.634 ns/op


Result "baselineCos":
  21.632 ±(99.9%) 0.202 ns/op [Average]
  (min, avg, max) = (21.517, 21.632, 21.995), stdev = 0.134
  CI (99.9%): [21.430, 21.834] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 0, b = 5)

# Run progress: 17.35% complete, ETA 01:30:57
# Fork: 1 of 2
# Warmup Iteration   1: 24.219 ns/op
# Warmup Iteration   2: 24.121 ns/op
# Warmup Iteration   3: 21.537 ns/op
# Warmup Iteration   4: 21.549 ns/op
# Warmup Iteration   5: 21.567 ns/op
Iteration   1: 21.559 ns/op
Iteration   2: 21.591 ns/op
Iteration   3: 21.582 ns/op
Iteration   4: 22.006 ns/op
Iteration   5: 21.528 ns/op

# Run progress: 17.52% complete, ETA 01:30:46
# Fork: 2 of 2
# Warmup Iteration   1: 24.417 ns/op
# Warmup Iteration   2: 24.274 ns/op
# Warmup Iteration   3: 22.073 ns/op
# Warmup Iteration   4: 21.596 ns/op
# Warmup Iteration   5: 21.600 ns/op
Iteration   1: 21.581 ns/op
Iteration   2: 22.041 ns/op
Iteration   3: 21.555 ns/op
Iteration   4: 21.613 ns/op
Iteration   5: 21.612 ns/op


Result "baselineCos":
  21.667 ±(99.9%) 0.287 ns/op [Average]
  (min, avg, max) = (21.528, 21.667, 22.041), stdev = 0.190
  CI (99.9%): [21.380, 21.954] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 0, b = 10)

# Run progress: 17.69% complete, ETA 01:30:34
# Fork: 1 of 2
# Warmup Iteration   1: 24.316 ns/op
# Warmup Iteration   2: 24.285 ns/op
# Warmup Iteration   3: 21.594 ns/op
# Warmup Iteration   4: 22.001 ns/op
# Warmup Iteration   5: 21.556 ns/op
Iteration   1: 21.949 ns/op
Iteration   2: 21.561 ns/op
Iteration   3: 21.504 ns/op
Iteration   4: 22.029 ns/op
Iteration   5: 21.570 ns/op

# Run progress: 17.86% complete, ETA 01:30:23
# Fork: 2 of 2
# Warmup Iteration   1: 24.441 ns/op
# Warmup Iteration   2: 24.309 ns/op
# Warmup Iteration   3: 21.581 ns/op
# Warmup Iteration   4: 21.608 ns/op
# Warmup Iteration   5: 22.042 ns/op
Iteration   1: 21.613 ns/op
Iteration   2: 21.628 ns/op
Iteration   3: 21.641 ns/op
Iteration   4: 21.607 ns/op
Iteration   5: 21.588 ns/op


Result "baselineCos":
  21.669 ±(99.9%) 0.263 ns/op [Average]
  (min, avg, max) = (21.504, 21.669, 22.029), stdev = 0.174
  CI (99.9%): [21.406, 21.932] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 0, b = 100)

# Run progress: 18.03% complete, ETA 01:30:12
# Fork: 1 of 2
# Warmup Iteration   1: 24.330 ns/op
# Warmup Iteration   2: 24.227 ns/op
# Warmup Iteration   3: 22.045 ns/op
# Warmup Iteration   4: 21.564 ns/op
# Warmup Iteration   5: 21.532 ns/op
Iteration   1: 21.634 ns/op
Iteration   2: 22.004 ns/op
Iteration   3: 21.524 ns/op
Iteration   4: 21.563 ns/op
Iteration   5: 21.965 ns/op

# Run progress: 18.20% complete, ETA 01:30:01
# Fork: 2 of 2
# Warmup Iteration   1: 24.347 ns/op
# Warmup Iteration   2: 24.335 ns/op
# Warmup Iteration   3: 21.594 ns/op
# Warmup Iteration   4: 21.608 ns/op
# Warmup Iteration   5: 21.984 ns/op
Iteration   1: 21.536 ns/op
Iteration   2: 21.581 ns/op
Iteration   3: 22.056 ns/op
Iteration   4: 21.555 ns/op
Iteration   5: 21.559 ns/op


Result "baselineCos":
  21.698 ±(99.9%) 0.329 ns/op [Average]
  (min, avg, max) = (21.524, 21.698, 22.056), stdev = 0.217
  CI (99.9%): [21.369, 22.026] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 0, b = 1000)

# Run progress: 18.37% complete, ETA 01:29:49
# Fork: 1 of 2
# Warmup Iteration   1: 24.297 ns/op
# Warmup Iteration   2: 24.286 ns/op
# Warmup Iteration   3: 21.982 ns/op
# Warmup Iteration   4: 21.579 ns/op
# Warmup Iteration   5: 21.588 ns/op
Iteration   1: 21.552 ns/op
Iteration   2: 21.569 ns/op
Iteration   3: 22.487 ns/op
Iteration   4: 21.540 ns/op
Iteration   5: 21.584 ns/op

# Run progress: 18.54% complete, ETA 01:29:38
# Fork: 2 of 2
# Warmup Iteration   1: 24.336 ns/op
# Warmup Iteration   2: 24.292 ns/op
# Warmup Iteration   3: 21.565 ns/op
# Warmup Iteration   4: 21.617 ns/op
# Warmup Iteration   5: 21.553 ns/op
Iteration   1: 21.565 ns/op
Iteration   2: 21.541 ns/op
Iteration   3: 21.552 ns/op
Iteration   4: 21.591 ns/op
Iteration   5: 21.568 ns/op


Result "baselineCos":
  21.655 ±(99.9%) 0.443 ns/op [Average]
  (min, avg, max) = (21.540, 21.655, 22.487), stdev = 0.293
  CI (99.9%): [21.212, 22.098] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 0, b = 10000)

# Run progress: 18.71% complete, ETA 01:29:27
# Fork: 1 of 2
# Warmup Iteration   1: 24.358 ns/op
# Warmup Iteration   2: 24.321 ns/op
# Warmup Iteration   3: 21.627 ns/op
# Warmup Iteration   4: 22.035 ns/op
# Warmup Iteration   5: 21.609 ns/op
Iteration   1: 21.575 ns/op
Iteration   2: 21.581 ns/op
Iteration   3: 21.593 ns/op
Iteration   4: 21.622 ns/op
Iteration   5: 21.582 ns/op

# Run progress: 18.88% complete, ETA 01:29:16
# Fork: 2 of 2
# Warmup Iteration   1: 24.304 ns/op
# Warmup Iteration   2: 24.286 ns/op
# Warmup Iteration   3: 21.583 ns/op
# Warmup Iteration   4: 21.613 ns/op
# Warmup Iteration   5: 21.973 ns/op
Iteration   1: 21.607 ns/op
Iteration   2: 21.545 ns/op
Iteration   3: 21.540 ns/op
Iteration   4: 21.532 ns/op
Iteration   5: 21.556 ns/op


Result "baselineCos":
  21.573 ±(99.9%) 0.045 ns/op [Average]
  (min, avg, max) = (21.532, 21.573, 21.622), stdev = 0.030
  CI (99.9%): [21.528, 21.618] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 5, b = 0.5)

# Run progress: 19.05% complete, ETA 01:29:04
# Fork: 1 of 2
# Warmup Iteration   1: 104.538 ns/op
# Warmup Iteration   2: 104.352 ns/op
# Warmup Iteration   3: 38.559 ns/op
# Warmup Iteration   4: 38.452 ns/op
# Warmup Iteration   5: 38.529 ns/op
Iteration   1: 38.518 ns/op
Iteration   2: 38.470 ns/op
Iteration   3: 38.521 ns/op
Iteration   4: 38.442 ns/op
Iteration   5: 38.448 ns/op

# Run progress: 19.22% complete, ETA 01:28:53
# Fork: 2 of 2
# Warmup Iteration   1: 104.348 ns/op
# Warmup Iteration   2: 104.275 ns/op
# Warmup Iteration   3: 38.303 ns/op
# Warmup Iteration   4: 38.260 ns/op
# Warmup Iteration   5: 38.236 ns/op
Iteration   1: 38.235 ns/op
Iteration   2: 38.332 ns/op
Iteration   3: 38.278 ns/op
Iteration   4: 38.301 ns/op
Iteration   5: 38.283 ns/op


Result "baselineCos":
  38.383 ±(99.9%) 0.163 ns/op [Average]
  (min, avg, max) = (38.235, 38.383, 38.521), stdev = 0.108
  CI (99.9%): [38.220, 38.546] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 5, b = 1)

# Run progress: 19.39% complete, ETA 01:28:42
# Fork: 1 of 2
# Warmup Iteration   1: 104.466 ns/op
# Warmup Iteration   2: 104.205 ns/op
# Warmup Iteration   3: 38.367 ns/op
# Warmup Iteration   4: 38.317 ns/op
# Warmup Iteration   5: 38.290 ns/op
Iteration   1: 38.371 ns/op
Iteration   2: 38.292 ns/op
Iteration   3: 38.344 ns/op
Iteration   4: 38.475 ns/op
Iteration   5: 38.422 ns/op

# Run progress: 19.56% complete, ETA 01:28:31
# Fork: 2 of 2
# Warmup Iteration   1: 104.060 ns/op
# Warmup Iteration   2: 104.233 ns/op
# Warmup Iteration   3: 38.287 ns/op
# Warmup Iteration   4: 38.311 ns/op
# Warmup Iteration   5: 38.420 ns/op
Iteration   1: 38.370 ns/op
Iteration   2: 38.329 ns/op
Iteration   3: 38.228 ns/op
Iteration   4: 41.085 ns/op
Iteration   5: 41.058 ns/op


Result "baselineCos":
  38.897 ±(99.9%) 1.736 ns/op [Average]
  (min, avg, max) = (38.228, 38.897, 41.085), stdev = 1.148
  CI (99.9%): [37.162, 40.633] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 5, b = 5)

# Run progress: 19.73% complete, ETA 01:28:20
# Fork: 1 of 2
# Warmup Iteration   1: 105.603 ns/op
# Warmup Iteration   2: 105.223 ns/op
# Warmup Iteration   3: 38.983 ns/op
# Warmup Iteration   4: 39.024 ns/op
# Warmup Iteration   5: 38.972 ns/op
Iteration   1: 39.051 ns/op
Iteration   2: 38.971 ns/op
Iteration   3: 39.019 ns/op
Iteration   4: 38.341 ns/op
Iteration   5: 38.394 ns/op

# Run progress: 19.90% complete, ETA 01:28:08
# Fork: 2 of 2
# Warmup Iteration   1: 104.344 ns/op
# Warmup Iteration   2: 104.168 ns/op
# Warmup Iteration   3: 38.289 ns/op
# Warmup Iteration   4: 38.329 ns/op
# Warmup Iteration   5: 38.279 ns/op
Iteration   1: 38.282 ns/op
Iteration   2: 38.334 ns/op
Iteration   3: 38.386 ns/op
Iteration   4: 39.859 ns/op
Iteration   5: 39.883 ns/op


Result "baselineCos":
  38.852 ±(99.9%) 0.935 ns/op [Average]
  (min, avg, max) = (38.282, 38.852, 39.883), stdev = 0.618
  CI (99.9%): [37.917, 39.787] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 5, b = 10)

# Run progress: 20.07% complete, ETA 01:27:57
# Fork: 1 of 2
# Warmup Iteration   1: 105.022 ns/op
# Warmup Iteration   2: 104.929 ns/op
# Warmup Iteration   3: 38.408 ns/op
# Warmup Iteration   4: 38.397 ns/op
# Warmup Iteration   5: 38.395 ns/op
Iteration   1: 38.356 ns/op
Iteration   2: 38.403 ns/op
Iteration   3: 38.521 ns/op
Iteration   4: 38.431 ns/op
Iteration   5: 38.365 ns/op

# Run progress: 20.24% complete, ETA 01:27:46
# Fork: 2 of 2
# Warmup Iteration   1: 104.967 ns/op
# Warmup Iteration   2: 104.748 ns/op
# Warmup Iteration   3: 38.550 ns/op
# Warmup Iteration   4: 38.396 ns/op
# Warmup Iteration   5: 38.430 ns/op
Iteration   1: 38.466 ns/op
Iteration   2: 38.381 ns/op
Iteration   3: 38.425 ns/op
Iteration   4: 38.634 ns/op
Iteration   5: 38.705 ns/op


Result "baselineCos":
  38.469 ±(99.9%) 0.178 ns/op [Average]
  (min, avg, max) = (38.356, 38.469, 38.705), stdev = 0.118
  CI (99.9%): [38.291, 38.647] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 5, b = 100)

# Run progress: 20.41% complete, ETA 01:27:35
# Fork: 1 of 2
# Warmup Iteration   1: 104.698 ns/op
# Warmup Iteration   2: 104.662 ns/op
# Warmup Iteration   3: 38.414 ns/op
# Warmup Iteration   4: 38.355 ns/op
# Warmup Iteration   5: 38.422 ns/op
Iteration   1: 38.425 ns/op
Iteration   2: 38.323 ns/op
Iteration   3: 38.320 ns/op
Iteration   4: 38.299 ns/op
Iteration   5: 38.226 ns/op

# Run progress: 20.58% complete, ETA 01:27:23
# Fork: 2 of 2
# Warmup Iteration   1: 105.210 ns/op
# Warmup Iteration   2: 104.965 ns/op
# Warmup Iteration   3: 38.372 ns/op
# Warmup Iteration   4: 38.432 ns/op
# Warmup Iteration   5: 38.426 ns/op
Iteration   1: 38.467 ns/op
Iteration   2: 38.402 ns/op
Iteration   3: 38.459 ns/op
Iteration   4: 38.408 ns/op
Iteration   5: 38.521 ns/op


Result "baselineCos":
  38.385 ±(99.9%) 0.137 ns/op [Average]
  (min, avg, max) = (38.226, 38.385, 38.521), stdev = 0.091
  CI (99.9%): [38.248, 38.522] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 5, b = 1000)

# Run progress: 20.75% complete, ETA 01:27:12
# Fork: 1 of 2
# Warmup Iteration   1: 104.521 ns/op
# Warmup Iteration   2: 104.533 ns/op
# Warmup Iteration   3: 38.304 ns/op
# Warmup Iteration   4: 38.350 ns/op
# Warmup Iteration   5: 38.368 ns/op
Iteration   1: 38.345 ns/op
Iteration   2: 38.403 ns/op
Iteration   3: 38.379 ns/op
Iteration   4: 38.321 ns/op
Iteration   5: 38.362 ns/op

# Run progress: 20.92% complete, ETA 01:27:01
# Fork: 2 of 2
# Warmup Iteration   1: 105.525 ns/op
# Warmup Iteration   2: 105.423 ns/op
# Warmup Iteration   3: 38.835 ns/op
# Warmup Iteration   4: 38.893 ns/op
# Warmup Iteration   5: 38.904 ns/op
Iteration   1: 38.954 ns/op
Iteration   2: 38.978 ns/op
Iteration   3: 38.895 ns/op
Iteration   4: 38.897 ns/op
Iteration   5: 38.330 ns/op


Result "baselineCos":
  38.586 ±(99.9%) 0.451 ns/op [Average]
  (min, avg, max) = (38.321, 38.586, 38.978), stdev = 0.298
  CI (99.9%): [38.135, 39.038] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 5, b = 10000)

# Run progress: 21.09% complete, ETA 01:26:50
# Fork: 1 of 2
# Warmup Iteration   1: 104.918 ns/op
# Warmup Iteration   2: 104.833 ns/op
# Warmup Iteration   3: 38.486 ns/op
# Warmup Iteration   4: 38.392 ns/op
# Warmup Iteration   5: 38.457 ns/op
Iteration   1: 38.388 ns/op
Iteration   2: 38.440 ns/op
Iteration   3: 38.425 ns/op
Iteration   4: 38.401 ns/op
Iteration   5: 38.409 ns/op

# Run progress: 21.26% complete, ETA 01:26:39
# Fork: 2 of 2
# Warmup Iteration   1: 104.468 ns/op
# Warmup Iteration   2: 104.344 ns/op
# Warmup Iteration   3: 38.411 ns/op
# Warmup Iteration   4: 38.383 ns/op
# Warmup Iteration   5: 38.409 ns/op
Iteration   1: 38.428 ns/op
Iteration   2: 38.404 ns/op
Iteration   3: 38.422 ns/op
Iteration   4: 38.358 ns/op
Iteration   5: 38.462 ns/op


Result "baselineCos":
  38.414 ±(99.9%) 0.044 ns/op [Average]
  (min, avg, max) = (38.358, 38.414, 38.462), stdev = 0.029
  CI (99.9%): [38.370, 38.457] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 30, b = 0.5)

# Run progress: 21.43% complete, ETA 01:26:27
# Fork: 1 of 2
# Warmup Iteration   1: 104.958 ns/op
# Warmup Iteration   2: 104.806 ns/op
# Warmup Iteration   3: 38.425 ns/op
# Warmup Iteration   4: 38.634 ns/op
# Warmup Iteration   5: 38.381 ns/op
Iteration   1: 38.368 ns/op
Iteration   2: 38.382 ns/op
Iteration   3: 38.337 ns/op
Iteration   4: 38.411 ns/op
Iteration   5: 38.255 ns/op

# Run progress: 21.60% complete, ETA 01:26:16
# Fork: 2 of 2
# Warmup Iteration   1: 105.141 ns/op
# Warmup Iteration   2: 104.699 ns/op
# Warmup Iteration   3: 38.572 ns/op
# Warmup Iteration   4: 38.467 ns/op
# Warmup Iteration   5: 38.438 ns/op
Iteration   1: 38.399 ns/op
Iteration   2: 38.433 ns/op
Iteration   3: 38.448 ns/op
Iteration   4: 38.359 ns/op
Iteration   5: 38.312 ns/op


Result "baselineCos":
  38.370 ±(99.9%) 0.088 ns/op [Average]
  (min, avg, max) = (38.255, 38.370, 38.448), stdev = 0.058
  CI (99.9%): [38.282, 38.459] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 30, b = 1)

# Run progress: 21.77% complete, ETA 01:26:05
# Fork: 1 of 2
# Warmup Iteration   1: 105.256 ns/op
# Warmup Iteration   2: 104.785 ns/op
# Warmup Iteration   3: 38.889 ns/op
# Warmup Iteration   4: 38.915 ns/op
# Warmup Iteration   5: 38.956 ns/op
Iteration   1: 38.998 ns/op
Iteration   2: 38.967 ns/op
Iteration   3: 38.963 ns/op
Iteration   4: 38.240 ns/op
Iteration   5: 38.308 ns/op

# Run progress: 21.94% complete, ETA 01:25:54
# Fork: 2 of 2
# Warmup Iteration   1: 104.110 ns/op
# Warmup Iteration   2: 103.999 ns/op
# Warmup Iteration   3: 38.297 ns/op
# Warmup Iteration   4: 38.381 ns/op
# Warmup Iteration   5: 38.310 ns/op
Iteration   1: 38.328 ns/op
Iteration   2: 38.321 ns/op
Iteration   3: 38.245 ns/op
Iteration   4: 38.661 ns/op
Iteration   5: 38.558 ns/op


Result "baselineCos":
  38.559 ±(99.9%) 0.480 ns/op [Average]
  (min, avg, max) = (38.240, 38.559, 38.998), stdev = 0.317
  CI (99.9%): [38.079, 39.039] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 30, b = 5)

# Run progress: 22.11% complete, ETA 01:25:42
# Fork: 1 of 2
# Warmup Iteration   1: 104.904 ns/op
# Warmup Iteration   2: 104.522 ns/op
# Warmup Iteration   3: 38.448 ns/op
# Warmup Iteration   4: 38.380 ns/op
# Warmup Iteration   5: 38.449 ns/op
Iteration   1: 38.435 ns/op
Iteration   2: 38.406 ns/op
Iteration   3: 38.548 ns/op
Iteration   4: 39.959 ns/op
Iteration   5: 40.011 ns/op

# Run progress: 22.28% complete, ETA 01:25:31
# Fork: 2 of 2
# Warmup Iteration   1: 104.701 ns/op
# Warmup Iteration   2: 104.598 ns/op
# Warmup Iteration   3: 38.403 ns/op
# Warmup Iteration   4: 38.420 ns/op
# Warmup Iteration   5: 38.445 ns/op
Iteration   1: 38.429 ns/op
Iteration   2: 38.340 ns/op
Iteration   3: 38.444 ns/op
Iteration   4: 38.421 ns/op
Iteration   5: 38.518 ns/op


Result "baselineCos":
  38.751 ±(99.9%) 0.987 ns/op [Average]
  (min, avg, max) = (38.340, 38.751, 40.011), stdev = 0.653
  CI (99.9%): [37.764, 39.738] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 30, b = 10)

# Run progress: 22.45% complete, ETA 01:25:20
# Fork: 1 of 2
# Warmup Iteration   1: 105.555 ns/op
# Warmup Iteration   2: 105.340 ns/op
# Warmup Iteration   3: 38.455 ns/op
# Warmup Iteration   4: 38.513 ns/op
# Warmup Iteration   5: 38.573 ns/op
Iteration   1: 38.546 ns/op
Iteration   2: 38.532 ns/op
Iteration   3: 38.474 ns/op
Iteration   4: 38.484 ns/op
Iteration   5: 39.195 ns/op

# Run progress: 22.62% complete, ETA 01:25:09
# Fork: 2 of 2
# Warmup Iteration   1: 105.269 ns/op
# Warmup Iteration   2: 105.281 ns/op
# Warmup Iteration   3: 38.433 ns/op
# Warmup Iteration   4: 38.536 ns/op
# Warmup Iteration   5: 38.430 ns/op
Iteration   1: 38.446 ns/op
Iteration   2: 38.472 ns/op
Iteration   3: 38.548 ns/op
Iteration   4: 38.498 ns/op
Iteration   5: 38.400 ns/op


Result "baselineCos":
  38.559 ±(99.9%) 0.345 ns/op [Average]
  (min, avg, max) = (38.400, 38.559, 39.195), stdev = 0.228
  CI (99.9%): [38.215, 38.904] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 30, b = 100)

# Run progress: 22.79% complete, ETA 01:24:57
# Fork: 1 of 2
# Warmup Iteration   1: 104.557 ns/op
# Warmup Iteration   2: 104.407 ns/op
# Warmup Iteration   3: 38.387 ns/op
# Warmup Iteration   4: 38.331 ns/op
# Warmup Iteration   5: 38.272 ns/op
Iteration   1: 38.387 ns/op
Iteration   2: 38.332 ns/op
Iteration   3: 38.351 ns/op
Iteration   4: 38.329 ns/op
Iteration   5: 40.060 ns/op

# Run progress: 22.96% complete, ETA 01:24:46
# Fork: 2 of 2
# Warmup Iteration   1: 104.677 ns/op
# Warmup Iteration   2: 104.467 ns/op
# Warmup Iteration   3: 38.352 ns/op
# Warmup Iteration   4: 38.339 ns/op
# Warmup Iteration   5: 38.313 ns/op
Iteration   1: 38.360 ns/op
Iteration   2: 38.305 ns/op
Iteration   3: 38.358 ns/op
Iteration   4: 38.469 ns/op
Iteration   5: 38.646 ns/op


Result "baselineCos":
  38.560 ±(99.9%) 0.811 ns/op [Average]
  (min, avg, max) = (38.305, 38.560, 40.060), stdev = 0.537
  CI (99.9%): [37.748, 39.371] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 30, b = 1000)

# Run progress: 23.13% complete, ETA 01:24:35
# Fork: 1 of 2
# Warmup Iteration   1: 104.445 ns/op
# Warmup Iteration   2: 104.445 ns/op
# Warmup Iteration   3: 38.310 ns/op
# Warmup Iteration   4: 38.304 ns/op
# Warmup Iteration   5: 38.386 ns/op
Iteration   1: 38.415 ns/op
Iteration   2: 38.327 ns/op
Iteration   3: 38.333 ns/op
Iteration   4: 38.345 ns/op
Iteration   5: 39.331 ns/op

# Run progress: 23.30% complete, ETA 01:24:24
# Fork: 2 of 2
# Warmup Iteration   1: 104.549 ns/op
# Warmup Iteration   2: 104.514 ns/op
# Warmup Iteration   3: 38.345 ns/op
# Warmup Iteration   4: 38.274 ns/op
# Warmup Iteration   5: 38.330 ns/op
Iteration   1: 38.362 ns/op
Iteration   2: 38.357 ns/op
Iteration   3: 38.370 ns/op
Iteration   4: 38.347 ns/op
Iteration   5: 38.274 ns/op


Result "baselineCos":
  38.446 ±(99.9%) 0.473 ns/op [Average]
  (min, avg, max) = (38.274, 38.446, 39.331), stdev = 0.313
  CI (99.9%): [37.973, 38.919] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 30, b = 10000)

# Run progress: 23.47% complete, ETA 01:24:12
# Fork: 1 of 2
# Warmup Iteration   1: 105.412 ns/op
# Warmup Iteration   2: 105.269 ns/op
# Warmup Iteration   3: 38.463 ns/op
# Warmup Iteration   4: 38.497 ns/op
# Warmup Iteration   5: 38.453 ns/op
Iteration   1: 38.547 ns/op
Iteration   2: 38.531 ns/op
Iteration   3: 38.444 ns/op
Iteration   4: 38.572 ns/op
Iteration   5: 38.563 ns/op

# Run progress: 23.64% complete, ETA 01:24:01
# Fork: 2 of 2
# Warmup Iteration   1: 104.531 ns/op
# Warmup Iteration   2: 104.231 ns/op
# Warmup Iteration   3: 38.308 ns/op
# Warmup Iteration   4: 38.348 ns/op
# Warmup Iteration   5: 38.277 ns/op
Iteration   1: 38.231 ns/op
Iteration   2: 38.346 ns/op
Iteration   3: 38.373 ns/op
Iteration   4: 38.241 ns/op
Iteration   5: 38.997 ns/op


Result "baselineCos":
  38.485 ±(99.9%) 0.334 ns/op [Average]
  (min, avg, max) = (38.231, 38.485, 38.997), stdev = 0.221
  CI (99.9%): [38.150, 38.819] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 45, b = 0.5)

# Run progress: 23.81% complete, ETA 01:23:50
# Fork: 1 of 2
# Warmup Iteration   1: 105.242 ns/op
# Warmup Iteration   2: 104.999 ns/op
# Warmup Iteration   3: 38.817 ns/op
# Warmup Iteration   4: 38.766 ns/op
# Warmup Iteration   5: 38.848 ns/op
Iteration   1: 38.824 ns/op
Iteration   2: 38.782 ns/op
Iteration   3: 38.879 ns/op
Iteration   4: 39.164 ns/op
Iteration   5: 39.137 ns/op

# Run progress: 23.98% complete, ETA 01:23:39
# Fork: 2 of 2
# Warmup Iteration   1: 104.522 ns/op
# Warmup Iteration   2: 104.146 ns/op
# Warmup Iteration   3: 38.659 ns/op
# Warmup Iteration   4: 38.700 ns/op
# Warmup Iteration   5: 38.703 ns/op
Iteration   1: 38.660 ns/op
Iteration   2: 38.688 ns/op
Iteration   3: 38.812 ns/op
Iteration   4: 43.919 ns/op
Iteration   5: 43.928 ns/op


Result "baselineCos":
  39.879 ±(99.9%) 3.232 ns/op [Average]
  (min, avg, max) = (38.660, 39.879, 43.928), stdev = 2.138
  CI (99.9%): [36.647, 43.112] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 45, b = 1)

# Run progress: 24.15% complete, ETA 01:23:27
# Fork: 1 of 2
# Warmup Iteration   1: 104.755 ns/op
# Warmup Iteration   2: 104.621 ns/op
# Warmup Iteration   3: 38.646 ns/op
# Warmup Iteration   4: 38.679 ns/op
# Warmup Iteration   5: 38.663 ns/op
Iteration   1: 38.704 ns/op
Iteration   2: 38.656 ns/op
Iteration   3: 38.664 ns/op
Iteration   4: 38.663 ns/op
Iteration   5: 38.747 ns/op

# Run progress: 24.32% complete, ETA 01:23:16
# Fork: 2 of 2
# Warmup Iteration   1: 105.265 ns/op
# Warmup Iteration   2: 105.136 ns/op
# Warmup Iteration   3: 38.859 ns/op
# Warmup Iteration   4: 38.808 ns/op
# Warmup Iteration   5: 38.800 ns/op
Iteration   1: 38.848 ns/op
Iteration   2: 38.781 ns/op
Iteration   3: 38.820 ns/op
Iteration   4: 38.794 ns/op
Iteration   5: 39.548 ns/op


Result "baselineCos":
  38.823 ±(99.9%) 0.399 ns/op [Average]
  (min, avg, max) = (38.656, 38.823, 39.548), stdev = 0.264
  CI (99.9%): [38.423, 39.222] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 45, b = 5)

# Run progress: 24.49% complete, ETA 01:23:05
# Fork: 1 of 2
# Warmup Iteration   1: 105.034 ns/op
# Warmup Iteration   2: 104.838 ns/op
# Warmup Iteration   3: 38.811 ns/op
# Warmup Iteration   4: 38.834 ns/op
# Warmup Iteration   5: 38.912 ns/op
Iteration   1: 38.845 ns/op
Iteration   2: 38.835 ns/op
Iteration   3: 38.855 ns/op
Iteration   4: 38.849 ns/op
Iteration   5: 38.744 ns/op

# Run progress: 24.66% complete, ETA 01:22:54
# Fork: 2 of 2
# Warmup Iteration   1: 104.541 ns/op
# Warmup Iteration   2: 104.349 ns/op
# Warmup Iteration   3: 38.937 ns/op
# Warmup Iteration   4: 38.949 ns/op
# Warmup Iteration   5: 38.931 ns/op
Iteration   1: 39.035 ns/op
Iteration   2: 38.949 ns/op
Iteration   3: 39.086 ns/op
Iteration   4: 39.011 ns/op
Iteration   5: 38.860 ns/op


Result "baselineCos":
  38.907 ±(99.9%) 0.163 ns/op [Average]
  (min, avg, max) = (38.744, 38.907, 39.086), stdev = 0.108
  CI (99.9%): [38.744, 39.070] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 45, b = 10)

# Run progress: 24.83% complete, ETA 01:22:43
# Fork: 1 of 2
# Warmup Iteration   1: 104.952 ns/op
# Warmup Iteration   2: 104.714 ns/op
# Warmup Iteration   3: 38.795 ns/op
# Warmup Iteration   4: 38.759 ns/op
# Warmup Iteration   5: 38.800 ns/op
Iteration   1: 38.823 ns/op
Iteration   2: 38.815 ns/op
Iteration   3: 38.745 ns/op
Iteration   4: 38.779 ns/op
Iteration   5: 43.963 ns/op

# Run progress: 25.00% complete, ETA 01:22:31
# Fork: 2 of 2
# Warmup Iteration   1: 104.984 ns/op
# Warmup Iteration   2: 104.948 ns/op
# Warmup Iteration   3: 38.991 ns/op
# Warmup Iteration   4: 38.942 ns/op
# Warmup Iteration   5: 38.944 ns/op
Iteration   1: 38.900 ns/op
Iteration   2: 38.878 ns/op
Iteration   3: 38.925 ns/op
Iteration   4: 38.913 ns/op
Iteration   5: 38.812 ns/op


Result "baselineCos":
  39.355 ±(99.9%) 2.450 ns/op [Average]
  (min, avg, max) = (38.745, 39.355, 43.963), stdev = 1.620
  CI (99.9%): [36.906, 41.805] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 45, b = 100)

# Run progress: 25.17% complete, ETA 01:22:20
# Fork: 1 of 2
# Warmup Iteration   1: 104.866 ns/op
# Warmup Iteration   2: 104.707 ns/op
# Warmup Iteration   3: 38.791 ns/op
# Warmup Iteration   4: 38.787 ns/op
# Warmup Iteration   5: 38.709 ns/op
Iteration   1: 38.826 ns/op
Iteration   2: 38.713 ns/op
Iteration   3: 38.902 ns/op
Iteration   4: 39.326 ns/op
Iteration   5: 39.320 ns/op

# Run progress: 25.34% complete, ETA 01:22:09
# Fork: 2 of 2
# Warmup Iteration   1: 105.478 ns/op
# Warmup Iteration   2: 105.487 ns/op
# Warmup Iteration   3: 38.914 ns/op
# Warmup Iteration   4: 38.888 ns/op
# Warmup Iteration   5: 38.943 ns/op
Iteration   1: 39.000 ns/op
Iteration   2: 38.898 ns/op
Iteration   3: 39.005 ns/op
Iteration   4: 38.911 ns/op
Iteration   5: 38.650 ns/op


Result "baselineCos":
  38.955 ±(99.9%) 0.339 ns/op [Average]
  (min, avg, max) = (38.650, 38.955, 39.326), stdev = 0.224
  CI (99.9%): [38.617, 39.294] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 45, b = 1000)

# Run progress: 25.51% complete, ETA 01:21:58
# Fork: 1 of 2
# Warmup Iteration   1: 104.979 ns/op
# Warmup Iteration   2: 104.544 ns/op
# Warmup Iteration   3: 38.653 ns/op
# Warmup Iteration   4: 38.741 ns/op
# Warmup Iteration   5: 38.704 ns/op
Iteration   1: 38.738 ns/op
Iteration   2: 38.771 ns/op
Iteration   3: 38.679 ns/op
Iteration   4: 38.707 ns/op
Iteration   5: 38.814 ns/op

# Run progress: 25.68% complete, ETA 01:21:46
# Fork: 2 of 2
# Warmup Iteration   1: 105.076 ns/op
# Warmup Iteration   2: 105.002 ns/op
# Warmup Iteration   3: 38.773 ns/op
# Warmup Iteration   4: 38.759 ns/op
# Warmup Iteration   5: 38.795 ns/op
Iteration   1: 38.803 ns/op
Iteration   2: 38.786 ns/op
Iteration   3: 38.801 ns/op
Iteration   4: 38.781 ns/op
Iteration   5: 38.988 ns/op


Result "baselineCos":
  38.787 ±(99.9%) 0.126 ns/op [Average]
  (min, avg, max) = (38.679, 38.787, 38.988), stdev = 0.083
  CI (99.9%): [38.661, 38.913] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 45, b = 10000)

# Run progress: 25.85% complete, ETA 01:21:35
# Fork: 1 of 2
# Warmup Iteration   1: 104.691 ns/op
# Warmup Iteration   2: 104.544 ns/op
# Warmup Iteration   3: 38.806 ns/op
# Warmup Iteration   4: 38.720 ns/op
# Warmup Iteration   5: 38.750 ns/op
Iteration   1: 38.727 ns/op
Iteration   2: 38.739 ns/op
Iteration   3: 38.786 ns/op
Iteration   4: 39.573 ns/op
Iteration   5: 39.577 ns/op

# Run progress: 26.02% complete, ETA 01:21:24
# Fork: 2 of 2
# Warmup Iteration   1: 104.929 ns/op
# Warmup Iteration   2: 104.635 ns/op
# Warmup Iteration   3: 38.726 ns/op
# Warmup Iteration   4: 38.819 ns/op
# Warmup Iteration   5: 38.734 ns/op
Iteration   1: 38.785 ns/op
Iteration   2: 38.766 ns/op
Iteration   3: 38.732 ns/op
Iteration   4: 38.799 ns/op
Iteration   5: 39.220 ns/op


Result "baselineCos":
  38.970 ±(99.9%) 0.529 ns/op [Average]
  (min, avg, max) = (38.727, 38.970, 39.577), stdev = 0.350
  CI (99.9%): [38.441, 39.499] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 60, b = 0.5)

# Run progress: 26.19% complete, ETA 01:21:13
# Fork: 1 of 2
# Warmup Iteration   1: 120.780 ns/op
# Warmup Iteration   2: 120.708 ns/op
# Warmup Iteration   3: 48.058 ns/op
# Warmup Iteration   4: 47.955 ns/op
# Warmup Iteration   5: 48.096 ns/op
Iteration   1: 47.949 ns/op
Iteration   2: 48.009 ns/op
Iteration   3: 48.375 ns/op
Iteration   4: 47.995 ns/op
Iteration   5: 47.917 ns/op

# Run progress: 26.36% complete, ETA 01:21:01
# Fork: 2 of 2
# Warmup Iteration   1: 120.969 ns/op
# Warmup Iteration   2: 120.822 ns/op
# Warmup Iteration   3: 47.804 ns/op
# Warmup Iteration   4: 47.758 ns/op
# Warmup Iteration   5: 47.666 ns/op
Iteration   1: 47.822 ns/op
Iteration   2: 47.789 ns/op
Iteration   3: 47.808 ns/op
Iteration   4: 49.550 ns/op
Iteration   5: 49.533 ns/op


Result "baselineCos":
  48.275 ±(99.9%) 1.040 ns/op [Average]
  (min, avg, max) = (47.789, 48.275, 49.550), stdev = 0.688
  CI (99.9%): [47.234, 49.315] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 60, b = 1)

# Run progress: 26.53% complete, ETA 01:20:50
# Fork: 1 of 2
# Warmup Iteration   1: 120.863 ns/op
# Warmup Iteration   2: 120.868 ns/op
# Warmup Iteration   3: 47.885 ns/op
# Warmup Iteration   4: 47.864 ns/op
# Warmup Iteration   5: 47.907 ns/op
Iteration   1: 47.895 ns/op
Iteration   2: 47.701 ns/op
Iteration   3: 47.785 ns/op
Iteration   4: 48.114 ns/op
Iteration   5: 48.171 ns/op

# Run progress: 26.70% complete, ETA 01:20:39
# Fork: 2 of 2
# Warmup Iteration   1: 120.340 ns/op
# Warmup Iteration   2: 120.207 ns/op
# Warmup Iteration   3: 47.588 ns/op
# Warmup Iteration   4: 47.705 ns/op
# Warmup Iteration   5: 47.652 ns/op
Iteration   1: 47.687 ns/op
Iteration   2: 47.537 ns/op
Iteration   3: 47.602 ns/op
Iteration   4: 47.810 ns/op
Iteration   5: 47.696 ns/op


Result "baselineCos":
  47.800 ±(99.9%) 0.314 ns/op [Average]
  (min, avg, max) = (47.537, 47.800, 48.171), stdev = 0.207
  CI (99.9%): [47.486, 48.113] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 60, b = 5)

# Run progress: 26.87% complete, ETA 01:20:28
# Fork: 1 of 2
# Warmup Iteration   1: 120.889 ns/op
# Warmup Iteration   2: 121.219 ns/op
# Warmup Iteration   3: 47.887 ns/op
# Warmup Iteration   4: 47.926 ns/op
# Warmup Iteration   5: 47.809 ns/op
Iteration   1: 47.933 ns/op
Iteration   2: 48.090 ns/op
Iteration   3: 47.757 ns/op
Iteration   4: 47.760 ns/op
Iteration   5: 47.671 ns/op

# Run progress: 27.04% complete, ETA 01:20:17
# Fork: 2 of 2
# Warmup Iteration   1: 121.972 ns/op
# Warmup Iteration   2: 121.478 ns/op
# Warmup Iteration   3: 47.733 ns/op
# Warmup Iteration   4: 47.665 ns/op
# Warmup Iteration   5: 47.667 ns/op
Iteration   1: 47.693 ns/op
Iteration   2: 47.744 ns/op
Iteration   3: 47.635 ns/op
Iteration   4: 47.725 ns/op
Iteration   5: 47.817 ns/op


Result "baselineCos":
  47.783 ±(99.9%) 0.206 ns/op [Average]
  (min, avg, max) = (47.635, 47.783, 48.090), stdev = 0.136
  CI (99.9%): [47.577, 47.988] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 60, b = 10)

# Run progress: 27.21% complete, ETA 01:20:05
# Fork: 1 of 2
# Warmup Iteration   1: 120.748 ns/op
# Warmup Iteration   2: 120.210 ns/op
# Warmup Iteration   3: 47.801 ns/op
# Warmup Iteration   4: 47.855 ns/op
# Warmup Iteration   5: 47.642 ns/op
Iteration   1: 47.962 ns/op
Iteration   2: 47.915 ns/op
Iteration   3: 47.801 ns/op
Iteration   4: 47.766 ns/op
Iteration   5: 47.717 ns/op

# Run progress: 27.38% complete, ETA 01:19:54
# Fork: 2 of 2
# Warmup Iteration   1: 120.964 ns/op
# Warmup Iteration   2: 120.969 ns/op
# Warmup Iteration   3: 47.816 ns/op
# Warmup Iteration   4: 47.817 ns/op
# Warmup Iteration   5: 47.985 ns/op
Iteration   1: 47.841 ns/op
Iteration   2: 47.911 ns/op
Iteration   3: 47.981 ns/op
Iteration   4: 47.874 ns/op
Iteration   5: 51.136 ns/op


Result "baselineCos":
  48.190 ±(99.9%) 1.570 ns/op [Average]
  (min, avg, max) = (47.717, 48.190, 51.136), stdev = 1.038
  CI (99.9%): [46.620, 49.760] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 60, b = 100)

# Run progress: 27.55% complete, ETA 01:19:43
# Fork: 1 of 2
# Warmup Iteration   1: 120.791 ns/op
# Warmup Iteration   2: 120.301 ns/op
# Warmup Iteration   3: 47.665 ns/op
# Warmup Iteration   4: 47.617 ns/op
# Warmup Iteration   5: 47.588 ns/op
Iteration   1: 47.636 ns/op
Iteration   2: 47.600 ns/op
Iteration   3: 47.635 ns/op
Iteration   4: 47.661 ns/op
Iteration   5: 48.463 ns/op

# Run progress: 27.72% complete, ETA 01:19:32
# Fork: 2 of 2
# Warmup Iteration   1: 121.273 ns/op
# Warmup Iteration   2: 120.976 ns/op
# Warmup Iteration   3: 47.944 ns/op
# Warmup Iteration   4: 47.911 ns/op
# Warmup Iteration   5: 47.900 ns/op
Iteration   1: 48.009 ns/op
Iteration   2: 47.918 ns/op
Iteration   3: 48.043 ns/op
Iteration   4: 47.698 ns/op
Iteration   5: 47.751 ns/op


Result "baselineCos":
  47.841 ±(99.9%) 0.411 ns/op [Average]
  (min, avg, max) = (47.600, 47.841, 48.463), stdev = 0.272
  CI (99.9%): [47.430, 48.252] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 60, b = 1000)

# Run progress: 27.89% complete, ETA 01:19:20
# Fork: 1 of 2
# Warmup Iteration   1: 120.520 ns/op
# Warmup Iteration   2: 120.575 ns/op
# Warmup Iteration   3: 47.646 ns/op
# Warmup Iteration   4: 47.635 ns/op
# Warmup Iteration   5: 47.679 ns/op
Iteration   1: 47.572 ns/op
Iteration   2: 47.511 ns/op
Iteration   3: 47.582 ns/op
Iteration   4: 49.441 ns/op
Iteration   5: 49.432 ns/op

# Run progress: 28.06% complete, ETA 01:19:09
# Fork: 2 of 2
# Warmup Iteration   1: 121.107 ns/op
# Warmup Iteration   2: 121.113 ns/op
# Warmup Iteration   3: 47.840 ns/op
# Warmup Iteration   4: 47.762 ns/op
# Warmup Iteration   5: 47.906 ns/op
Iteration   1: 47.827 ns/op
Iteration   2: 47.869 ns/op
Iteration   3: 47.896 ns/op
Iteration   4: 48.013 ns/op
Iteration   5: 48.011 ns/op


Result "baselineCos":
  48.115 ±(99.9%) 1.086 ns/op [Average]
  (min, avg, max) = (47.511, 48.115, 49.441), stdev = 0.719
  CI (99.9%): [47.029, 49.202] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 60, b = 10000)

# Run progress: 28.23% complete, ETA 01:18:58
# Fork: 1 of 2
# Warmup Iteration   1: 121.052 ns/op
# Warmup Iteration   2: 120.903 ns/op
# Warmup Iteration   3: 47.801 ns/op
# Warmup Iteration   4: 47.637 ns/op
# Warmup Iteration   5: 47.766 ns/op
Iteration   1: 47.690 ns/op
Iteration   2: 47.675 ns/op
Iteration   3: 47.942 ns/op
Iteration   4: 47.743 ns/op
Iteration   5: 47.734 ns/op

# Run progress: 28.40% complete, ETA 01:18:47
# Fork: 2 of 2
# Warmup Iteration   1: 121.264 ns/op
# Warmup Iteration   2: 120.955 ns/op
# Warmup Iteration   3: 47.893 ns/op
# Warmup Iteration   4: 47.836 ns/op
# Warmup Iteration   5: 47.684 ns/op
Iteration   1: 47.855 ns/op
Iteration   2: 47.720 ns/op
Iteration   3: 47.745 ns/op
Iteration   4: 47.712 ns/op
Iteration   5: 47.755 ns/op


Result "baselineCos":
  47.757 ±(99.9%) 0.123 ns/op [Average]
  (min, avg, max) = (47.675, 47.757, 47.942), stdev = 0.081
  CI (99.9%): [47.634, 47.880] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 85, b = 0.5)

# Run progress: 28.57% complete, ETA 01:18:36
# Fork: 1 of 2
# Warmup Iteration   1: 106.867 ns/op
# Warmup Iteration   2: 106.478 ns/op
# Warmup Iteration   3: 41.197 ns/op
# Warmup Iteration   4: 41.288 ns/op
# Warmup Iteration   5: 41.102 ns/op
Iteration   1: 41.359 ns/op
Iteration   2: 41.254 ns/op
Iteration   3: 41.206 ns/op
Iteration   4: 41.143 ns/op
Iteration   5: 41.205 ns/op

# Run progress: 28.74% complete, ETA 01:18:24
# Fork: 2 of 2
# Warmup Iteration   1: 106.844 ns/op
# Warmup Iteration   2: 106.755 ns/op
# Warmup Iteration   3: 41.029 ns/op
# Warmup Iteration   4: 41.018 ns/op
# Warmup Iteration   5: 41.119 ns/op
Iteration   1: 41.095 ns/op
Iteration   2: 41.175 ns/op
Iteration   3: 41.375 ns/op
Iteration   4: 41.432 ns/op
Iteration   5: 41.373 ns/op


Result "baselineCos":
  41.262 ±(99.9%) 0.174 ns/op [Average]
  (min, avg, max) = (41.095, 41.262, 41.432), stdev = 0.115
  CI (99.9%): [41.088, 41.436] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 85, b = 1)

# Run progress: 28.91% complete, ETA 01:18:13
# Fork: 1 of 2
# Warmup Iteration   1: 106.706 ns/op
# Warmup Iteration   2: 106.337 ns/op
# Warmup Iteration   3: 40.962 ns/op
# Warmup Iteration   4: 41.237 ns/op
# Warmup Iteration   5: 41.174 ns/op
Iteration   1: 41.163 ns/op
Iteration   2: 41.109 ns/op
Iteration   3: 41.205 ns/op
Iteration   4: 41.175 ns/op
Iteration   5: 41.150 ns/op

# Run progress: 29.08% complete, ETA 01:18:02
# Fork: 2 of 2
# Warmup Iteration   1: 107.134 ns/op
# Warmup Iteration   2: 106.714 ns/op
# Warmup Iteration   3: 41.059 ns/op
# Warmup Iteration   4: 41.043 ns/op
# Warmup Iteration   5: 40.941 ns/op
Iteration   1: 41.040 ns/op
Iteration   2: 41.000 ns/op
Iteration   3: 41.314 ns/op
Iteration   4: 41.027 ns/op
Iteration   5: 41.060 ns/op


Result "baselineCos":
  41.124 ±(99.9%) 0.146 ns/op [Average]
  (min, avg, max) = (41.000, 41.124, 41.314), stdev = 0.096
  CI (99.9%): [40.979, 41.270] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 85, b = 5)

# Run progress: 29.25% complete, ETA 01:17:51
# Fork: 1 of 2
# Warmup Iteration   1: 106.762 ns/op
# Warmup Iteration   2: 106.637 ns/op
# Warmup Iteration   3: 41.079 ns/op
# Warmup Iteration   4: 41.223 ns/op
# Warmup Iteration   5: 41.305 ns/op
Iteration   1: 41.210 ns/op
Iteration   2: 41.287 ns/op
Iteration   3: 41.226 ns/op
Iteration   4: 41.157 ns/op
Iteration   5: 41.151 ns/op

# Run progress: 29.42% complete, ETA 01:17:39
# Fork: 2 of 2
# Warmup Iteration   1: 106.774 ns/op
# Warmup Iteration   2: 106.629 ns/op
# Warmup Iteration   3: 41.009 ns/op
# Warmup Iteration   4: 41.023 ns/op
# Warmup Iteration   5: 41.047 ns/op
Iteration   1: 41.025 ns/op
Iteration   2: 41.089 ns/op
Iteration   3: 41.116 ns/op
Iteration   4: 41.094 ns/op
Iteration   5: 41.249 ns/op


Result "baselineCos":
  41.160 ±(99.9%) 0.124 ns/op [Average]
  (min, avg, max) = (41.025, 41.160, 41.287), stdev = 0.082
  CI (99.9%): [41.036, 41.284] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 85, b = 10)

# Run progress: 29.59% complete, ETA 01:17:28
# Fork: 1 of 2
# Warmup Iteration   1: 106.895 ns/op
# Warmup Iteration   2: 106.426 ns/op
# Warmup Iteration   3: 41.148 ns/op
# Warmup Iteration   4: 41.369 ns/op
# Warmup Iteration   5: 41.215 ns/op
Iteration   1: 41.378 ns/op
Iteration   2: 41.260 ns/op
Iteration   3: 41.361 ns/op
Iteration   4: 41.293 ns/op
Iteration   5: 41.224 ns/op

# Run progress: 29.76% complete, ETA 01:17:17
# Fork: 2 of 2
# Warmup Iteration   1: 106.482 ns/op
# Warmup Iteration   2: 106.273 ns/op
# Warmup Iteration   3: 41.062 ns/op
# Warmup Iteration   4: 40.931 ns/op
# Warmup Iteration   5: 41.139 ns/op
Iteration   1: 41.075 ns/op
Iteration   2: 41.019 ns/op
Iteration   3: 41.130 ns/op
Iteration   4: 41.216 ns/op
Iteration   5: 41.211 ns/op


Result "baselineCos":
  41.217 ±(99.9%) 0.176 ns/op [Average]
  (min, avg, max) = (41.019, 41.217, 41.378), stdev = 0.116
  CI (99.9%): [41.041, 41.392] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 85, b = 100)

# Run progress: 29.93% complete, ETA 01:17:06
# Fork: 1 of 2
# Warmup Iteration   1: 107.441 ns/op
# Warmup Iteration   2: 107.136 ns/op
# Warmup Iteration   3: 41.298 ns/op
# Warmup Iteration   4: 41.316 ns/op
# Warmup Iteration   5: 41.250 ns/op
Iteration   1: 41.284 ns/op
Iteration   2: 41.258 ns/op
Iteration   3: 41.442 ns/op
Iteration   4: 41.325 ns/op
Iteration   5: 41.287 ns/op

# Run progress: 30.10% complete, ETA 01:16:54
# Fork: 2 of 2
# Warmup Iteration   1: 106.745 ns/op
# Warmup Iteration   2: 106.261 ns/op
# Warmup Iteration   3: 41.241 ns/op
# Warmup Iteration   4: 41.291 ns/op
# Warmup Iteration   5: 41.252 ns/op
Iteration   1: 40.981 ns/op
Iteration   2: 41.003 ns/op
Iteration   3: 41.202 ns/op
Iteration   4: 46.216 ns/op
Iteration   5: 46.175 ns/op


Result "baselineCos":
  42.217 ±(99.9%) 3.177 ns/op [Average]
  (min, avg, max) = (40.981, 42.217, 46.216), stdev = 2.101
  CI (99.9%): [39.040, 45.394] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 85, b = 1000)

# Run progress: 30.27% complete, ETA 01:16:43
# Fork: 1 of 2
# Warmup Iteration   1: 106.864 ns/op
# Warmup Iteration   2: 106.781 ns/op
# Warmup Iteration   3: 41.052 ns/op
# Warmup Iteration   4: 41.063 ns/op
# Warmup Iteration   5: 41.048 ns/op
Iteration   1: 41.069 ns/op
Iteration   2: 40.990 ns/op
Iteration   3: 41.026 ns/op
Iteration   4: 41.081 ns/op
Iteration   5: 41.130 ns/op

# Run progress: 30.44% complete, ETA 01:16:32
# Fork: 2 of 2
# Warmup Iteration   1: 107.122 ns/op
# Warmup Iteration   2: 106.948 ns/op
# Warmup Iteration   3: 41.154 ns/op
# Warmup Iteration   4: 41.300 ns/op
# Warmup Iteration   5: 41.276 ns/op
Iteration   1: 41.245 ns/op
Iteration   2: 41.266 ns/op
Iteration   3: 41.193 ns/op
Iteration   4: 42.744 ns/op
Iteration   5: 42.613 ns/op


Result "baselineCos":
  41.436 ±(99.9%) 1.001 ns/op [Average]
  (min, avg, max) = (40.990, 41.436, 42.744), stdev = 0.662
  CI (99.9%): [40.435, 42.436] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 85, b = 10000)

# Run progress: 30.61% complete, ETA 01:16:21
# Fork: 1 of 2
# Warmup Iteration   1: 107.231 ns/op
# Warmup Iteration   2: 107.099 ns/op
# Warmup Iteration   3: 41.166 ns/op
# Warmup Iteration   4: 41.097 ns/op
# Warmup Iteration   5: 41.051 ns/op
Iteration   1: 41.147 ns/op
Iteration   2: 41.135 ns/op
Iteration   3: 41.134 ns/op
Iteration   4: 42.964 ns/op
Iteration   5: 42.992 ns/op

# Run progress: 30.78% complete, ETA 01:16:10
# Fork: 2 of 2
# Warmup Iteration   1: 106.899 ns/op
# Warmup Iteration   2: 106.835 ns/op
# Warmup Iteration   3: 41.095 ns/op
# Warmup Iteration   4: 41.105 ns/op
# Warmup Iteration   5: 41.139 ns/op
Iteration   1: 41.047 ns/op
Iteration   2: 41.054 ns/op
Iteration   3: 41.054 ns/op
Iteration   4: 41.135 ns/op
Iteration   5: 41.209 ns/op


Result "baselineCos":
  41.487 ±(99.9%) 1.190 ns/op [Average]
  (min, avg, max) = (41.047, 41.487, 42.992), stdev = 0.787
  CI (99.9%): [40.296, 42.677] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 90, b = 0.5)

# Run progress: 30.95% complete, ETA 01:15:58
# Fork: 1 of 2
# Warmup Iteration   1: 104.508 ns/op
# Warmup Iteration   2: 104.540 ns/op
# Warmup Iteration   3: 39.556 ns/op
# Warmup Iteration   4: 39.602 ns/op
# Warmup Iteration   5: 39.590 ns/op
Iteration   1: 39.570 ns/op
Iteration   2: 39.664 ns/op
Iteration   3: 39.608 ns/op
Iteration   4: 39.642 ns/op
Iteration   5: 39.768 ns/op

# Run progress: 31.12% complete, ETA 01:15:47
# Fork: 2 of 2
# Warmup Iteration   1: 104.912 ns/op
# Warmup Iteration   2: 104.811 ns/op
# Warmup Iteration   3: 39.979 ns/op
# Warmup Iteration   4: 39.785 ns/op
# Warmup Iteration   5: 39.742 ns/op
Iteration   1: 39.827 ns/op
Iteration   2: 39.797 ns/op
Iteration   3: 39.812 ns/op
Iteration   4: 39.449 ns/op
Iteration   5: 39.561 ns/op


Result "baselineCos":
  39.670 ±(99.9%) 0.192 ns/op [Average]
  (min, avg, max) = (39.449, 39.670, 39.827), stdev = 0.127
  CI (99.9%): [39.478, 39.862] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 90, b = 1)

# Run progress: 31.29% complete, ETA 01:15:36
# Fork: 1 of 2
# Warmup Iteration   1: 105.591 ns/op
# Warmup Iteration   2: 105.347 ns/op
# Warmup Iteration   3: 39.843 ns/op
# Warmup Iteration   4: 39.856 ns/op
# Warmup Iteration   5: 39.836 ns/op
Iteration   1: 39.825 ns/op
Iteration   2: 39.871 ns/op
Iteration   3: 39.860 ns/op
Iteration   4: 39.833 ns/op
Iteration   5: 39.509 ns/op

# Run progress: 31.46% complete, ETA 01:15:25
# Fork: 2 of 2
# Warmup Iteration   1: 105.042 ns/op
# Warmup Iteration   2: 104.861 ns/op
# Warmup Iteration   3: 39.745 ns/op
# Warmup Iteration   4: 39.701 ns/op
# Warmup Iteration   5: 39.712 ns/op
Iteration   1: 39.763 ns/op
Iteration   2: 39.633 ns/op
Iteration   3: 39.671 ns/op
Iteration   4: 39.803 ns/op
Iteration   5: 39.714 ns/op


Result "baselineCos":
  39.748 ±(99.9%) 0.176 ns/op [Average]
  (min, avg, max) = (39.509, 39.748, 39.871), stdev = 0.116
  CI (99.9%): [39.572, 39.924] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 90, b = 5)

# Run progress: 31.63% complete, ETA 01:15:13
# Fork: 1 of 2
# Warmup Iteration   1: 104.861 ns/op
# Warmup Iteration   2: 104.961 ns/op
# Warmup Iteration   3: 39.756 ns/op
# Warmup Iteration   4: 39.595 ns/op
# Warmup Iteration   5: 39.567 ns/op
Iteration   1: 39.790 ns/op
Iteration   2: 39.489 ns/op
Iteration   3: 39.809 ns/op
Iteration   4: 39.804 ns/op
Iteration   5: 39.690 ns/op

# Run progress: 31.80% complete, ETA 01:15:02
# Fork: 2 of 2
# Warmup Iteration   1: 105.245 ns/op
# Warmup Iteration   2: 104.822 ns/op
# Warmup Iteration   3: 39.818 ns/op
# Warmup Iteration   4: 39.837 ns/op
# Warmup Iteration   5: 39.917 ns/op
Iteration   1: 39.777 ns/op
Iteration   2: 39.890 ns/op
Iteration   3: 39.780 ns/op
Iteration   4: 39.762 ns/op
Iteration   5: 39.433 ns/op


Result "baselineCos":
  39.722 ±(99.9%) 0.222 ns/op [Average]
  (min, avg, max) = (39.433, 39.722, 39.890), stdev = 0.147
  CI (99.9%): [39.501, 39.944] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 90, b = 10)

# Run progress: 31.97% complete, ETA 01:14:51
# Fork: 1 of 2
# Warmup Iteration   1: 105.018 ns/op
# Warmup Iteration   2: 104.998 ns/op
# Warmup Iteration   3: 39.588 ns/op
# Warmup Iteration   4: 39.599 ns/op
# Warmup Iteration   5: 39.635 ns/op
Iteration   1: 39.688 ns/op
Iteration   2: 39.655 ns/op
Iteration   3: 39.745 ns/op
Iteration   4: 39.604 ns/op
Iteration   5: 39.569 ns/op

# Run progress: 32.14% complete, ETA 01:14:40
# Fork: 2 of 2
# Warmup Iteration   1: 105.195 ns/op
# Warmup Iteration   2: 105.048 ns/op
# Warmup Iteration   3: 39.760 ns/op
# Warmup Iteration   4: 39.724 ns/op
# Warmup Iteration   5: 39.697 ns/op
Iteration   1: 39.650 ns/op
Iteration   2: 39.692 ns/op
Iteration   3: 39.726 ns/op
Iteration   4: 39.698 ns/op
Iteration   5: 39.551 ns/op


Result "baselineCos":
  39.658 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (39.551, 39.658, 39.745), stdev = 0.065
  CI (99.9%): [39.560, 39.756] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 90, b = 100)

# Run progress: 32.31% complete, ETA 01:14:28
# Fork: 1 of 2
# Warmup Iteration   1: 104.377 ns/op
# Warmup Iteration   2: 104.185 ns/op
# Warmup Iteration   3: 39.483 ns/op
# Warmup Iteration   4: 39.515 ns/op
# Warmup Iteration   5: 39.386 ns/op
Iteration   1: 39.535 ns/op
Iteration   2: 39.507 ns/op
Iteration   3: 39.453 ns/op
Iteration   4: 39.664 ns/op
Iteration   5: 39.608 ns/op

# Run progress: 32.48% complete, ETA 01:14:17
# Fork: 2 of 2
# Warmup Iteration   1: 104.461 ns/op
# Warmup Iteration   2: 104.575 ns/op
# Warmup Iteration   3: 40.390 ns/op
# Warmup Iteration   4: 40.324 ns/op
# Warmup Iteration   5: 40.302 ns/op
Iteration   1: 40.315 ns/op
Iteration   2: 40.361 ns/op
Iteration   3: 40.311 ns/op
Iteration   4: 39.791 ns/op
Iteration   5: 39.794 ns/op


Result "baselineCos":
  39.834 ±(99.9%) 0.543 ns/op [Average]
  (min, avg, max) = (39.453, 39.834, 40.361), stdev = 0.359
  CI (99.9%): [39.291, 40.377] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 90, b = 1000)

# Run progress: 32.65% complete, ETA 01:14:06
# Fork: 1 of 2
# Warmup Iteration   1: 104.418 ns/op
# Warmup Iteration   2: 104.585 ns/op
# Warmup Iteration   3: 39.710 ns/op
# Warmup Iteration   4: 39.812 ns/op
# Warmup Iteration   5: 39.746 ns/op
Iteration   1: 39.700 ns/op
Iteration   2: 39.700 ns/op
Iteration   3: 39.744 ns/op
Iteration   4: 39.669 ns/op
Iteration   5: 39.763 ns/op

# Run progress: 32.82% complete, ETA 01:13:55
# Fork: 2 of 2
# Warmup Iteration   1: 104.460 ns/op
# Warmup Iteration   2: 104.397 ns/op
# Warmup Iteration   3: 39.627 ns/op
# Warmup Iteration   4: 39.569 ns/op
# Warmup Iteration   5: 39.520 ns/op
Iteration   1: 39.538 ns/op
Iteration   2: 39.570 ns/op
Iteration   3: 39.554 ns/op
Iteration   4: 39.616 ns/op
Iteration   5: 39.441 ns/op


Result "baselineCos":
  39.630 ±(99.9%) 0.156 ns/op [Average]
  (min, avg, max) = (39.441, 39.630, 39.763), stdev = 0.103
  CI (99.9%): [39.474, 39.786] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineCos
# Parameters: (a = 90, b = 10000)

# Run progress: 32.99% complete, ETA 01:13:44
# Fork: 1 of 2
# Warmup Iteration   1: 105.093 ns/op
# Warmup Iteration   2: 104.873 ns/op
# Warmup Iteration   3: 40.015 ns/op
# Warmup Iteration   4: 39.802 ns/op
# Warmup Iteration   5: 39.903 ns/op
Iteration   1: 39.901 ns/op
Iteration   2: 39.659 ns/op
Iteration   3: 39.923 ns/op
Iteration   4: 39.538 ns/op
Iteration   5: 39.421 ns/op

# Run progress: 33.16% complete, ETA 01:13:32
# Fork: 2 of 2
# Warmup Iteration   1: 104.546 ns/op
# Warmup Iteration   2: 104.235 ns/op
# Warmup Iteration   3: 39.649 ns/op
# Warmup Iteration   4: 39.673 ns/op
# Warmup Iteration   5: 39.639 ns/op
Iteration   1: 39.661 ns/op
Iteration   2: 39.666 ns/op
Iteration   3: 39.595 ns/op
Iteration   4: 39.589 ns/op
Iteration   5: 42.274 ns/op


Result "baselineCos":
  39.922 ±(99.9%) 1.270 ns/op [Average]
  (min, avg, max) = (39.421, 39.922, 42.274), stdev = 0.840
  CI (99.9%): [38.652, 41.193] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 0, b = 0.5)

# Run progress: 33.33% complete, ETA 01:13:21
# Fork: 1 of 2
# Warmup Iteration   1: 24.385 ns/op
# Warmup Iteration   2: 24.371 ns/op
# Warmup Iteration   3: 21.814 ns/op
# Warmup Iteration   4: 22.162 ns/op
# Warmup Iteration   5: 21.823 ns/op
Iteration   1: 22.197 ns/op
Iteration   2: 21.826 ns/op
Iteration   3: 21.777 ns/op
Iteration   4: 21.847 ns/op
Iteration   5: 22.030 ns/op

# Run progress: 33.50% complete, ETA 01:13:10
# Fork: 2 of 2
# Warmup Iteration   1: 24.382 ns/op
# Warmup Iteration   2: 24.288 ns/op
# Warmup Iteration   3: 21.998 ns/op
# Warmup Iteration   4: 21.538 ns/op
# Warmup Iteration   5: 21.563 ns/op
Iteration   1: 21.618 ns/op
Iteration   2: 21.553 ns/op
Iteration   3: 21.614 ns/op
Iteration   4: 21.550 ns/op
Iteration   5: 21.517 ns/op


Result "baselineSin":
  21.753 ±(99.9%) 0.343 ns/op [Average]
  (min, avg, max) = (21.517, 21.753, 22.197), stdev = 0.227
  CI (99.9%): [21.410, 22.096] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 0, b = 1)

# Run progress: 33.67% complete, ETA 01:12:59
# Fork: 1 of 2
# Warmup Iteration   1: 24.348 ns/op
# Warmup Iteration   2: 24.304 ns/op
# Warmup Iteration   3: 21.609 ns/op
# Warmup Iteration   4: 22.027 ns/op
# Warmup Iteration   5: 21.595 ns/op
Iteration   1: 22.035 ns/op
Iteration   2: 21.579 ns/op
Iteration   3: 21.607 ns/op
Iteration   4: 22.024 ns/op
Iteration   5: 22.541 ns/op

# Run progress: 33.84% complete, ETA 01:12:47
# Fork: 2 of 2
# Warmup Iteration   1: 24.309 ns/op
# Warmup Iteration   2: 24.297 ns/op
# Warmup Iteration   3: 21.572 ns/op
# Warmup Iteration   4: 22.037 ns/op
# Warmup Iteration   5: 21.540 ns/op
Iteration   1: 21.970 ns/op
Iteration   2: 21.577 ns/op
Iteration   3: 22.047 ns/op
Iteration   4: 21.618 ns/op
Iteration   5: 21.586 ns/op


Result "baselineSin":
  21.858 ±(99.9%) 0.485 ns/op [Average]
  (min, avg, max) = (21.577, 21.858, 22.541), stdev = 0.321
  CI (99.9%): [21.374, 22.343] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 0, b = 5)

# Run progress: 34.01% complete, ETA 01:12:36
# Fork: 1 of 2
# Warmup Iteration   1: 24.355 ns/op
# Warmup Iteration   2: 24.304 ns/op
# Warmup Iteration   3: 21.615 ns/op
# Warmup Iteration   4: 21.586 ns/op
# Warmup Iteration   5: 22.039 ns/op
Iteration   1: 21.590 ns/op
Iteration   2: 21.585 ns/op
Iteration   3: 21.606 ns/op
Iteration   4: 21.598 ns/op
Iteration   5: 21.608 ns/op

# Run progress: 34.18% complete, ETA 01:12:25
# Fork: 2 of 2
# Warmup Iteration   1: 24.323 ns/op
# Warmup Iteration   2: 24.266 ns/op
# Warmup Iteration   3: 21.609 ns/op
# Warmup Iteration   4: 21.591 ns/op
# Warmup Iteration   5: 21.551 ns/op
Iteration   1: 21.543 ns/op
Iteration   2: 21.530 ns/op
Iteration   3: 21.523 ns/op
Iteration   4: 21.552 ns/op
Iteration   5: 21.998 ns/op


Result "baselineSin":
  21.613 ±(99.9%) 0.210 ns/op [Average]
  (min, avg, max) = (21.523, 21.613, 21.998), stdev = 0.139
  CI (99.9%): [21.403, 21.823] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 0, b = 10)

# Run progress: 34.35% complete, ETA 01:12:14
# Fork: 1 of 2
# Warmup Iteration   1: 24.351 ns/op
# Warmup Iteration   2: 24.349 ns/op
# Warmup Iteration   3: 21.579 ns/op
# Warmup Iteration   4: 22.044 ns/op
# Warmup Iteration   5: 21.581 ns/op
Iteration   1: 21.988 ns/op
Iteration   2: 21.605 ns/op
Iteration   3: 21.587 ns/op
Iteration   4: 22.033 ns/op
Iteration   5: 21.590 ns/op

# Run progress: 34.52% complete, ETA 01:12:03
# Fork: 2 of 2
# Warmup Iteration   1: 24.323 ns/op
# Warmup Iteration   2: 24.235 ns/op
# Warmup Iteration   3: 21.536 ns/op
# Warmup Iteration   4: 22.051 ns/op
# Warmup Iteration   5: 21.545 ns/op
Iteration   1: 21.993 ns/op
Iteration   2: 21.566 ns/op
Iteration   3: 21.553 ns/op
Iteration   4: 22.009 ns/op
Iteration   5: 21.991 ns/op


Result "baselineSin":
  21.792 ±(99.9%) 0.338 ns/op [Average]
  (min, avg, max) = (21.553, 21.792, 22.033), stdev = 0.224
  CI (99.9%): [21.454, 22.129] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 0, b = 100)

# Run progress: 34.69% complete, ETA 01:11:51
# Fork: 1 of 2
# Warmup Iteration   1: 24.348 ns/op
# Warmup Iteration   2: 24.315 ns/op
# Warmup Iteration   3: 21.593 ns/op
# Warmup Iteration   4: 21.999 ns/op
# Warmup Iteration   5: 22.004 ns/op
Iteration   1: 22.075 ns/op
Iteration   2: 21.563 ns/op
Iteration   3: 21.566 ns/op
Iteration   4: 21.993 ns/op
Iteration   5: 21.559 ns/op

# Run progress: 34.86% complete, ETA 01:11:40
# Fork: 2 of 2
# Warmup Iteration   1: 24.414 ns/op
# Warmup Iteration   2: 24.356 ns/op
# Warmup Iteration   3: 22.245 ns/op
# Warmup Iteration   4: 21.812 ns/op
# Warmup Iteration   5: 21.793 ns/op
Iteration   1: 21.827 ns/op
Iteration   2: 21.832 ns/op
Iteration   3: 22.144 ns/op
Iteration   4: 21.593 ns/op
Iteration   5: 21.616 ns/op


Result "baselineSin":
  21.777 ±(99.9%) 0.347 ns/op [Average]
  (min, avg, max) = (21.559, 21.777, 22.144), stdev = 0.229
  CI (99.9%): [21.430, 22.124] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 0, b = 1000)

# Run progress: 35.03% complete, ETA 01:11:29
# Fork: 1 of 2
# Warmup Iteration   1: 24.395 ns/op
# Warmup Iteration   2: 24.305 ns/op
# Warmup Iteration   3: 22.005 ns/op
# Warmup Iteration   4: 21.568 ns/op
# Warmup Iteration   5: 21.577 ns/op
Iteration   1: 21.591 ns/op
Iteration   2: 21.555 ns/op
Iteration   3: 22.012 ns/op
Iteration   4: 21.577 ns/op
Iteration   5: 21.580 ns/op

# Run progress: 35.20% complete, ETA 01:11:18
# Fork: 2 of 2
# Warmup Iteration   1: 24.401 ns/op
# Warmup Iteration   2: 24.330 ns/op
# Warmup Iteration   3: 21.610 ns/op
# Warmup Iteration   4: 22.081 ns/op
# Warmup Iteration   5: 22.015 ns/op
Iteration   1: 21.616 ns/op
Iteration   2: 21.605 ns/op
Iteration   3: 21.628 ns/op
Iteration   4: 21.585 ns/op
Iteration   5: 22.082 ns/op


Result "baselineSin":
  21.683 ±(99.9%) 0.293 ns/op [Average]
  (min, avg, max) = (21.555, 21.683, 22.082), stdev = 0.194
  CI (99.9%): [21.390, 21.976] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 0, b = 10000)

# Run progress: 35.37% complete, ETA 01:11:06
# Fork: 1 of 2
# Warmup Iteration   1: 24.373 ns/op
# Warmup Iteration   2: 24.282 ns/op
# Warmup Iteration   3: 21.587 ns/op
# Warmup Iteration   4: 22.009 ns/op
# Warmup Iteration   5: 21.539 ns/op
Iteration   1: 22.019 ns/op
Iteration   2: 22.004 ns/op
Iteration   3: 21.572 ns/op
Iteration   4: 21.566 ns/op
Iteration   5: 22.052 ns/op

# Run progress: 35.54% complete, ETA 01:10:55
# Fork: 2 of 2
# Warmup Iteration   1: 24.411 ns/op
# Warmup Iteration   2: 24.303 ns/op
# Warmup Iteration   3: 21.617 ns/op
# Warmup Iteration   4: 21.600 ns/op
# Warmup Iteration   5: 21.593 ns/op
Iteration   1: 21.626 ns/op
Iteration   2: 22.502 ns/op
Iteration   3: 21.695 ns/op
Iteration   4: 22.094 ns/op
Iteration   5: 22.619 ns/op


Result "baselineSin":
  21.975 ±(99.9%) 0.563 ns/op [Average]
  (min, avg, max) = (21.566, 21.975, 22.619), stdev = 0.372
  CI (99.9%): [21.412, 22.537] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 5, b = 0.5)

# Run progress: 35.71% complete, ETA 01:10:44
# Fork: 1 of 2
# Warmup Iteration   1: 107.658 ns/op
# Warmup Iteration   2: 108.002 ns/op
# Warmup Iteration   3: 40.045 ns/op
# Warmup Iteration   4: 40.125 ns/op
# Warmup Iteration   5: 40.159 ns/op
Iteration   1: 40.034 ns/op
Iteration   2: 40.047 ns/op
Iteration   3: 40.169 ns/op
Iteration   4: 40.158 ns/op
Iteration   5: 39.976 ns/op

# Run progress: 35.88% complete, ETA 01:10:33
# Fork: 2 of 2
# Warmup Iteration   1: 107.893 ns/op
# Warmup Iteration   2: 107.733 ns/op
# Warmup Iteration   3: 40.117 ns/op
# Warmup Iteration   4: 40.191 ns/op
# Warmup Iteration   5: 40.171 ns/op
Iteration   1: 40.070 ns/op
Iteration   2: 40.138 ns/op
Iteration   3: 40.128 ns/op
Iteration   4: 40.026 ns/op
Iteration   5: 40.034 ns/op


Result "baselineSin":
  40.078 ±(99.9%) 0.099 ns/op [Average]
  (min, avg, max) = (39.976, 40.078, 40.169), stdev = 0.066
  CI (99.9%): [39.979, 40.177] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 5, b = 1)

# Run progress: 36.05% complete, ETA 01:10:21
# Fork: 1 of 2
# Warmup Iteration   1: 108.563 ns/op
# Warmup Iteration   2: 108.352 ns/op
# Warmup Iteration   3: 40.108 ns/op
# Warmup Iteration   4: 40.007 ns/op
# Warmup Iteration   5: 40.087 ns/op
Iteration   1: 40.011 ns/op
Iteration   2: 40.052 ns/op
Iteration   3: 40.043 ns/op
Iteration   4: 40.092 ns/op
Iteration   5: 40.007 ns/op

# Run progress: 36.22% complete, ETA 01:10:10
# Fork: 2 of 2
# Warmup Iteration   1: 107.392 ns/op
# Warmup Iteration   2: 107.268 ns/op
# Warmup Iteration   3: 40.066 ns/op
# Warmup Iteration   4: 40.082 ns/op
# Warmup Iteration   5: 40.083 ns/op
Iteration   1: 40.147 ns/op
Iteration   2: 40.165 ns/op
Iteration   3: 40.100 ns/op
Iteration   4: 40.090 ns/op
Iteration   5: 40.224 ns/op


Result "baselineSin":
  40.093 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (40.007, 40.093, 40.224), stdev = 0.070
  CI (99.9%): [39.988, 40.198] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 5, b = 5)

# Run progress: 36.39% complete, ETA 01:09:59
# Fork: 1 of 2
# Warmup Iteration   1: 107.870 ns/op
# Warmup Iteration   2: 107.287 ns/op
# Warmup Iteration   3: 39.989 ns/op
# Warmup Iteration   4: 40.008 ns/op
# Warmup Iteration   5: 40.076 ns/op
Iteration   1: 40.101 ns/op
Iteration   2: 40.151 ns/op
Iteration   3: 40.112 ns/op
Iteration   4: 40.002 ns/op
Iteration   5: 40.188 ns/op

# Run progress: 36.56% complete, ETA 01:09:48
# Fork: 2 of 2
# Warmup Iteration   1: 107.476 ns/op
# Warmup Iteration   2: 107.285 ns/op
# Warmup Iteration   3: 40.205 ns/op
# Warmup Iteration   4: 40.207 ns/op
# Warmup Iteration   5: 40.203 ns/op
Iteration   1: 40.227 ns/op
Iteration   2: 40.210 ns/op
Iteration   3: 40.156 ns/op
Iteration   4: 40.077 ns/op
Iteration   5: 40.172 ns/op


Result "baselineSin":
  40.140 ±(99.9%) 0.103 ns/op [Average]
  (min, avg, max) = (40.002, 40.140, 40.227), stdev = 0.068
  CI (99.9%): [40.037, 40.242] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 5, b = 10)

# Run progress: 36.73% complete, ETA 01:09:37
# Fork: 1 of 2
# Warmup Iteration   1: 107.795 ns/op
# Warmup Iteration   2: 107.671 ns/op
# Warmup Iteration   3: 39.996 ns/op
# Warmup Iteration   4: 40.016 ns/op
# Warmup Iteration   5: 39.998 ns/op
Iteration   1: 40.070 ns/op
Iteration   2: 40.005 ns/op
Iteration   3: 40.054 ns/op
Iteration   4: 40.060 ns/op
Iteration   5: 41.575 ns/op

# Run progress: 36.90% complete, ETA 01:09:25
# Fork: 2 of 2
# Warmup Iteration   1: 107.419 ns/op
# Warmup Iteration   2: 107.582 ns/op
# Warmup Iteration   3: 40.313 ns/op
# Warmup Iteration   4: 40.183 ns/op
# Warmup Iteration   5: 40.101 ns/op
Iteration   1: 40.233 ns/op
Iteration   2: 40.148 ns/op
Iteration   3: 40.194 ns/op
Iteration   4: 40.419 ns/op
Iteration   5: 40.353 ns/op


Result "baselineSin":
  40.311 ±(99.9%) 0.702 ns/op [Average]
  (min, avg, max) = (40.005, 40.311, 41.575), stdev = 0.464
  CI (99.9%): [39.610, 41.013] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 5, b = 100)

# Run progress: 37.07% complete, ETA 01:09:14
# Fork: 1 of 2
# Warmup Iteration   1: 107.734 ns/op
# Warmup Iteration   2: 107.441 ns/op
# Warmup Iteration   3: 40.163 ns/op
# Warmup Iteration   4: 40.085 ns/op
# Warmup Iteration   5: 40.154 ns/op
Iteration   1: 40.107 ns/op
Iteration   2: 40.215 ns/op
Iteration   3: 40.097 ns/op
Iteration   4: 40.396 ns/op
Iteration   5: 40.308 ns/op

# Run progress: 37.24% complete, ETA 01:09:03
# Fork: 2 of 2
# Warmup Iteration   1: 107.570 ns/op
# Warmup Iteration   2: 107.779 ns/op
# Warmup Iteration   3: 40.177 ns/op
# Warmup Iteration   4: 40.219 ns/op
# Warmup Iteration   5: 40.147 ns/op
Iteration   1: 40.171 ns/op
Iteration   2: 40.168 ns/op
Iteration   3: 40.129 ns/op
Iteration   4: 40.097 ns/op
Iteration   5: 40.107 ns/op


Result "baselineSin":
  40.180 ±(99.9%) 0.152 ns/op [Average]
  (min, avg, max) = (40.097, 40.180, 40.396), stdev = 0.101
  CI (99.9%): [40.027, 40.332] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 5, b = 1000)

# Run progress: 37.41% complete, ETA 01:08:52
# Fork: 1 of 2
# Warmup Iteration   1: 107.559 ns/op
# Warmup Iteration   2: 107.277 ns/op
# Warmup Iteration   3: 40.061 ns/op
# Warmup Iteration   4: 40.042 ns/op
# Warmup Iteration   5: 39.997 ns/op
Iteration   1: 40.078 ns/op
Iteration   2: 39.983 ns/op
Iteration   3: 39.985 ns/op
Iteration   4: 39.994 ns/op
Iteration   5: 40.322 ns/op

# Run progress: 37.59% complete, ETA 01:08:40
# Fork: 2 of 2
# Warmup Iteration   1: 107.517 ns/op
# Warmup Iteration   2: 107.563 ns/op
# Warmup Iteration   3: 40.367 ns/op
# Warmup Iteration   4: 40.405 ns/op
# Warmup Iteration   5: 40.427 ns/op
Iteration   1: 40.323 ns/op
Iteration   2: 40.334 ns/op
Iteration   3: 40.368 ns/op
Iteration   4: 40.380 ns/op
Iteration   5: 39.957 ns/op


Result "baselineSin":
  40.173 ±(99.9%) 0.281 ns/op [Average]
  (min, avg, max) = (39.957, 40.173, 40.380), stdev = 0.186
  CI (99.9%): [39.892, 40.453] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 5, b = 10000)

# Run progress: 37.76% complete, ETA 01:08:29
# Fork: 1 of 2
# Warmup Iteration   1: 109.307 ns/op
# Warmup Iteration   2: 109.224 ns/op
# Warmup Iteration   3: 40.337 ns/op
# Warmup Iteration   4: 40.341 ns/op
# Warmup Iteration   5: 40.320 ns/op
Iteration   1: 40.316 ns/op
Iteration   2: 40.251 ns/op
Iteration   3: 40.313 ns/op
Iteration   4: 40.306 ns/op
Iteration   5: 40.149 ns/op

# Run progress: 37.93% complete, ETA 01:08:18
# Fork: 2 of 2
# Warmup Iteration   1: 107.458 ns/op
# Warmup Iteration   2: 107.360 ns/op
# Warmup Iteration   3: 40.176 ns/op
# Warmup Iteration   4: 40.151 ns/op
# Warmup Iteration   5: 40.160 ns/op
Iteration   1: 40.104 ns/op
Iteration   2: 40.275 ns/op
Iteration   3: 40.165 ns/op
Iteration   4: 40.112 ns/op
Iteration   5: 40.057 ns/op


Result "baselineSin":
  40.205 ±(99.9%) 0.148 ns/op [Average]
  (min, avg, max) = (40.057, 40.205, 40.316), stdev = 0.098
  CI (99.9%): [40.056, 40.353] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 30, b = 0.5)

# Run progress: 38.10% complete, ETA 01:08:07
# Fork: 1 of 2
# Warmup Iteration   1: 107.855 ns/op
# Warmup Iteration   2: 108.118 ns/op
# Warmup Iteration   3: 40.057 ns/op
# Warmup Iteration   4: 40.090 ns/op
# Warmup Iteration   5: 40.088 ns/op
Iteration   1: 40.051 ns/op
Iteration   2: 39.979 ns/op
Iteration   3: 40.055 ns/op
Iteration   4: 40.146 ns/op
Iteration   5: 40.111 ns/op

# Run progress: 38.27% complete, ETA 01:07:55
# Fork: 2 of 2
# Warmup Iteration   1: 107.782 ns/op
# Warmup Iteration   2: 107.565 ns/op
# Warmup Iteration   3: 40.016 ns/op
# Warmup Iteration   4: 40.043 ns/op
# Warmup Iteration   5: 39.999 ns/op
Iteration   1: 39.990 ns/op
Iteration   2: 40.015 ns/op
Iteration   3: 40.039 ns/op
Iteration   4: 40.027 ns/op
Iteration   5: 40.783 ns/op


Result "baselineSin":
  40.119 ±(99.9%) 0.361 ns/op [Average]
  (min, avg, max) = (39.979, 40.119, 40.783), stdev = 0.239
  CI (99.9%): [39.759, 40.480] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 30, b = 1)

# Run progress: 38.44% complete, ETA 01:07:44
# Fork: 1 of 2
# Warmup Iteration   1: 107.760 ns/op
# Warmup Iteration   2: 107.702 ns/op
# Warmup Iteration   3: 40.027 ns/op
# Warmup Iteration   4: 40.390 ns/op
# Warmup Iteration   5: 40.082 ns/op
Iteration   1: 40.102 ns/op
Iteration   2: 40.202 ns/op
Iteration   3: 40.036 ns/op
Iteration   4: 40.857 ns/op
Iteration   5: 40.839 ns/op

# Run progress: 38.61% complete, ETA 01:07:33
# Fork: 2 of 2
# Warmup Iteration   1: 107.502 ns/op
# Warmup Iteration   2: 107.436 ns/op
# Warmup Iteration   3: 40.133 ns/op
# Warmup Iteration   4: 40.122 ns/op
# Warmup Iteration   5: 40.152 ns/op
Iteration   1: 40.155 ns/op
Iteration   2: 40.105 ns/op
Iteration   3: 40.215 ns/op
Iteration   4: 40.296 ns/op
Iteration   5: 40.216 ns/op


Result "baselineSin":
  40.302 ±(99.9%) 0.448 ns/op [Average]
  (min, avg, max) = (40.036, 40.302, 40.857), stdev = 0.297
  CI (99.9%): [39.854, 40.751] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 30, b = 5)

# Run progress: 38.78% complete, ETA 01:07:22
# Fork: 1 of 2
# Warmup Iteration   1: 107.410 ns/op
# Warmup Iteration   2: 107.287 ns/op
# Warmup Iteration   3: 40.230 ns/op
# Warmup Iteration   4: 40.160 ns/op
# Warmup Iteration   5: 40.197 ns/op
Iteration   1: 40.189 ns/op
Iteration   2: 40.207 ns/op
Iteration   3: 40.186 ns/op
Iteration   4: 40.094 ns/op
Iteration   5: 40.174 ns/op

# Run progress: 38.95% complete, ETA 01:07:11
# Fork: 2 of 2
# Warmup Iteration   1: 107.803 ns/op
# Warmup Iteration   2: 107.861 ns/op
# Warmup Iteration   3: 40.068 ns/op
# Warmup Iteration   4: 40.083 ns/op
# Warmup Iteration   5: 40.124 ns/op
Iteration   1: 40.089 ns/op
Iteration   2: 40.169 ns/op
Iteration   3: 40.123 ns/op
Iteration   4: 40.201 ns/op
Iteration   5: 40.197 ns/op


Result "baselineSin":
  40.163 ±(99.9%) 0.067 ns/op [Average]
  (min, avg, max) = (40.089, 40.163, 40.207), stdev = 0.044
  CI (99.9%): [40.096, 40.230] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 30, b = 10)

# Run progress: 39.12% complete, ETA 01:06:59
# Fork: 1 of 2
# Warmup Iteration   1: 108.006 ns/op
# Warmup Iteration   2: 107.825 ns/op
# Warmup Iteration   3: 39.995 ns/op
# Warmup Iteration   4: 40.034 ns/op
# Warmup Iteration   5: 39.986 ns/op
Iteration   1: 39.970 ns/op
Iteration   2: 39.977 ns/op
Iteration   3: 40.043 ns/op
Iteration   4: 39.889 ns/op
Iteration   5: 40.013 ns/op

# Run progress: 39.29% complete, ETA 01:06:48
# Fork: 2 of 2
# Warmup Iteration   1: 107.636 ns/op
# Warmup Iteration   2: 107.513 ns/op
# Warmup Iteration   3: 40.189 ns/op
# Warmup Iteration   4: 40.136 ns/op
# Warmup Iteration   5: 40.196 ns/op
Iteration   1: 40.224 ns/op
Iteration   2: 40.213 ns/op
Iteration   3: 40.164 ns/op
Iteration   4: 40.212 ns/op
Iteration   5: 40.064 ns/op


Result "baselineSin":
  40.077 ±(99.9%) 0.181 ns/op [Average]
  (min, avg, max) = (39.889, 40.077, 40.224), stdev = 0.119
  CI (99.9%): [39.896, 40.258] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 30, b = 100)

# Run progress: 39.46% complete, ETA 01:06:37
# Fork: 1 of 2
# Warmup Iteration   1: 107.714 ns/op
# Warmup Iteration   2: 107.585 ns/op
# Warmup Iteration   3: 40.042 ns/op
# Warmup Iteration   4: 40.042 ns/op
# Warmup Iteration   5: 40.037 ns/op
Iteration   1: 40.030 ns/op
Iteration   2: 40.187 ns/op
Iteration   3: 40.060 ns/op
Iteration   4: 39.985 ns/op
Iteration   5: 40.097 ns/op

# Run progress: 39.63% complete, ETA 01:06:26
# Fork: 2 of 2
# Warmup Iteration   1: 107.545 ns/op
# Warmup Iteration   2: 107.448 ns/op
# Warmup Iteration   3: 40.275 ns/op
# Warmup Iteration   4: 40.167 ns/op
# Warmup Iteration   5: 40.230 ns/op
Iteration   1: 40.180 ns/op
Iteration   2: 40.213 ns/op
Iteration   3: 40.224 ns/op
Iteration   4: 40.167 ns/op
Iteration   5: 40.106 ns/op


Result "baselineSin":
  40.125 ±(99.9%) 0.124 ns/op [Average]
  (min, avg, max) = (39.985, 40.125, 40.224), stdev = 0.082
  CI (99.9%): [40.001, 40.249] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 30, b = 1000)

# Run progress: 39.80% complete, ETA 01:06:14
# Fork: 1 of 2
# Warmup Iteration   1: 107.501 ns/op
# Warmup Iteration   2: 107.332 ns/op
# Warmup Iteration   3: 39.969 ns/op
# Warmup Iteration   4: 40.038 ns/op
# Warmup Iteration   5: 40.033 ns/op
Iteration   1: 39.994 ns/op
Iteration   2: 40.050 ns/op
Iteration   3: 40.031 ns/op
Iteration   4: 40.002 ns/op
Iteration   5: 40.996 ns/op

# Run progress: 39.97% complete, ETA 01:06:03
# Fork: 2 of 2
# Warmup Iteration   1: 107.635 ns/op
# Warmup Iteration   2: 107.470 ns/op
# Warmup Iteration   3: 40.287 ns/op
# Warmup Iteration   4: 40.315 ns/op
# Warmup Iteration   5: 40.273 ns/op
Iteration   1: 40.272 ns/op
Iteration   2: 40.187 ns/op
Iteration   3: 40.255 ns/op
Iteration   4: 40.006 ns/op
Iteration   5: 40.019 ns/op


Result "baselineSin":
  40.181 ±(99.9%) 0.462 ns/op [Average]
  (min, avg, max) = (39.994, 40.181, 40.996), stdev = 0.306
  CI (99.9%): [39.719, 40.644] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 30, b = 10000)

# Run progress: 40.14% complete, ETA 01:05:52
# Fork: 1 of 2
# Warmup Iteration   1: 107.557 ns/op
# Warmup Iteration   2: 107.522 ns/op
# Warmup Iteration   3: 40.252 ns/op
# Warmup Iteration   4: 40.268 ns/op
# Warmup Iteration   5: 40.250 ns/op
Iteration   1: 40.232 ns/op
Iteration   2: 40.370 ns/op
Iteration   3: 40.264 ns/op
Iteration   4: 40.768 ns/op
Iteration   5: 40.746 ns/op

# Run progress: 40.31% complete, ETA 01:05:41
# Fork: 2 of 2
# Warmup Iteration   1: 107.689 ns/op
# Warmup Iteration   2: 107.525 ns/op
# Warmup Iteration   3: 39.965 ns/op
# Warmup Iteration   4: 40.003 ns/op
# Warmup Iteration   5: 39.935 ns/op
Iteration   1: 39.981 ns/op
Iteration   2: 39.952 ns/op
Iteration   3: 40.015 ns/op
Iteration   4: 40.003 ns/op
Iteration   5: 40.252 ns/op


Result "baselineSin":
  40.258 ±(99.9%) 0.452 ns/op [Average]
  (min, avg, max) = (39.952, 40.258, 40.768), stdev = 0.299
  CI (99.9%): [39.806, 40.711] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 45, b = 0.5)

# Run progress: 40.48% complete, ETA 01:05:29
# Fork: 1 of 2
# Warmup Iteration   1: 121.655 ns/op
# Warmup Iteration   2: 121.463 ns/op
# Warmup Iteration   3: 46.410 ns/op
# Warmup Iteration   4: 46.422 ns/op
# Warmup Iteration   5: 46.388 ns/op
Iteration   1: 46.415 ns/op
Iteration   2: 46.400 ns/op
Iteration   3: 46.425 ns/op
Iteration   4: 46.508 ns/op
Iteration   5: 46.473 ns/op

# Run progress: 40.65% complete, ETA 01:05:18
# Fork: 2 of 2
# Warmup Iteration   1: 121.144 ns/op
# Warmup Iteration   2: 120.939 ns/op
# Warmup Iteration   3: 46.364 ns/op
# Warmup Iteration   4: 46.350 ns/op
# Warmup Iteration   5: 46.373 ns/op
Iteration   1: 46.323 ns/op
Iteration   2: 46.327 ns/op
Iteration   3: 46.342 ns/op
Iteration   4: 46.309 ns/op
Iteration   5: 48.785 ns/op


Result "baselineSin":
  46.631 ±(99.9%) 1.149 ns/op [Average]
  (min, avg, max) = (46.309, 46.631, 48.785), stdev = 0.760
  CI (99.9%): [45.482, 47.780] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 45, b = 1)

# Run progress: 40.82% complete, ETA 01:05:07
# Fork: 1 of 2
# Warmup Iteration   1: 121.575 ns/op
# Warmup Iteration   2: 121.330 ns/op
# Warmup Iteration   3: 47.199 ns/op
# Warmup Iteration   4: 47.224 ns/op
# Warmup Iteration   5: 47.285 ns/op
Iteration   1: 47.238 ns/op
Iteration   2: 47.208 ns/op
Iteration   3: 47.177 ns/op
Iteration   4: 46.436 ns/op
Iteration   5: 46.384 ns/op

# Run progress: 40.99% complete, ETA 01:04:56
# Fork: 2 of 2
# Warmup Iteration   1: 121.266 ns/op
# Warmup Iteration   2: 121.096 ns/op
# Warmup Iteration   3: 46.423 ns/op
# Warmup Iteration   4: 46.358 ns/op
# Warmup Iteration   5: 46.406 ns/op
Iteration   1: 46.355 ns/op
Iteration   2: 46.487 ns/op
Iteration   3: 46.442 ns/op
Iteration   4: 46.434 ns/op
Iteration   5: 48.846 ns/op


Result "baselineSin":
  46.901 ±(99.9%) 1.177 ns/op [Average]
  (min, avg, max) = (46.355, 46.901, 48.846), stdev = 0.778
  CI (99.9%): [45.724, 48.077] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 45, b = 5)

# Run progress: 41.16% complete, ETA 01:04:45
# Fork: 1 of 2
# Warmup Iteration   1: 121.238 ns/op
# Warmup Iteration   2: 120.947 ns/op
# Warmup Iteration   3: 46.523 ns/op
# Warmup Iteration   4: 46.573 ns/op
# Warmup Iteration   5: 46.467 ns/op
Iteration   1: 46.464 ns/op
Iteration   2: 46.463 ns/op
Iteration   3: 46.633 ns/op
Iteration   4: 46.470 ns/op
Iteration   5: 46.371 ns/op

# Run progress: 41.33% complete, ETA 01:04:33
# Fork: 2 of 2
# Warmup Iteration   1: 121.416 ns/op
# Warmup Iteration   2: 121.103 ns/op
# Warmup Iteration   3: 46.280 ns/op
# Warmup Iteration   4: 46.300 ns/op
# Warmup Iteration   5: 46.378 ns/op
Iteration   1: 46.222 ns/op
Iteration   2: 46.361 ns/op
Iteration   3: 46.410 ns/op
Iteration   4: 46.270 ns/op
Iteration   5: 46.413 ns/op


Result "baselineSin":
  46.407 ±(99.9%) 0.173 ns/op [Average]
  (min, avg, max) = (46.222, 46.407, 46.633), stdev = 0.114
  CI (99.9%): [46.234, 46.580] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 45, b = 10)

# Run progress: 41.50% complete, ETA 01:04:22
# Fork: 1 of 2
# Warmup Iteration   1: 121.163 ns/op
# Warmup Iteration   2: 120.943 ns/op
# Warmup Iteration   3: 46.749 ns/op
# Warmup Iteration   4: 46.648 ns/op
# Warmup Iteration   5: 46.689 ns/op
Iteration   1: 46.619 ns/op
Iteration   2: 46.707 ns/op
Iteration   3: 46.938 ns/op
Iteration   4: 46.585 ns/op
Iteration   5: 46.414 ns/op

# Run progress: 41.67% complete, ETA 01:04:11
# Fork: 2 of 2
# Warmup Iteration   1: 121.173 ns/op
# Warmup Iteration   2: 121.154 ns/op
# Warmup Iteration   3: 46.364 ns/op
# Warmup Iteration   4: 46.245 ns/op
# Warmup Iteration   5: 46.355 ns/op
Iteration   1: 46.374 ns/op
Iteration   2: 46.395 ns/op
Iteration   3: 46.306 ns/op
Iteration   4: 46.267 ns/op
Iteration   5: 46.225 ns/op


Result "baselineSin":
  46.483 ±(99.9%) 0.340 ns/op [Average]
  (min, avg, max) = (46.225, 46.483, 46.938), stdev = 0.225
  CI (99.9%): [46.143, 46.823] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 45, b = 100)

# Run progress: 41.84% complete, ETA 01:04:00
# Fork: 1 of 2
# Warmup Iteration   1: 121.879 ns/op
# Warmup Iteration   2: 121.854 ns/op
# Warmup Iteration   3: 46.371 ns/op
# Warmup Iteration   4: 46.477 ns/op
# Warmup Iteration   5: 46.441 ns/op
Iteration   1: 46.426 ns/op
Iteration   2: 46.470 ns/op
Iteration   3: 46.552 ns/op
Iteration   4: 46.470 ns/op
Iteration   5: 46.149 ns/op

# Run progress: 42.01% complete, ETA 01:03:48
# Fork: 2 of 2
# Warmup Iteration   1: 121.573 ns/op
# Warmup Iteration   2: 121.099 ns/op
# Warmup Iteration   3: 46.435 ns/op
# Warmup Iteration   4: 46.457 ns/op
# Warmup Iteration   5: 46.388 ns/op
Iteration   1: 46.403 ns/op
Iteration   2: 46.413 ns/op
Iteration   3: 46.484 ns/op
Iteration   4: 46.320 ns/op
Iteration   5: 46.288 ns/op


Result "baselineSin":
  46.398 ±(99.9%) 0.176 ns/op [Average]
  (min, avg, max) = (46.149, 46.398, 46.552), stdev = 0.117
  CI (99.9%): [46.221, 46.574] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 45, b = 1000)

# Run progress: 42.18% complete, ETA 01:03:37
# Fork: 1 of 2
# Warmup Iteration   1: 121.130 ns/op
# Warmup Iteration   2: 120.827 ns/op
# Warmup Iteration   3: 46.502 ns/op
# Warmup Iteration   4: 46.446 ns/op
# Warmup Iteration   5: 46.453 ns/op
Iteration   1: 46.450 ns/op
Iteration   2: 46.436 ns/op
Iteration   3: 46.449 ns/op
Iteration   4: 46.477 ns/op
Iteration   5: 46.330 ns/op

# Run progress: 42.35% complete, ETA 01:03:26
# Fork: 2 of 2
# Warmup Iteration   1: 121.289 ns/op
# Warmup Iteration   2: 120.971 ns/op
# Warmup Iteration   3: 46.357 ns/op
# Warmup Iteration   4: 46.368 ns/op
# Warmup Iteration   5: 46.378 ns/op
Iteration   1: 46.376 ns/op
Iteration   2: 46.319 ns/op
Iteration   3: 46.401 ns/op
Iteration   4: 46.528 ns/op
Iteration   5: 46.439 ns/op


Result "baselineSin":
  46.421 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (46.319, 46.421, 46.528), stdev = 0.065
  CI (99.9%): [46.323, 46.519] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 45, b = 10000)

# Run progress: 42.52% complete, ETA 01:03:15
# Fork: 1 of 2
# Warmup Iteration   1: 121.134 ns/op
# Warmup Iteration   2: 120.775 ns/op
# Warmup Iteration   3: 46.473 ns/op
# Warmup Iteration   4: 46.407 ns/op
# Warmup Iteration   5: 46.390 ns/op
Iteration   1: 46.412 ns/op
Iteration   2: 46.453 ns/op
Iteration   3: 46.483 ns/op
Iteration   4: 46.324 ns/op
Iteration   5: 46.397 ns/op

# Run progress: 42.69% complete, ETA 01:03:03
# Fork: 2 of 2
# Warmup Iteration   1: 121.390 ns/op
# Warmup Iteration   2: 121.268 ns/op
# Warmup Iteration   3: 46.475 ns/op
# Warmup Iteration   4: 46.451 ns/op
# Warmup Iteration   5: 46.349 ns/op
Iteration   1: 46.499 ns/op
Iteration   2: 46.464 ns/op
Iteration   3: 46.468 ns/op
Iteration   4: 48.568 ns/op
Iteration   5: 48.514 ns/op


Result "baselineSin":
  46.858 ±(99.9%) 1.343 ns/op [Average]
  (min, avg, max) = (46.324, 46.858, 48.568), stdev = 0.888
  CI (99.9%): [45.515, 48.201] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 60, b = 0.5)

# Run progress: 42.86% complete, ETA 01:02:52
# Fork: 1 of 2
# Warmup Iteration   1: 105.572 ns/op
# Warmup Iteration   2: 105.630 ns/op
# Warmup Iteration   3: 39.645 ns/op
# Warmup Iteration   4: 39.501 ns/op
# Warmup Iteration   5: 39.492 ns/op
Iteration   1: 39.446 ns/op
Iteration   2: 39.594 ns/op
Iteration   3: 39.595 ns/op
Iteration   4: 39.677 ns/op
Iteration   5: 39.545 ns/op

# Run progress: 43.03% complete, ETA 01:02:41
# Fork: 2 of 2
# Warmup Iteration   1: 105.828 ns/op
# Warmup Iteration   2: 105.608 ns/op
# Warmup Iteration   3: 40.198 ns/op
# Warmup Iteration   4: 40.188 ns/op
# Warmup Iteration   5: 40.225 ns/op
Iteration   1: 40.171 ns/op
Iteration   2: 40.164 ns/op
Iteration   3: 40.173 ns/op
Iteration   4: 40.304 ns/op
Iteration   5: 39.796 ns/op


Result "baselineSin":
  39.846 ±(99.9%) 0.486 ns/op [Average]
  (min, avg, max) = (39.446, 39.846, 40.304), stdev = 0.322
  CI (99.9%): [39.360, 40.333] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 60, b = 1)

# Run progress: 43.20% complete, ETA 01:02:30
# Fork: 1 of 2
# Warmup Iteration   1: 105.289 ns/op
# Warmup Iteration   2: 105.389 ns/op
# Warmup Iteration   3: 39.571 ns/op
# Warmup Iteration   4: 39.535 ns/op
# Warmup Iteration   5: 39.598 ns/op
Iteration   1: 39.522 ns/op
Iteration   2: 39.595 ns/op
Iteration   3: 39.586 ns/op
Iteration   4: 42.122 ns/op
Iteration   5: 42.356 ns/op

# Run progress: 43.37% complete, ETA 01:02:19
# Fork: 2 of 2
# Warmup Iteration   1: 105.457 ns/op
# Warmup Iteration   2: 105.359 ns/op
# Warmup Iteration   3: 39.837 ns/op
# Warmup Iteration   4: 39.789 ns/op
# Warmup Iteration   5: 39.828 ns/op
Iteration   1: 39.799 ns/op
Iteration   2: 39.827 ns/op
Iteration   3: 39.783 ns/op
Iteration   4: 39.853 ns/op
Iteration   5: 39.822 ns/op


Result "baselineSin":
  40.226 ±(99.9%) 1.615 ns/op [Average]
  (min, avg, max) = (39.522, 40.226, 42.356), stdev = 1.068
  CI (99.9%): [38.611, 41.842] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 60, b = 5)

# Run progress: 43.54% complete, ETA 01:02:07
# Fork: 1 of 2
# Warmup Iteration   1: 105.785 ns/op
# Warmup Iteration   2: 105.473 ns/op
# Warmup Iteration   3: 39.451 ns/op
# Warmup Iteration   4: 39.561 ns/op
# Warmup Iteration   5: 39.512 ns/op
Iteration   1: 39.490 ns/op
Iteration   2: 39.610 ns/op
Iteration   3: 39.640 ns/op
Iteration   4: 39.769 ns/op
Iteration   5: 39.795 ns/op

# Run progress: 43.71% complete, ETA 01:01:56
# Fork: 2 of 2
# Warmup Iteration   1: 105.532 ns/op
# Warmup Iteration   2: 105.718 ns/op
# Warmup Iteration   3: 39.732 ns/op
# Warmup Iteration   4: 39.695 ns/op
# Warmup Iteration   5: 39.695 ns/op
Iteration   1: 39.598 ns/op
Iteration   2: 39.712 ns/op
Iteration   3: 39.778 ns/op
Iteration   4: 39.620 ns/op
Iteration   5: 39.544 ns/op


Result "baselineSin":
  39.656 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (39.490, 39.656, 39.795), stdev = 0.104
  CI (99.9%): [39.498, 39.813] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 60, b = 10)

# Run progress: 43.88% complete, ETA 01:01:45
# Fork: 1 of 2
# Warmup Iteration   1: 105.635 ns/op
# Warmup Iteration   2: 105.414 ns/op
# Warmup Iteration   3: 39.574 ns/op
# Warmup Iteration   4: 39.672 ns/op
# Warmup Iteration   5: 39.598 ns/op
Iteration   1: 39.704 ns/op
Iteration   2: 39.618 ns/op
Iteration   3: 39.658 ns/op
Iteration   4: 39.825 ns/op
Iteration   5: 39.868 ns/op

# Run progress: 44.05% complete, ETA 01:01:34
# Fork: 2 of 2
# Warmup Iteration   1: 105.458 ns/op
# Warmup Iteration   2: 105.326 ns/op
# Warmup Iteration   3: 40.000 ns/op
# Warmup Iteration   4: 40.000 ns/op
# Warmup Iteration   5: 40.007 ns/op
Iteration   1: 39.995 ns/op
Iteration   2: 40.004 ns/op
Iteration   3: 39.907 ns/op
Iteration   4: 39.991 ns/op
Iteration   5: 40.612 ns/op


Result "baselineSin":
  39.918 ±(99.9%) 0.426 ns/op [Average]
  (min, avg, max) = (39.618, 39.918, 40.612), stdev = 0.282
  CI (99.9%): [39.492, 40.344] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 60, b = 100)

# Run progress: 44.22% complete, ETA 01:01:22
# Fork: 1 of 2
# Warmup Iteration   1: 105.973 ns/op
# Warmup Iteration   2: 105.675 ns/op
# Warmup Iteration   3: 39.672 ns/op
# Warmup Iteration   4: 39.575 ns/op
# Warmup Iteration   5: 39.701 ns/op
Iteration   1: 39.600 ns/op
Iteration   2: 39.640 ns/op
Iteration   3: 39.715 ns/op
Iteration   4: 39.809 ns/op
Iteration   5: 39.872 ns/op

# Run progress: 44.39% complete, ETA 01:01:11
# Fork: 2 of 2
# Warmup Iteration   1: 105.667 ns/op
# Warmup Iteration   2: 105.574 ns/op
# Warmup Iteration   3: 39.533 ns/op
# Warmup Iteration   4: 39.473 ns/op
# Warmup Iteration   5: 39.461 ns/op
Iteration   1: 39.409 ns/op
Iteration   2: 39.474 ns/op
Iteration   3: 39.623 ns/op
Iteration   4: 39.478 ns/op
Iteration   5: 39.574 ns/op


Result "baselineSin":
  39.619 ±(99.9%) 0.224 ns/op [Average]
  (min, avg, max) = (39.409, 39.619, 39.872), stdev = 0.148
  CI (99.9%): [39.395, 39.843] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 60, b = 1000)

# Run progress: 44.56% complete, ETA 01:01:00
# Fork: 1 of 2
# Warmup Iteration   1: 105.760 ns/op
# Warmup Iteration   2: 105.717 ns/op
# Warmup Iteration   3: 39.611 ns/op
# Warmup Iteration   4: 39.715 ns/op
# Warmup Iteration   5: 39.739 ns/op
Iteration   1: 39.648 ns/op
Iteration   2: 39.721 ns/op
Iteration   3: 39.701 ns/op
Iteration   4: 39.614 ns/op
Iteration   5: 40.512 ns/op

# Run progress: 44.73% complete, ETA 01:00:49
# Fork: 2 of 2
# Warmup Iteration   1: 105.566 ns/op
# Warmup Iteration   2: 105.407 ns/op
# Warmup Iteration   3: 39.827 ns/op
# Warmup Iteration   4: 39.818 ns/op
# Warmup Iteration   5: 39.915 ns/op
Iteration   1: 39.905 ns/op
Iteration   2: 39.960 ns/op
Iteration   3: 39.762 ns/op
Iteration   4: 39.570 ns/op
Iteration   5: 39.496 ns/op


Result "baselineSin":
  39.789 ±(99.9%) 0.440 ns/op [Average]
  (min, avg, max) = (39.496, 39.789, 40.512), stdev = 0.291
  CI (99.9%): [39.349, 40.229] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 60, b = 10000)

# Run progress: 44.90% complete, ETA 01:00:38
# Fork: 1 of 2
# Warmup Iteration   1: 105.726 ns/op
# Warmup Iteration   2: 105.708 ns/op
# Warmup Iteration   3: 40.044 ns/op
# Warmup Iteration   4: 39.999 ns/op
# Warmup Iteration   5: 39.967 ns/op
Iteration   1: 39.863 ns/op
Iteration   2: 40.058 ns/op
Iteration   3: 39.825 ns/op
Iteration   4: 39.654 ns/op
Iteration   5: 39.610 ns/op

# Run progress: 45.07% complete, ETA 01:00:26
# Fork: 2 of 2
# Warmup Iteration   1: 105.660 ns/op
# Warmup Iteration   2: 105.356 ns/op
# Warmup Iteration   3: 39.596 ns/op
# Warmup Iteration   4: 39.635 ns/op
# Warmup Iteration   5: 39.720 ns/op
Iteration   1: 39.650 ns/op
Iteration   2: 39.580 ns/op
Iteration   3: 39.532 ns/op
Iteration   4: 39.587 ns/op
Iteration   5: 39.744 ns/op


Result "baselineSin":
  39.710 ±(99.9%) 0.247 ns/op [Average]
  (min, avg, max) = (39.532, 39.710, 40.058), stdev = 0.163
  CI (99.9%): [39.464, 39.957] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 85, b = 0.5)

# Run progress: 45.24% complete, ETA 01:00:15
# Fork: 1 of 2
# Warmup Iteration   1: 105.533 ns/op
# Warmup Iteration   2: 105.334 ns/op
# Warmup Iteration   3: 40.022 ns/op
# Warmup Iteration   4: 39.892 ns/op
# Warmup Iteration   5: 39.779 ns/op
Iteration   1: 39.884 ns/op
Iteration   2: 39.926 ns/op
Iteration   3: 39.847 ns/op
Iteration   4: 39.703 ns/op
Iteration   5: 39.909 ns/op

# Run progress: 45.41% complete, ETA 01:00:04
# Fork: 2 of 2
# Warmup Iteration   1: 105.706 ns/op
# Warmup Iteration   2: 105.419 ns/op
# Warmup Iteration   3: 39.688 ns/op
# Warmup Iteration   4: 39.604 ns/op
# Warmup Iteration   5: 39.665 ns/op
Iteration   1: 39.696 ns/op
Iteration   2: 39.652 ns/op
Iteration   3: 39.694 ns/op
Iteration   4: 39.669 ns/op
Iteration   5: 39.505 ns/op


Result "baselineSin":
  39.748 ±(99.9%) 0.207 ns/op [Average]
  (min, avg, max) = (39.505, 39.748, 39.926), stdev = 0.137
  CI (99.9%): [39.542, 39.955] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 85, b = 1)

# Run progress: 45.58% complete, ETA 00:59:53
# Fork: 1 of 2
# Warmup Iteration   1: 105.882 ns/op
# Warmup Iteration   2: 105.647 ns/op
# Warmup Iteration   3: 39.501 ns/op
# Warmup Iteration   4: 39.576 ns/op
# Warmup Iteration   5: 39.509 ns/op
Iteration   1: 39.554 ns/op
Iteration   2: 39.500 ns/op
Iteration   3: 39.525 ns/op
Iteration   4: 39.501 ns/op
Iteration   5: 39.779 ns/op

# Run progress: 45.75% complete, ETA 00:59:41
# Fork: 2 of 2
# Warmup Iteration   1: 105.610 ns/op
# Warmup Iteration   2: 105.407 ns/op
# Warmup Iteration   3: 39.560 ns/op
# Warmup Iteration   4: 39.586 ns/op
# Warmup Iteration   5: 39.640 ns/op
Iteration   1: 39.591 ns/op
Iteration   2: 39.604 ns/op
Iteration   3: 39.568 ns/op
Iteration   4: 39.701 ns/op
Iteration   5: 39.836 ns/op


Result "baselineSin":
  39.616 ±(99.9%) 0.177 ns/op [Average]
  (min, avg, max) = (39.500, 39.616, 39.836), stdev = 0.117
  CI (99.9%): [39.438, 39.793] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 85, b = 5)

# Run progress: 45.92% complete, ETA 00:59:30
# Fork: 1 of 2
# Warmup Iteration   1: 105.557 ns/op
# Warmup Iteration   2: 105.369 ns/op
# Warmup Iteration   3: 39.824 ns/op
# Warmup Iteration   4: 39.805 ns/op
# Warmup Iteration   5: 39.876 ns/op
Iteration   1: 39.751 ns/op
Iteration   2: 39.788 ns/op
Iteration   3: 39.864 ns/op
Iteration   4: 39.649 ns/op
Iteration   5: 39.755 ns/op

# Run progress: 46.09% complete, ETA 00:59:19
# Fork: 2 of 2
# Warmup Iteration   1: 105.883 ns/op
# Warmup Iteration   2: 105.801 ns/op
# Warmup Iteration   3: 53.586 ns/op
# Warmup Iteration   4: 53.218 ns/op
# Warmup Iteration   5: 54.476 ns/op
Iteration   1: 54.624 ns/op
Iteration   2: 54.738 ns/op
Iteration   3: 54.430 ns/op
Iteration   4: 53.114 ns/op
Iteration   5: 54.652 ns/op


Result "baselineSin":
  47.036 ±(99.9%) 11.614 ns/op [Average]
  (min, avg, max) = (39.649, 47.036, 54.738), stdev = 7.682
  CI (99.9%): [35.422, 58.651] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 85, b = 10)

# Run progress: 46.26% complete, ETA 00:59:08
# Fork: 1 of 2
# Warmup Iteration   1: 105.479 ns/op
# Warmup Iteration   2: 105.281 ns/op
# Warmup Iteration   3: 39.518 ns/op
# Warmup Iteration   4: 39.501 ns/op
# Warmup Iteration   5: 39.461 ns/op
Iteration   1: 39.536 ns/op
Iteration   2: 39.489 ns/op
Iteration   3: 39.609 ns/op
Iteration   4: 39.493 ns/op
Iteration   5: 40.550 ns/op

# Run progress: 46.43% complete, ETA 00:58:56
# Fork: 2 of 2
# Warmup Iteration   1: 105.820 ns/op
# Warmup Iteration   2: 105.901 ns/op
# Warmup Iteration   3: 39.783 ns/op
# Warmup Iteration   4: 39.782 ns/op
# Warmup Iteration   5: 39.695 ns/op
Iteration   1: 39.820 ns/op
Iteration   2: 39.735 ns/op
Iteration   3: 39.669 ns/op
Iteration   4: 40.739 ns/op
Iteration   5: 41.993 ns/op


Result "baselineSin":
  40.063 ±(99.9%) 1.222 ns/op [Average]
  (min, avg, max) = (39.489, 40.063, 41.993), stdev = 0.808
  CI (99.9%): [38.841, 41.285] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 85, b = 100)

# Run progress: 46.60% complete, ETA 00:58:45
# Fork: 1 of 2
# Warmup Iteration   1: 106.840 ns/op
# Warmup Iteration   2: 106.460 ns/op
# Warmup Iteration   3: 39.894 ns/op
# Warmup Iteration   4: 39.848 ns/op
# Warmup Iteration   5: 39.874 ns/op
Iteration   1: 39.896 ns/op
Iteration   2: 39.826 ns/op
Iteration   3: 39.859 ns/op
Iteration   4: 39.544 ns/op
Iteration   5: 39.583 ns/op

# Run progress: 46.77% complete, ETA 00:58:34
# Fork: 2 of 2
# Warmup Iteration   1: 105.350 ns/op
# Warmup Iteration   2: 104.990 ns/op
# Warmup Iteration   3: 39.588 ns/op
# Warmup Iteration   4: 39.639 ns/op
# Warmup Iteration   5: 39.719 ns/op
Iteration   1: 39.645 ns/op
Iteration   2: 39.602 ns/op
Iteration   3: 39.739 ns/op
Iteration   4: 39.509 ns/op
Iteration   5: 39.810 ns/op


Result "baselineSin":
  39.701 ±(99.9%) 0.214 ns/op [Average]
  (min, avg, max) = (39.509, 39.701, 39.896), stdev = 0.142
  CI (99.9%): [39.487, 39.915] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 85, b = 1000)

# Run progress: 46.94% complete, ETA 00:58:23
# Fork: 1 of 2
# Warmup Iteration   1: 105.384 ns/op
# Warmup Iteration   2: 105.272 ns/op
# Warmup Iteration   3: 39.885 ns/op
# Warmup Iteration   4: 39.818 ns/op
# Warmup Iteration   5: 39.737 ns/op
Iteration   1: 39.867 ns/op
Iteration   2: 39.798 ns/op
Iteration   3: 39.802 ns/op
Iteration   4: 39.855 ns/op
Iteration   5: 39.613 ns/op

# Run progress: 47.11% complete, ETA 00:58:12
# Fork: 2 of 2
# Warmup Iteration   1: 105.978 ns/op
# Warmup Iteration   2: 105.613 ns/op
# Warmup Iteration   3: 39.631 ns/op
# Warmup Iteration   4: 39.649 ns/op
# Warmup Iteration   5: 39.684 ns/op
Iteration   1: 39.691 ns/op
Iteration   2: 39.787 ns/op
Iteration   3: 39.632 ns/op
Iteration   4: 39.578 ns/op
Iteration   5: 39.617 ns/op


Result "baselineSin":
  39.724 ±(99.9%) 0.165 ns/op [Average]
  (min, avg, max) = (39.578, 39.724, 39.867), stdev = 0.109
  CI (99.9%): [39.559, 39.890] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 85, b = 10000)

# Run progress: 47.28% complete, ETA 00:58:00
# Fork: 1 of 2
# Warmup Iteration   1: 105.516 ns/op
# Warmup Iteration   2: 105.270 ns/op
# Warmup Iteration   3: 39.607 ns/op
# Warmup Iteration   4: 39.560 ns/op
# Warmup Iteration   5: 39.678 ns/op
Iteration   1: 39.686 ns/op
Iteration   2: 39.693 ns/op
Iteration   3: 39.413 ns/op
Iteration   4: 39.596 ns/op
Iteration   5: 39.663 ns/op

# Run progress: 47.45% complete, ETA 00:57:49
# Fork: 2 of 2
# Warmup Iteration   1: 105.633 ns/op
# Warmup Iteration   2: 105.407 ns/op
# Warmup Iteration   3: 39.637 ns/op
# Warmup Iteration   4: 39.622 ns/op
# Warmup Iteration   5: 39.650 ns/op
Iteration   1: 39.667 ns/op
Iteration   2: 39.555 ns/op
Iteration   3: 39.452 ns/op
Iteration   4: 40.368 ns/op
Iteration   5: 40.447 ns/op


Result "baselineSin":
  39.754 ±(99.9%) 0.541 ns/op [Average]
  (min, avg, max) = (39.413, 39.754, 40.447), stdev = 0.358
  CI (99.9%): [39.213, 40.295] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 90, b = 0.5)

# Run progress: 47.62% complete, ETA 00:57:38
# Fork: 1 of 2
# Warmup Iteration   1: 122.117 ns/op
# Warmup Iteration   2: 121.820 ns/op
# Warmup Iteration   3: 47.656 ns/op
# Warmup Iteration   4: 47.646 ns/op
# Warmup Iteration   5: 47.620 ns/op
Iteration   1: 47.604 ns/op
Iteration   2: 47.644 ns/op
Iteration   3: 47.613 ns/op
Iteration   4: 47.543 ns/op
Iteration   5: 47.598 ns/op

# Run progress: 47.79% complete, ETA 00:57:27
# Fork: 2 of 2
# Warmup Iteration   1: 121.738 ns/op
# Warmup Iteration   2: 121.593 ns/op
# Warmup Iteration   3: 48.687 ns/op
# Warmup Iteration   4: 48.583 ns/op
# Warmup Iteration   5: 48.622 ns/op
Iteration   1: 48.611 ns/op
Iteration   2: 48.564 ns/op
Iteration   3: 48.692 ns/op
Iteration   4: 47.419 ns/op
Iteration   5: 47.585 ns/op


Result "baselineSin":
  47.887 ±(99.9%) 0.774 ns/op [Average]
  (min, avg, max) = (47.419, 47.887, 48.692), stdev = 0.512
  CI (99.9%): [47.114, 48.661] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 90, b = 1)

# Run progress: 47.96% complete, ETA 00:57:15
# Fork: 1 of 2
# Warmup Iteration   1: 122.096 ns/op
# Warmup Iteration   2: 122.028 ns/op
# Warmup Iteration   3: 47.761 ns/op
# Warmup Iteration   4: 47.679 ns/op
# Warmup Iteration   5: 47.744 ns/op
Iteration   1: 47.666 ns/op
Iteration   2: 47.689 ns/op
Iteration   3: 47.785 ns/op
Iteration   4: 47.562 ns/op
Iteration   5: 47.506 ns/op

# Run progress: 48.13% complete, ETA 00:57:04
# Fork: 2 of 2
# Warmup Iteration   1: 121.948 ns/op
# Warmup Iteration   2: 121.784 ns/op
# Warmup Iteration   3: 47.537 ns/op
# Warmup Iteration   4: 47.464 ns/op
# Warmup Iteration   5: 47.503 ns/op
Iteration   1: 47.565 ns/op
Iteration   2: 47.590 ns/op
Iteration   3: 47.480 ns/op
Iteration   4: 47.512 ns/op
Iteration   5: 47.402 ns/op


Result "baselineSin":
  47.576 ±(99.9%) 0.170 ns/op [Average]
  (min, avg, max) = (47.402, 47.576, 47.785), stdev = 0.112
  CI (99.9%): [47.406, 47.745] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 90, b = 5)

# Run progress: 48.30% complete, ETA 00:56:53
# Fork: 1 of 2
# Warmup Iteration   1: 121.902 ns/op
# Warmup Iteration   2: 121.862 ns/op
# Warmup Iteration   3: 47.670 ns/op
# Warmup Iteration   4: 47.644 ns/op
# Warmup Iteration   5: 47.680 ns/op
Iteration   1: 47.671 ns/op
Iteration   2: 47.622 ns/op
Iteration   3: 47.695 ns/op
Iteration   4: 47.667 ns/op
Iteration   5: 47.539 ns/op

# Run progress: 48.47% complete, ETA 00:56:42
# Fork: 2 of 2
# Warmup Iteration   1: 121.824 ns/op
# Warmup Iteration   2: 121.709 ns/op
# Warmup Iteration   3: 47.653 ns/op
# Warmup Iteration   4: 47.736 ns/op
# Warmup Iteration   5: 47.543 ns/op
Iteration   1: 47.547 ns/op
Iteration   2: 47.623 ns/op
Iteration   3: 47.594 ns/op
Iteration   4: 47.560 ns/op
Iteration   5: 47.525 ns/op


Result "baselineSin":
  47.604 ±(99.9%) 0.092 ns/op [Average]
  (min, avg, max) = (47.525, 47.604, 47.695), stdev = 0.061
  CI (99.9%): [47.512, 47.696] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 90, b = 10)

# Run progress: 48.64% complete, ETA 00:56:30
# Fork: 1 of 2
# Warmup Iteration   1: 122.375 ns/op
# Warmup Iteration   2: 122.009 ns/op
# Warmup Iteration   3: 47.539 ns/op
# Warmup Iteration   4: 47.440 ns/op
# Warmup Iteration   5: 47.373 ns/op
Iteration   1: 47.360 ns/op
Iteration   2: 47.467 ns/op
Iteration   3: 47.495 ns/op
Iteration   4: 49.132 ns/op
Iteration   5: 49.079 ns/op

# Run progress: 48.81% complete, ETA 00:56:19
# Fork: 2 of 2
# Warmup Iteration   1: 122.150 ns/op
# Warmup Iteration   2: 121.873 ns/op
# Warmup Iteration   3: 47.627 ns/op
# Warmup Iteration   4: 47.520 ns/op
# Warmup Iteration   5: 47.403 ns/op
Iteration   1: 47.550 ns/op
Iteration   2: 47.464 ns/op
Iteration   3: 47.466 ns/op
Iteration   4: 47.513 ns/op
Iteration   5: 47.628 ns/op


Result "baselineSin":
  47.816 ±(99.9%) 1.033 ns/op [Average]
  (min, avg, max) = (47.360, 47.816, 49.132), stdev = 0.683
  CI (99.9%): [46.782, 48.849] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 90, b = 100)

# Run progress: 48.98% complete, ETA 00:56:08
# Fork: 1 of 2
# Warmup Iteration   1: 121.933 ns/op
# Warmup Iteration   2: 122.062 ns/op
# Warmup Iteration   3: 47.543 ns/op
# Warmup Iteration   4: 47.589 ns/op
# Warmup Iteration   5: 47.513 ns/op
Iteration   1: 47.495 ns/op
Iteration   2: 47.576 ns/op
Iteration   3: 47.484 ns/op
Iteration   4: 47.577 ns/op
Iteration   5: 47.630 ns/op

# Run progress: 49.15% complete, ETA 00:55:57
# Fork: 2 of 2
# Warmup Iteration   1: 121.837 ns/op
# Warmup Iteration   2: 121.730 ns/op
# Warmup Iteration   3: 47.567 ns/op
# Warmup Iteration   4: 47.554 ns/op
# Warmup Iteration   5: 47.471 ns/op
Iteration   1: 47.568 ns/op
Iteration   2: 47.499 ns/op
Iteration   3: 47.455 ns/op
Iteration   4: 51.130 ns/op
Iteration   5: 51.119 ns/op


Result "baselineSin":
  48.253 ±(99.9%) 2.289 ns/op [Average]
  (min, avg, max) = (47.455, 48.253, 51.130), stdev = 1.514
  CI (99.9%): [45.964, 50.542] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 90, b = 1000)

# Run progress: 49.32% complete, ETA 00:55:46
# Fork: 1 of 2
# Warmup Iteration   1: 122.009 ns/op
# Warmup Iteration   2: 121.863 ns/op
# Warmup Iteration   3: 47.688 ns/op
# Warmup Iteration   4: 47.539 ns/op
# Warmup Iteration   5: 47.560 ns/op
Iteration   1: 47.475 ns/op
Iteration   2: 47.527 ns/op
Iteration   3: 47.566 ns/op
Iteration   4: 47.538 ns/op
Iteration   5: 47.515 ns/op

# Run progress: 49.49% complete, ETA 00:55:34
# Fork: 2 of 2
# Warmup Iteration   1: 122.018 ns/op
# Warmup Iteration   2: 122.076 ns/op
# Warmup Iteration   3: 47.366 ns/op
# Warmup Iteration   4: 47.387 ns/op
# Warmup Iteration   5: 47.478 ns/op
Iteration   1: 47.366 ns/op
Iteration   2: 47.398 ns/op
Iteration   3: 47.430 ns/op
Iteration   4: 47.359 ns/op
Iteration   5: 47.738 ns/op


Result "baselineSin":
  47.491 ±(99.9%) 0.172 ns/op [Average]
  (min, avg, max) = (47.359, 47.491, 47.738), stdev = 0.114
  CI (99.9%): [47.320, 47.663] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.baselineSin
# Parameters: (a = 90, b = 10000)

# Run progress: 49.66% complete, ETA 00:55:23
# Fork: 1 of 2
# Warmup Iteration   1: 121.539 ns/op
# Warmup Iteration   2: 121.811 ns/op
# Warmup Iteration   3: 48.210 ns/op
# Warmup Iteration   4: 48.224 ns/op
# Warmup Iteration   5: 48.205 ns/op
Iteration   1: 48.211 ns/op
Iteration   2: 48.179 ns/op
Iteration   3: 48.244 ns/op
Iteration   4: 48.199 ns/op
Iteration   5: 47.509 ns/op

# Run progress: 49.83% complete, ETA 00:55:12
# Fork: 2 of 2
# Warmup Iteration   1: 122.232 ns/op
# Warmup Iteration   2: 121.935 ns/op
# Warmup Iteration   3: 47.634 ns/op
# Warmup Iteration   4: 47.531 ns/op
# Warmup Iteration   5: 47.968 ns/op
Iteration   1: 47.523 ns/op
Iteration   2: 47.594 ns/op
Iteration   3: 47.520 ns/op
Iteration   4: 48.750 ns/op
Iteration   5: 48.781 ns/op


Result "baselineSin":
  48.051 ±(99.9%) 0.745 ns/op [Average]
  (min, avg, max) = (47.509, 48.051, 48.781), stdev = 0.493
  CI (99.9%): [47.306, 48.796] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 0, b = 0.5)

# Run progress: 50.00% complete, ETA 00:55:01
# Fork: 1 of 2
# Warmup Iteration   1: 6.967 ns/op
# Warmup Iteration   2: 6.952 ns/op
# Warmup Iteration   3: 6.911 ns/op
# Warmup Iteration   4: 6.907 ns/op
# Warmup Iteration   5: 6.918 ns/op
Iteration   1: 6.898 ns/op
Iteration   2: 6.914 ns/op
Iteration   3: 6.898 ns/op
Iteration   4: 6.900 ns/op
Iteration   5: 6.903 ns/op

# Run progress: 50.17% complete, ETA 00:54:49
# Fork: 2 of 2
# Warmup Iteration   1: 6.991 ns/op
# Warmup Iteration   2: 6.958 ns/op
# Warmup Iteration   3: 6.919 ns/op
# Warmup Iteration   4: 6.912 ns/op
# Warmup Iteration   5: 6.919 ns/op
Iteration   1: 6.911 ns/op
Iteration   2: 6.911 ns/op
Iteration   3: 6.922 ns/op
Iteration   4: 6.929 ns/op
Iteration   5: 6.916 ns/op


Result "fastMathAtan":
  6.910 ±(99.9%) 0.016 ns/op [Average]
  (min, avg, max) = (6.898, 6.910, 6.929), stdev = 0.010
  CI (99.9%): [6.894, 6.926] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 0, b = 1)

# Run progress: 50.34% complete, ETA 00:54:38
# Fork: 1 of 2
# Warmup Iteration   1: 6.969 ns/op
# Warmup Iteration   2: 6.948 ns/op
# Warmup Iteration   3: 6.921 ns/op
# Warmup Iteration   4: 6.908 ns/op
# Warmup Iteration   5: 6.897 ns/op
Iteration   1: 6.908 ns/op
Iteration   2: 6.896 ns/op
Iteration   3: 6.913 ns/op
Iteration   4: 6.906 ns/op
Iteration   5: 6.904 ns/op

# Run progress: 50.51% complete, ETA 00:54:27
# Fork: 2 of 2
# Warmup Iteration   1: 6.985 ns/op
# Warmup Iteration   2: 6.964 ns/op
# Warmup Iteration   3: 6.919 ns/op
# Warmup Iteration   4: 6.904 ns/op
# Warmup Iteration   5: 6.917 ns/op
Iteration   1: 6.913 ns/op
Iteration   2: 6.919 ns/op
Iteration   3: 6.915 ns/op
Iteration   4: 6.902 ns/op
Iteration   5: 6.906 ns/op


Result "fastMathAtan":
  6.908 ±(99.9%) 0.011 ns/op [Average]
  (min, avg, max) = (6.896, 6.908, 6.919), stdev = 0.007
  CI (99.9%): [6.898, 6.919] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 0, b = 5)

# Run progress: 50.68% complete, ETA 00:54:16
# Fork: 1 of 2
# Warmup Iteration   1: 7.338 ns/op
# Warmup Iteration   2: 6.967 ns/op
# Warmup Iteration   3: 6.952 ns/op
# Warmup Iteration   4: 6.913 ns/op
# Warmup Iteration   5: 6.894 ns/op
Iteration   1: 6.907 ns/op
Iteration   2: 6.901 ns/op
Iteration   3: 6.906 ns/op
Iteration   4: 6.884 ns/op
Iteration   5: 6.908 ns/op

# Run progress: 50.85% complete, ETA 00:54:04
# Fork: 2 of 2
# Warmup Iteration   1: 6.974 ns/op
# Warmup Iteration   2: 6.979 ns/op
# Warmup Iteration   3: 6.907 ns/op
# Warmup Iteration   4: 6.904 ns/op
# Warmup Iteration   5: 6.908 ns/op
Iteration   1: 6.920 ns/op
Iteration   2: 6.924 ns/op
Iteration   3: 6.918 ns/op
Iteration   4: 6.905 ns/op
Iteration   5: 6.925 ns/op


Result "fastMathAtan":
  6.910 ±(99.9%) 0.019 ns/op [Average]
  (min, avg, max) = (6.884, 6.910, 6.925), stdev = 0.012
  CI (99.9%): [6.891, 6.929] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 0, b = 10)

# Run progress: 51.02% complete, ETA 00:53:53
# Fork: 1 of 2
# Warmup Iteration   1: 6.994 ns/op
# Warmup Iteration   2: 6.961 ns/op
# Warmup Iteration   3: 6.915 ns/op
# Warmup Iteration   4: 6.925 ns/op
# Warmup Iteration   5: 6.911 ns/op
Iteration   1: 6.916 ns/op
Iteration   2: 6.911 ns/op
Iteration   3: 6.912 ns/op
Iteration   4: 6.923 ns/op
Iteration   5: 6.923 ns/op

# Run progress: 51.19% complete, ETA 00:53:42
# Fork: 2 of 2
# Warmup Iteration   1: 6.981 ns/op
# Warmup Iteration   2: 6.972 ns/op
# Warmup Iteration   3: 6.916 ns/op
# Warmup Iteration   4: 6.909 ns/op
# Warmup Iteration   5: 6.915 ns/op
Iteration   1: 6.908 ns/op
Iteration   2: 6.924 ns/op
Iteration   3: 6.914 ns/op
Iteration   4: 6.895 ns/op
Iteration   5: 6.909 ns/op


Result "fastMathAtan":
  6.914 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (6.895, 6.914, 6.924), stdev = 0.009
  CI (99.9%): [6.900, 6.927] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 0, b = 100)

# Run progress: 51.36% complete, ETA 00:53:31
# Fork: 1 of 2
# Warmup Iteration   1: 6.979 ns/op
# Warmup Iteration   2: 6.975 ns/op
# Warmup Iteration   3: 6.927 ns/op
# Warmup Iteration   4: 6.927 ns/op
# Warmup Iteration   5: 6.913 ns/op
Iteration   1: 6.926 ns/op
Iteration   2: 6.929 ns/op
Iteration   3: 6.921 ns/op
Iteration   4: 6.918 ns/op
Iteration   5: 6.917 ns/op

# Run progress: 51.53% complete, ETA 00:53:20
# Fork: 2 of 2
# Warmup Iteration   1: 6.974 ns/op
# Warmup Iteration   2: 6.962 ns/op
# Warmup Iteration   3: 6.929 ns/op
# Warmup Iteration   4: 6.906 ns/op
# Warmup Iteration   5: 6.907 ns/op
Iteration   1: 6.916 ns/op
Iteration   2: 6.922 ns/op
Iteration   3: 6.898 ns/op
Iteration   4: 6.909 ns/op
Iteration   5: 6.908 ns/op


Result "fastMathAtan":
  6.916 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (6.898, 6.916, 6.929), stdev = 0.009
  CI (99.9%): [6.902, 6.930] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 0, b = 1000)

# Run progress: 51.70% complete, ETA 00:53:08
# Fork: 1 of 2
# Warmup Iteration   1: 6.998 ns/op
# Warmup Iteration   2: 7.749 ns/op
# Warmup Iteration   3: 6.916 ns/op
# Warmup Iteration   4: 6.917 ns/op
# Warmup Iteration   5: 6.918 ns/op
Iteration   1: 6.928 ns/op
Iteration   2: 6.917 ns/op
Iteration   3: 6.913 ns/op
Iteration   4: 6.928 ns/op
Iteration   5: 6.914 ns/op

# Run progress: 51.87% complete, ETA 00:52:57
# Fork: 2 of 2
# Warmup Iteration   1: 6.978 ns/op
# Warmup Iteration   2: 6.950 ns/op
# Warmup Iteration   3: 6.899 ns/op
# Warmup Iteration   4: 6.911 ns/op
# Warmup Iteration   5: 6.900 ns/op
Iteration   1: 6.902 ns/op
Iteration   2: 6.914 ns/op
Iteration   3: 6.907 ns/op
Iteration   4: 6.911 ns/op
Iteration   5: 6.903 ns/op


Result "fastMathAtan":
  6.914 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (6.902, 6.914, 6.928), stdev = 0.009
  CI (99.9%): [6.900, 6.927] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 0, b = 10000)

# Run progress: 52.04% complete, ETA 00:52:46
# Fork: 1 of 2
# Warmup Iteration   1: 6.976 ns/op
# Warmup Iteration   2: 6.971 ns/op
# Warmup Iteration   3: 6.914 ns/op
# Warmup Iteration   4: 6.919 ns/op
# Warmup Iteration   5: 6.921 ns/op
Iteration   1: 6.924 ns/op
Iteration   2: 6.924 ns/op
Iteration   3: 6.922 ns/op
Iteration   4: 6.907 ns/op
Iteration   5: 6.915 ns/op

# Run progress: 52.21% complete, ETA 00:52:35
# Fork: 2 of 2
# Warmup Iteration   1: 6.978 ns/op
# Warmup Iteration   2: 6.961 ns/op
# Warmup Iteration   3: 6.908 ns/op
# Warmup Iteration   4: 6.926 ns/op
# Warmup Iteration   5: 6.902 ns/op
Iteration   1: 6.903 ns/op
Iteration   2: 6.907 ns/op
Iteration   3: 6.896 ns/op
Iteration   4: 6.899 ns/op
Iteration   5: 6.898 ns/op


Result "fastMathAtan":
  6.909 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (6.896, 6.909, 6.924), stdev = 0.011
  CI (99.9%): [6.893, 6.926] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 5, b = 0.5)

# Run progress: 52.38% complete, ETA 00:52:23
# Fork: 1 of 2
# Warmup Iteration   1: 7.004 ns/op
# Warmup Iteration   2: 6.986 ns/op
# Warmup Iteration   3: 6.933 ns/op
# Warmup Iteration   4: 6.907 ns/op
# Warmup Iteration   5: 6.908 ns/op
Iteration   1: 6.923 ns/op
Iteration   2: 6.906 ns/op
Iteration   3: 6.911 ns/op
Iteration   4: 6.913 ns/op
Iteration   5: 6.910 ns/op

# Run progress: 52.55% complete, ETA 00:52:12
# Fork: 2 of 2
# Warmup Iteration   1: 6.966 ns/op
# Warmup Iteration   2: 6.947 ns/op
# Warmup Iteration   3: 6.902 ns/op
# Warmup Iteration   4: 6.893 ns/op
# Warmup Iteration   5: 6.909 ns/op
Iteration   1: 6.903 ns/op
Iteration   2: 6.901 ns/op
Iteration   3: 6.905 ns/op
Iteration   4: 6.899 ns/op
Iteration   5: 6.896 ns/op


Result "fastMathAtan":
  6.907 ±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (6.896, 6.907, 6.923), stdev = 0.008
  CI (99.9%): [6.895, 6.919] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 5, b = 1)

# Run progress: 52.72% complete, ETA 00:52:01
# Fork: 1 of 2
# Warmup Iteration   1: 7.001 ns/op
# Warmup Iteration   2: 6.984 ns/op
# Warmup Iteration   3: 6.924 ns/op
# Warmup Iteration   4: 6.908 ns/op
# Warmup Iteration   5: 6.917 ns/op
Iteration   1: 6.922 ns/op
Iteration   2: 6.907 ns/op
Iteration   3: 6.911 ns/op
Iteration   4: 6.929 ns/op
Iteration   5: 6.906 ns/op

# Run progress: 52.89% complete, ETA 00:51:50
# Fork: 2 of 2
# Warmup Iteration   1: 6.990 ns/op
# Warmup Iteration   2: 6.953 ns/op
# Warmup Iteration   3: 6.930 ns/op
# Warmup Iteration   4: 6.923 ns/op
# Warmup Iteration   5: 6.911 ns/op
Iteration   1: 6.920 ns/op
Iteration   2: 6.919 ns/op
Iteration   3: 6.930 ns/op
Iteration   4: 6.929 ns/op
Iteration   5: 6.915 ns/op


Result "fastMathAtan":
  6.919 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (6.906, 6.919, 6.930), stdev = 0.009
  CI (99.9%): [6.905, 6.932] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 5, b = 5)

# Run progress: 53.06% complete, ETA 00:51:39
# Fork: 1 of 2
# Warmup Iteration   1: 6.975 ns/op
# Warmup Iteration   2: 6.954 ns/op
# Warmup Iteration   3: 6.908 ns/op
# Warmup Iteration   4: 6.918 ns/op
# Warmup Iteration   5: 6.908 ns/op
Iteration   1: 6.913 ns/op
Iteration   2: 6.922 ns/op
Iteration   3: 6.921 ns/op
Iteration   4: 6.907 ns/op
Iteration   5: 6.897 ns/op

# Run progress: 53.23% complete, ETA 00:51:27
# Fork: 2 of 2
# Warmup Iteration   1: 6.993 ns/op
# Warmup Iteration   2: 6.969 ns/op
# Warmup Iteration   3: 6.921 ns/op
# Warmup Iteration   4: 6.923 ns/op
# Warmup Iteration   5: 6.924 ns/op
Iteration   1: 6.920 ns/op
Iteration   2: 6.929 ns/op
Iteration   3: 6.917 ns/op
Iteration   4: 6.928 ns/op
Iteration   5: 6.921 ns/op


Result "fastMathAtan":
  6.918 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (6.897, 6.918, 6.929), stdev = 0.010
  CI (99.9%): [6.903, 6.932] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 5, b = 10)

# Run progress: 53.40% complete, ETA 00:51:16
# Fork: 1 of 2
# Warmup Iteration   1: 6.972 ns/op
# Warmup Iteration   2: 6.949 ns/op
# Warmup Iteration   3: 6.891 ns/op
# Warmup Iteration   4: 6.914 ns/op
# Warmup Iteration   5: 6.917 ns/op
Iteration   1: 6.896 ns/op
Iteration   2: 6.920 ns/op
Iteration   3: 6.909 ns/op
Iteration   4: 6.912 ns/op
Iteration   5: 6.911 ns/op

# Run progress: 53.57% complete, ETA 00:51:05
# Fork: 2 of 2
# Warmup Iteration   1: 6.980 ns/op
# Warmup Iteration   2: 6.958 ns/op
# Warmup Iteration   3: 6.922 ns/op
# Warmup Iteration   4: 6.923 ns/op
# Warmup Iteration   5: 6.911 ns/op
Iteration   1: 6.911 ns/op
Iteration   2: 6.920 ns/op
Iteration   3: 6.918 ns/op
Iteration   4: 6.922 ns/op
Iteration   5: 6.910 ns/op


Result "fastMathAtan":
  6.913 ±(99.9%) 0.011 ns/op [Average]
  (min, avg, max) = (6.896, 6.913, 6.922), stdev = 0.007
  CI (99.9%): [6.901, 6.924] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 5, b = 100)

# Run progress: 53.74% complete, ETA 00:50:54
# Fork: 1 of 2
# Warmup Iteration   1: 6.969 ns/op
# Warmup Iteration   2: 6.952 ns/op
# Warmup Iteration   3: 6.913 ns/op
# Warmup Iteration   4: 6.913 ns/op
# Warmup Iteration   5: 6.904 ns/op
Iteration   1: 6.917 ns/op
Iteration   2: 6.898 ns/op
Iteration   3: 6.893 ns/op
Iteration   4: 6.889 ns/op
Iteration   5: 6.911 ns/op

# Run progress: 53.91% complete, ETA 00:50:42
# Fork: 2 of 2
# Warmup Iteration   1: 7.005 ns/op
# Warmup Iteration   2: 6.990 ns/op
# Warmup Iteration   3: 6.917 ns/op
# Warmup Iteration   4: 6.917 ns/op
# Warmup Iteration   5: 6.909 ns/op
Iteration   1: 6.930 ns/op
Iteration   2: 6.917 ns/op
Iteration   3: 6.924 ns/op
Iteration   4: 6.914 ns/op
Iteration   5: 6.916 ns/op


Result "fastMathAtan":
  6.911 ±(99.9%) 0.020 ns/op [Average]
  (min, avg, max) = (6.889, 6.911, 6.930), stdev = 0.013
  CI (99.9%): [6.891, 6.931] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 5, b = 1000)

# Run progress: 54.08% complete, ETA 00:50:31
# Fork: 1 of 2
# Warmup Iteration   1: 6.969 ns/op
# Warmup Iteration   2: 6.959 ns/op
# Warmup Iteration   3: 6.905 ns/op
# Warmup Iteration   4: 6.899 ns/op
# Warmup Iteration   5: 6.899 ns/op
Iteration   1: 6.914 ns/op
Iteration   2: 6.904 ns/op
Iteration   3: 6.891 ns/op
Iteration   4: 6.905 ns/op
Iteration   5: 6.909 ns/op

# Run progress: 54.25% complete, ETA 00:50:20
# Fork: 2 of 2
# Warmup Iteration   1: 7.418 ns/op
# Warmup Iteration   2: 6.956 ns/op
# Warmup Iteration   3: 6.907 ns/op
# Warmup Iteration   4: 6.916 ns/op
# Warmup Iteration   5: 6.915 ns/op
Iteration   1: 6.920 ns/op
Iteration   2: 6.919 ns/op
Iteration   3: 6.904 ns/op
Iteration   4: 6.911 ns/op
Iteration   5: 6.909 ns/op


Result "fastMathAtan":
  6.909 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (6.891, 6.909, 6.920), stdev = 0.008
  CI (99.9%): [6.896, 6.921] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 5, b = 10000)

# Run progress: 54.42% complete, ETA 00:50:09
# Fork: 1 of 2
# Warmup Iteration   1: 6.982 ns/op
# Warmup Iteration   2: 6.958 ns/op
# Warmup Iteration   3: 6.901 ns/op
# Warmup Iteration   4: 6.924 ns/op
# Warmup Iteration   5: 6.908 ns/op
Iteration   1: 6.906 ns/op
Iteration   2: 6.891 ns/op
Iteration   3: 6.918 ns/op
Iteration   4: 6.912 ns/op
Iteration   5: 6.901 ns/op

# Run progress: 54.59% complete, ETA 00:49:57
# Fork: 2 of 2
# Warmup Iteration   1: 7.007 ns/op
# Warmup Iteration   2: 6.978 ns/op
# Warmup Iteration   3: 6.906 ns/op
# Warmup Iteration   4: 6.914 ns/op
# Warmup Iteration   5: 6.915 ns/op
Iteration   1: 6.907 ns/op
Iteration   2: 6.908 ns/op
Iteration   3: 6.917 ns/op
Iteration   4: 6.911 ns/op
Iteration   5: 6.915 ns/op


Result "fastMathAtan":
  6.909 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (6.891, 6.909, 6.918), stdev = 0.008
  CI (99.9%): [6.896, 6.921] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 30, b = 0.5)

# Run progress: 54.76% complete, ETA 00:49:46
# Fork: 1 of 2
# Warmup Iteration   1: 6.977 ns/op
# Warmup Iteration   2: 6.970 ns/op
# Warmup Iteration   3: 6.922 ns/op
# Warmup Iteration   4: 6.916 ns/op
# Warmup Iteration   5: 6.915 ns/op
Iteration   1: 6.930 ns/op
Iteration   2: 6.918 ns/op
Iteration   3: 6.927 ns/op
Iteration   4: 6.921 ns/op
Iteration   5: 6.919 ns/op

# Run progress: 54.93% complete, ETA 00:49:35
# Fork: 2 of 2
# Warmup Iteration   1: 6.970 ns/op
# Warmup Iteration   2: 6.946 ns/op
# Warmup Iteration   3: 6.908 ns/op
# Warmup Iteration   4: 6.901 ns/op
# Warmup Iteration   5: 6.903 ns/op
Iteration   1: 6.912 ns/op
Iteration   2: 6.910 ns/op
Iteration   3: 6.917 ns/op
Iteration   4: 6.905 ns/op
Iteration   5: 6.906 ns/op


Result "fastMathAtan":
  6.916 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (6.905, 6.916, 6.930), stdev = 0.008
  CI (99.9%): [6.904, 6.929] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 30, b = 1)

# Run progress: 55.10% complete, ETA 00:49:24
# Fork: 1 of 2
# Warmup Iteration   1: 6.978 ns/op
# Warmup Iteration   2: 6.951 ns/op
# Warmup Iteration   3: 6.920 ns/op
# Warmup Iteration   4: 6.923 ns/op
# Warmup Iteration   5: 6.922 ns/op
Iteration   1: 6.925 ns/op
Iteration   2: 6.919 ns/op
Iteration   3: 6.915 ns/op
Iteration   4: 6.916 ns/op
Iteration   5: 6.920 ns/op

# Run progress: 55.27% complete, ETA 00:49:13
# Fork: 2 of 2
# Warmup Iteration   1: 6.977 ns/op
# Warmup Iteration   2: 6.947 ns/op
# Warmup Iteration   3: 6.901 ns/op
# Warmup Iteration   4: 6.911 ns/op
# Warmup Iteration   5: 6.916 ns/op
Iteration   1: 6.907 ns/op
Iteration   2: 6.909 ns/op
Iteration   3: 6.906 ns/op
Iteration   4: 6.915 ns/op
Iteration   5: 6.906 ns/op


Result "fastMathAtan":
  6.914 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (6.906, 6.914, 6.925), stdev = 0.007
  CI (99.9%): [6.904, 6.924] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 30, b = 5)

# Run progress: 55.44% complete, ETA 00:49:01
# Fork: 1 of 2
# Warmup Iteration   1: 6.982 ns/op
# Warmup Iteration   2: 6.972 ns/op
# Warmup Iteration   3: 6.908 ns/op
# Warmup Iteration   4: 6.928 ns/op
# Warmup Iteration   5: 6.911 ns/op
Iteration   1: 6.917 ns/op
Iteration   2: 6.938 ns/op
Iteration   3: 6.919 ns/op
Iteration   4: 6.931 ns/op
Iteration   5: 6.909 ns/op

# Run progress: 55.61% complete, ETA 00:48:50
# Fork: 2 of 2
# Warmup Iteration   1: 6.998 ns/op
# Warmup Iteration   2: 6.980 ns/op
# Warmup Iteration   3: 6.902 ns/op
# Warmup Iteration   4: 6.898 ns/op
# Warmup Iteration   5: 6.908 ns/op
Iteration   1: 6.904 ns/op
Iteration   2: 6.901 ns/op
Iteration   3: 6.946 ns/op
Iteration   4: 6.909 ns/op
Iteration   5: 6.903 ns/op


Result "fastMathAtan":
  6.918 ±(99.9%) 0.024 ns/op [Average]
  (min, avg, max) = (6.901, 6.918, 6.946), stdev = 0.016
  CI (99.9%): [6.894, 6.942] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 30, b = 10)

# Run progress: 55.78% complete, ETA 00:48:39
# Fork: 1 of 2
# Warmup Iteration   1: 6.977 ns/op
# Warmup Iteration   2: 6.952 ns/op
# Warmup Iteration   3: 6.920 ns/op
# Warmup Iteration   4: 6.928 ns/op
# Warmup Iteration   5: 6.920 ns/op
Iteration   1: 6.910 ns/op
Iteration   2: 6.919 ns/op
Iteration   3: 6.924 ns/op
Iteration   4: 7.044 ns/op
Iteration   5: 7.053 ns/op

# Run progress: 55.95% complete, ETA 00:48:28
# Fork: 2 of 2
# Warmup Iteration   1: 6.980 ns/op
# Warmup Iteration   2: 6.954 ns/op
# Warmup Iteration   3: 6.911 ns/op
# Warmup Iteration   4: 6.929 ns/op
# Warmup Iteration   5: 6.901 ns/op
Iteration   1: 6.902 ns/op
Iteration   2: 6.906 ns/op
Iteration   3: 6.909 ns/op
Iteration   4: 6.902 ns/op
Iteration   5: 6.891 ns/op


Result "fastMathAtan":
  6.936 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (6.891, 6.936, 7.053), stdev = 0.060
  CI (99.9%): [6.845, 7.027] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 30, b = 100)

# Run progress: 56.12% complete, ETA 00:48:16
# Fork: 1 of 2
# Warmup Iteration   1: 6.970 ns/op
# Warmup Iteration   2: 6.970 ns/op
# Warmup Iteration   3: 6.918 ns/op
# Warmup Iteration   4: 6.925 ns/op
# Warmup Iteration   5: 6.916 ns/op
Iteration   1: 6.907 ns/op
Iteration   2: 6.916 ns/op
Iteration   3: 6.913 ns/op
Iteration   4: 6.920 ns/op
Iteration   5: 6.924 ns/op

# Run progress: 56.29% complete, ETA 00:48:05
# Fork: 2 of 2
# Warmup Iteration   1: 6.995 ns/op
# Warmup Iteration   2: 6.970 ns/op
# Warmup Iteration   3: 6.930 ns/op
# Warmup Iteration   4: 6.906 ns/op
# Warmup Iteration   5: 6.907 ns/op
Iteration   1: 6.924 ns/op
Iteration   2: 6.922 ns/op
Iteration   3: 6.921 ns/op
Iteration   4: 6.920 ns/op
Iteration   5: 6.929 ns/op


Result "fastMathAtan":
  6.920 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (6.907, 6.920, 6.929), stdev = 0.006
  CI (99.9%): [6.910, 6.929] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 30, b = 1000)

# Run progress: 56.46% complete, ETA 00:47:54
# Fork: 1 of 2
# Warmup Iteration   1: 6.974 ns/op
# Warmup Iteration   2: 6.972 ns/op
# Warmup Iteration   3: 6.913 ns/op
# Warmup Iteration   4: 6.915 ns/op
# Warmup Iteration   5: 6.908 ns/op
Iteration   1: 6.911 ns/op
Iteration   2: 6.911 ns/op
Iteration   3: 6.912 ns/op
Iteration   4: 6.919 ns/op
Iteration   5: 7.199 ns/op

# Run progress: 56.63% complete, ETA 00:47:43
# Fork: 2 of 2
# Warmup Iteration   1: 6.977 ns/op
# Warmup Iteration   2: 6.977 ns/op
# Warmup Iteration   3: 6.914 ns/op
# Warmup Iteration   4: 6.915 ns/op
# Warmup Iteration   5: 6.927 ns/op
Iteration   1: 6.922 ns/op
Iteration   2: 6.921 ns/op
Iteration   3: 6.916 ns/op
Iteration   4: 6.910 ns/op
Iteration   5: 6.923 ns/op


Result "fastMathAtan":
  6.944 ±(99.9%) 0.135 ns/op [Average]
  (min, avg, max) = (6.910, 6.944, 7.199), stdev = 0.089
  CI (99.9%): [6.809, 7.080] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 30, b = 10000)

# Run progress: 56.80% complete, ETA 00:47:31
# Fork: 1 of 2
# Warmup Iteration   1: 7.226 ns/op
# Warmup Iteration   2: 7.191 ns/op
# Warmup Iteration   3: 6.984 ns/op
# Warmup Iteration   4: 6.987 ns/op
# Warmup Iteration   5: 6.986 ns/op
Iteration   1: 6.986 ns/op
Iteration   2: 6.982 ns/op
Iteration   3: 6.985 ns/op
Iteration   4: 6.989 ns/op
Iteration   5: 6.904 ns/op

# Run progress: 56.97% complete, ETA 00:47:20
# Fork: 2 of 2
# Warmup Iteration   1: 7.027 ns/op
# Warmup Iteration   2: 6.985 ns/op
# Warmup Iteration   3: 6.921 ns/op
# Warmup Iteration   4: 6.925 ns/op
# Warmup Iteration   5: 6.911 ns/op
Iteration   1: 6.924 ns/op
Iteration   2: 6.930 ns/op
Iteration   3: 6.914 ns/op
Iteration   4: 6.923 ns/op
Iteration   5: 6.922 ns/op


Result "fastMathAtan":
  6.946 ±(99.9%) 0.053 ns/op [Average]
  (min, avg, max) = (6.904, 6.946, 6.989), stdev = 0.035
  CI (99.9%): [6.893, 6.999] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 45, b = 0.5)

# Run progress: 57.14% complete, ETA 00:47:09
# Fork: 1 of 2
# Warmup Iteration   1: 6.954 ns/op
# Warmup Iteration   2: 6.968 ns/op
# Warmup Iteration   3: 7.300 ns/op
# Warmup Iteration   4: 7.260 ns/op
# Warmup Iteration   5: 7.279 ns/op
Iteration   1: 7.264 ns/op
Iteration   2: 7.265 ns/op
Iteration   3: 7.264 ns/op
Iteration   4: 6.916 ns/op
Iteration   5: 6.895 ns/op

# Run progress: 57.31% complete, ETA 00:46:58
# Fork: 2 of 2
# Warmup Iteration   1: 6.981 ns/op
# Warmup Iteration   2: 6.965 ns/op
# Warmup Iteration   3: 6.926 ns/op
# Warmup Iteration   4: 6.918 ns/op
# Warmup Iteration   5: 6.911 ns/op
Iteration   1: 6.917 ns/op
Iteration   2: 6.935 ns/op
Iteration   3: 6.930 ns/op
Iteration   4: 6.909 ns/op
Iteration   5: 6.922 ns/op


Result "fastMathAtan":
  7.022 ±(99.9%) 0.254 ns/op [Average]
  (min, avg, max) = (6.895, 7.022, 7.265), stdev = 0.168
  CI (99.9%): [6.768, 7.275] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 45, b = 1)

# Run progress: 57.48% complete, ETA 00:46:47
# Fork: 1 of 2
# Warmup Iteration   1: 6.981 ns/op
# Warmup Iteration   2: 6.962 ns/op
# Warmup Iteration   3: 6.899 ns/op
# Warmup Iteration   4: 6.904 ns/op
# Warmup Iteration   5: 6.924 ns/op
Iteration   1: 6.916 ns/op
Iteration   2: 6.902 ns/op
Iteration   3: 6.895 ns/op
Iteration   4: 6.901 ns/op
Iteration   5: 6.900 ns/op

# Run progress: 57.65% complete, ETA 00:46:35
# Fork: 2 of 2
# Warmup Iteration   1: 6.980 ns/op
# Warmup Iteration   2: 6.964 ns/op
# Warmup Iteration   3: 6.917 ns/op
# Warmup Iteration   4: 6.915 ns/op
# Warmup Iteration   5: 6.918 ns/op
Iteration   1: 6.924 ns/op
Iteration   2: 6.911 ns/op
Iteration   3: 6.929 ns/op
Iteration   4: 6.920 ns/op
Iteration   5: 6.916 ns/op


Result "fastMathAtan":
  6.911 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (6.895, 6.911, 6.929), stdev = 0.011
  CI (99.9%): [6.894, 6.929] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 45, b = 5)

# Run progress: 57.82% complete, ETA 00:46:24
# Fork: 1 of 2
# Warmup Iteration   1: 6.968 ns/op
# Warmup Iteration   2: 6.937 ns/op
# Warmup Iteration   3: 6.904 ns/op
# Warmup Iteration   4: 6.912 ns/op
# Warmup Iteration   5: 6.919 ns/op
Iteration   1: 6.911 ns/op
Iteration   2: 6.938 ns/op
Iteration   3: 6.916 ns/op
Iteration   4: 6.897 ns/op
Iteration   5: 6.901 ns/op

# Run progress: 57.99% complete, ETA 00:46:13
# Fork: 2 of 2
# Warmup Iteration   1: 6.977 ns/op
# Warmup Iteration   2: 6.982 ns/op
# Warmup Iteration   3: 6.916 ns/op
# Warmup Iteration   4: 6.912 ns/op
# Warmup Iteration   5: 6.913 ns/op
Iteration   1: 6.909 ns/op
Iteration   2: 6.917 ns/op
Iteration   3: 6.912 ns/op
Iteration   4: 6.908 ns/op
Iteration   5: 6.918 ns/op


Result "fastMathAtan":
  6.913 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (6.897, 6.913, 6.938), stdev = 0.011
  CI (99.9%): [6.896, 6.930] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 45, b = 10)

# Run progress: 58.16% complete, ETA 00:46:02
# Fork: 1 of 2
# Warmup Iteration   1: 7.005 ns/op
# Warmup Iteration   2: 6.979 ns/op
# Warmup Iteration   3: 6.913 ns/op
# Warmup Iteration   4: 6.904 ns/op
# Warmup Iteration   5: 6.898 ns/op
Iteration   1: 6.915 ns/op
Iteration   2: 6.910 ns/op
Iteration   3: 6.904 ns/op
Iteration   4: 6.911 ns/op
Iteration   5: 6.905 ns/op

# Run progress: 58.33% complete, ETA 00:45:50
# Fork: 2 of 2
# Warmup Iteration   1: 6.978 ns/op
# Warmup Iteration   2: 6.955 ns/op
# Warmup Iteration   3: 6.907 ns/op
# Warmup Iteration   4: 6.911 ns/op
# Warmup Iteration   5: 6.911 ns/op
Iteration   1: 6.900 ns/op
Iteration   2: 6.917 ns/op
Iteration   3: 6.914 ns/op
Iteration   4: 6.911 ns/op
Iteration   5: 6.918 ns/op


Result "fastMathAtan":
  6.910 ±(99.9%) 0.009 ns/op [Average]
  (min, avg, max) = (6.900, 6.910, 6.918), stdev = 0.006
  CI (99.9%): [6.901, 6.919] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 45, b = 100)

# Run progress: 58.50% complete, ETA 00:45:39
# Fork: 1 of 2
# Warmup Iteration   1: 6.991 ns/op
# Warmup Iteration   2: 6.969 ns/op
# Warmup Iteration   3: 6.917 ns/op
# Warmup Iteration   4: 6.912 ns/op
# Warmup Iteration   5: 6.928 ns/op
Iteration   1: 6.913 ns/op
Iteration   2: 6.920 ns/op
Iteration   3: 6.916 ns/op
Iteration   4: 6.922 ns/op
Iteration   5: 6.923 ns/op

# Run progress: 58.67% complete, ETA 00:45:28
# Fork: 2 of 2
# Warmup Iteration   1: 6.986 ns/op
# Warmup Iteration   2: 6.961 ns/op
# Warmup Iteration   3: 6.912 ns/op
# Warmup Iteration   4: 6.910 ns/op
# Warmup Iteration   5: 6.904 ns/op
Iteration   1: 6.925 ns/op
Iteration   2: 6.903 ns/op
Iteration   3: 6.908 ns/op
Iteration   4: 6.910 ns/op
Iteration   5: 6.908 ns/op


Result "fastMathAtan":
  6.915 ±(99.9%) 0.011 ns/op [Average]
  (min, avg, max) = (6.903, 6.915, 6.925), stdev = 0.008
  CI (99.9%): [6.903, 6.926] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 45, b = 1000)

# Run progress: 58.84% complete, ETA 00:45:17
# Fork: 1 of 2
# Warmup Iteration   1: 6.984 ns/op
# Warmup Iteration   2: 6.958 ns/op
# Warmup Iteration   3: 6.918 ns/op
# Warmup Iteration   4: 6.916 ns/op
# Warmup Iteration   5: 6.921 ns/op
Iteration   1: 6.921 ns/op
Iteration   2: 6.911 ns/op
Iteration   3: 6.916 ns/op
Iteration   4: 6.919 ns/op
Iteration   5: 6.922 ns/op

# Run progress: 59.01% complete, ETA 00:45:06
# Fork: 2 of 2
# Warmup Iteration   1: 7.359 ns/op
# Warmup Iteration   2: 6.988 ns/op
# Warmup Iteration   3: 6.916 ns/op
# Warmup Iteration   4: 6.904 ns/op
# Warmup Iteration   5: 6.903 ns/op
Iteration   1: 6.906 ns/op
Iteration   2: 6.908 ns/op
Iteration   3: 6.916 ns/op
Iteration   4: 6.916 ns/op
Iteration   5: 6.914 ns/op


Result "fastMathAtan":
  6.915 ±(99.9%) 0.008 ns/op [Average]
  (min, avg, max) = (6.906, 6.915, 6.922), stdev = 0.005
  CI (99.9%): [6.907, 6.923] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 45, b = 10000)

# Run progress: 59.18% complete, ETA 00:44:54
# Fork: 1 of 2
# Warmup Iteration   1: 6.966 ns/op
# Warmup Iteration   2: 6.960 ns/op
# Warmup Iteration   3: 6.920 ns/op
# Warmup Iteration   4: 6.911 ns/op
# Warmup Iteration   5: 6.919 ns/op
Iteration   1: 6.935 ns/op
Iteration   2: 6.913 ns/op
Iteration   3: 6.913 ns/op
Iteration   4: 6.916 ns/op
Iteration   5: 6.917 ns/op

# Run progress: 59.35% complete, ETA 00:44:43
# Fork: 2 of 2
# Warmup Iteration   1: 6.989 ns/op
# Warmup Iteration   2: 7.019 ns/op
# Warmup Iteration   3: 6.897 ns/op
# Warmup Iteration   4: 6.910 ns/op
# Warmup Iteration   5: 6.904 ns/op
Iteration   1: 6.899 ns/op
Iteration   2: 6.905 ns/op
Iteration   3: 6.898 ns/op
Iteration   4: 6.907 ns/op
Iteration   5: 6.908 ns/op


Result "fastMathAtan":
  6.911 ±(99.9%) 0.016 ns/op [Average]
  (min, avg, max) = (6.898, 6.911, 6.935), stdev = 0.011
  CI (99.9%): [6.895, 6.927] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 60, b = 0.5)

# Run progress: 59.52% complete, ETA 00:44:32
# Fork: 1 of 2
# Warmup Iteration   1: 6.979 ns/op
# Warmup Iteration   2: 6.958 ns/op
# Warmup Iteration   3: 6.918 ns/op
# Warmup Iteration   4: 6.921 ns/op
# Warmup Iteration   5: 6.919 ns/op
Iteration   1: 6.919 ns/op
Iteration   2: 6.913 ns/op
Iteration   3: 6.927 ns/op
Iteration   4: 6.913 ns/op
Iteration   5: 6.895 ns/op

# Run progress: 59.69% complete, ETA 00:44:21
# Fork: 2 of 2
# Warmup Iteration   1: 6.955 ns/op
# Warmup Iteration   2: 6.955 ns/op
# Warmup Iteration   3: 6.905 ns/op
# Warmup Iteration   4: 6.898 ns/op
# Warmup Iteration   5: 6.922 ns/op
Iteration   1: 6.891 ns/op
Iteration   2: 6.900 ns/op
Iteration   3: 6.906 ns/op
Iteration   4: 6.900 ns/op
Iteration   5: 6.901 ns/op


Result "fastMathAtan":
  6.906 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (6.891, 6.906, 6.927), stdev = 0.011
  CI (99.9%): [6.890, 6.923] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 60, b = 1)

# Run progress: 59.86% complete, ETA 00:44:09
# Fork: 1 of 2
# Warmup Iteration   1: 6.970 ns/op
# Warmup Iteration   2: 6.957 ns/op
# Warmup Iteration   3: 6.913 ns/op
# Warmup Iteration   4: 6.904 ns/op
# Warmup Iteration   5: 6.905 ns/op
Iteration   1: 6.913 ns/op
Iteration   2: 6.940 ns/op
Iteration   3: 6.915 ns/op
Iteration   4: 6.917 ns/op
Iteration   5: 6.917 ns/op

# Run progress: 60.03% complete, ETA 00:43:58
# Fork: 2 of 2
# Warmup Iteration   1: 6.998 ns/op
# Warmup Iteration   2: 7.001 ns/op
# Warmup Iteration   3: 6.933 ns/op
# Warmup Iteration   4: 6.923 ns/op
# Warmup Iteration   5: 6.918 ns/op
Iteration   1: 6.932 ns/op
Iteration   2: 6.922 ns/op
Iteration   3: 6.933 ns/op
Iteration   4: 6.914 ns/op
Iteration   5: 6.918 ns/op


Result "fastMathAtan":
  6.922 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (6.913, 6.922, 6.940), stdev = 0.009
  CI (99.9%): [6.908, 6.936] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 60, b = 5)

# Run progress: 60.20% complete, ETA 00:43:47
# Fork: 1 of 2
# Warmup Iteration   1: 7.000 ns/op
# Warmup Iteration   2: 7.003 ns/op
# Warmup Iteration   3: 6.907 ns/op
# Warmup Iteration   4: 6.922 ns/op
# Warmup Iteration   5: 6.899 ns/op
Iteration   1: 6.912 ns/op
Iteration   2: 6.907 ns/op
Iteration   3: 6.898 ns/op
Iteration   4: 6.914 ns/op
Iteration   5: 6.915 ns/op

# Run progress: 60.37% complete, ETA 00:43:36
# Fork: 2 of 2
# Warmup Iteration   1: 6.996 ns/op
# Warmup Iteration   2: 6.976 ns/op
# Warmup Iteration   3: 6.916 ns/op
# Warmup Iteration   4: 6.920 ns/op
# Warmup Iteration   5: 6.918 ns/op
Iteration   1: 6.924 ns/op
Iteration   2: 6.930 ns/op
Iteration   3: 6.921 ns/op
Iteration   4: 6.925 ns/op
Iteration   5: 6.919 ns/op


Result "fastMathAtan":
  6.917 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (6.898, 6.917, 6.930), stdev = 0.009
  CI (99.9%): [6.902, 6.931] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 60, b = 10)

# Run progress: 60.54% complete, ETA 00:43:24
# Fork: 1 of 2
# Warmup Iteration   1: 6.990 ns/op
# Warmup Iteration   2: 6.951 ns/op
# Warmup Iteration   3: 6.916 ns/op
# Warmup Iteration   4: 6.905 ns/op
# Warmup Iteration   5: 6.942 ns/op
Iteration   1: 6.911 ns/op
Iteration   2: 6.898 ns/op
Iteration   3: 6.914 ns/op
Iteration   4: 6.910 ns/op
Iteration   5: 6.898 ns/op

# Run progress: 60.71% complete, ETA 00:43:13
# Fork: 2 of 2
# Warmup Iteration   1: 7.000 ns/op
# Warmup Iteration   2: 6.981 ns/op
# Warmup Iteration   3: 6.920 ns/op
# Warmup Iteration   4: 6.919 ns/op
# Warmup Iteration   5: 6.918 ns/op
Iteration   1: 6.923 ns/op
Iteration   2: 6.918 ns/op
Iteration   3: 6.918 ns/op
Iteration   4: 6.916 ns/op
Iteration   5: 6.917 ns/op


Result "fastMathAtan":
  6.912 ±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (6.898, 6.912, 6.923), stdev = 0.008
  CI (99.9%): [6.900, 6.925] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 60, b = 100)

# Run progress: 60.88% complete, ETA 00:43:02
# Fork: 1 of 2
# Warmup Iteration   1: 6.984 ns/op
# Warmup Iteration   2: 7.310 ns/op
# Warmup Iteration   3: 6.893 ns/op
# Warmup Iteration   4: 6.919 ns/op
# Warmup Iteration   5: 6.913 ns/op
Iteration   1: 6.902 ns/op
Iteration   2: 6.894 ns/op
Iteration   3: 6.913 ns/op
Iteration   4: 6.903 ns/op
Iteration   5: 6.906 ns/op

# Run progress: 61.05% complete, ETA 00:42:51
# Fork: 2 of 2
# Warmup Iteration   1: 6.984 ns/op
# Warmup Iteration   2: 6.959 ns/op
# Warmup Iteration   3: 6.907 ns/op
# Warmup Iteration   4: 6.914 ns/op
# Warmup Iteration   5: 6.924 ns/op
Iteration   1: 6.914 ns/op
Iteration   2: 6.915 ns/op
Iteration   3: 6.922 ns/op
Iteration   4: 6.936 ns/op
Iteration   5: 6.915 ns/op


Result "fastMathAtan":
  6.912 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (6.894, 6.912, 6.936), stdev = 0.012
  CI (99.9%): [6.894, 6.930] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 60, b = 1000)

# Run progress: 61.22% complete, ETA 00:42:40
# Fork: 1 of 2
# Warmup Iteration   1: 6.966 ns/op
# Warmup Iteration   2: 6.942 ns/op
# Warmup Iteration   3: 6.902 ns/op
# Warmup Iteration   4: 6.897 ns/op
# Warmup Iteration   5: 6.906 ns/op
Iteration   1: 6.927 ns/op
Iteration   2: 6.900 ns/op
Iteration   3: 6.890 ns/op
Iteration   4: 6.909 ns/op
Iteration   5: 6.909 ns/op

# Run progress: 61.39% complete, ETA 00:42:28
# Fork: 2 of 2
# Warmup Iteration   1: 7.003 ns/op
# Warmup Iteration   2: 6.969 ns/op
# Warmup Iteration   3: 6.912 ns/op
# Warmup Iteration   4: 6.925 ns/op
# Warmup Iteration   5: 6.905 ns/op
Iteration   1: 6.925 ns/op
Iteration   2: 6.924 ns/op
Iteration   3: 6.920 ns/op
Iteration   4: 6.900 ns/op
Iteration   5: 6.913 ns/op


Result "fastMathAtan":
  6.912 ±(99.9%) 0.019 ns/op [Average]
  (min, avg, max) = (6.890, 6.912, 6.927), stdev = 0.012
  CI (99.9%): [6.893, 6.930] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 60, b = 10000)

# Run progress: 61.56% complete, ETA 00:42:17
# Fork: 1 of 2
# Warmup Iteration   1: 6.979 ns/op
# Warmup Iteration   2: 6.975 ns/op
# Warmup Iteration   3: 6.911 ns/op
# Warmup Iteration   4: 6.912 ns/op
# Warmup Iteration   5: 6.913 ns/op
Iteration   1: 6.895 ns/op
Iteration   2: 6.895 ns/op
Iteration   3: 6.903 ns/op
Iteration   4: 6.901 ns/op
Iteration   5: 6.904 ns/op

# Run progress: 61.73% complete, ETA 00:42:06
# Fork: 2 of 2
# Warmup Iteration   1: 6.974 ns/op
# Warmup Iteration   2: 6.960 ns/op
# Warmup Iteration   3: 6.911 ns/op
# Warmup Iteration   4: 6.902 ns/op
# Warmup Iteration   5: 6.923 ns/op
Iteration   1: 6.905 ns/op
Iteration   2: 6.919 ns/op
Iteration   3: 6.932 ns/op
Iteration   4: 6.905 ns/op
Iteration   5: 6.912 ns/op


Result "fastMathAtan":
  6.907 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (6.895, 6.907, 6.932), stdev = 0.011
  CI (99.9%): [6.890, 6.924] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 85, b = 0.5)

# Run progress: 61.90% complete, ETA 00:41:55
# Fork: 1 of 2
# Warmup Iteration   1: 6.986 ns/op
# Warmup Iteration   2: 6.987 ns/op
# Warmup Iteration   3: 6.931 ns/op
# Warmup Iteration   4: 6.922 ns/op
# Warmup Iteration   5: 6.914 ns/op
Iteration   1: 6.920 ns/op
Iteration   2: 6.914 ns/op
Iteration   3: 6.908 ns/op
Iteration   4: 6.925 ns/op
Iteration   5: 6.916 ns/op

# Run progress: 62.07% complete, ETA 00:41:43
# Fork: 2 of 2
# Warmup Iteration   1: 6.998 ns/op
# Warmup Iteration   2: 6.969 ns/op
# Warmup Iteration   3: 6.900 ns/op
# Warmup Iteration   4: 6.918 ns/op
# Warmup Iteration   5: 6.913 ns/op
Iteration   1: 6.905 ns/op
Iteration   2: 6.903 ns/op
Iteration   3: 6.902 ns/op
Iteration   4: 6.907 ns/op
Iteration   5: 6.910 ns/op


Result "fastMathAtan":
  6.911 ±(99.9%) 0.011 ns/op [Average]
  (min, avg, max) = (6.902, 6.911, 6.925), stdev = 0.008
  CI (99.9%): [6.899, 6.922] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 85, b = 1)

# Run progress: 62.24% complete, ETA 00:41:32
# Fork: 1 of 2
# Warmup Iteration   1: 6.976 ns/op
# Warmup Iteration   2: 6.976 ns/op
# Warmup Iteration   3: 6.914 ns/op
# Warmup Iteration   4: 6.919 ns/op
# Warmup Iteration   5: 6.923 ns/op
Iteration   1: 6.919 ns/op
Iteration   2: 6.914 ns/op
Iteration   3: 6.911 ns/op
Iteration   4: 6.912 ns/op
Iteration   5: 6.911 ns/op

# Run progress: 62.41% complete, ETA 00:41:21
# Fork: 2 of 2
# Warmup Iteration   1: 6.975 ns/op
# Warmup Iteration   2: 6.949 ns/op
# Warmup Iteration   3: 6.907 ns/op
# Warmup Iteration   4: 6.902 ns/op
# Warmup Iteration   5: 6.897 ns/op
Iteration   1: 6.909 ns/op
Iteration   2: 6.902 ns/op
Iteration   3: 6.904 ns/op
Iteration   4: 6.930 ns/op
Iteration   5: 6.942 ns/op


Result "fastMathAtan":
  6.916 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (6.902, 6.916, 6.942), stdev = 0.012
  CI (99.9%): [6.897, 6.934] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 85, b = 5)

# Run progress: 62.59% complete, ETA 00:41:10
# Fork: 1 of 2
# Warmup Iteration   1: 7.160 ns/op
# Warmup Iteration   2: 7.130 ns/op
# Warmup Iteration   3: 6.915 ns/op
# Warmup Iteration   4: 6.920 ns/op
# Warmup Iteration   5: 6.921 ns/op
Iteration   1: 6.912 ns/op
Iteration   2: 6.919 ns/op
Iteration   3: 6.918 ns/op
Iteration   4: 6.929 ns/op
Iteration   5: 6.915 ns/op

# Run progress: 62.76% complete, ETA 00:40:59
# Fork: 2 of 2
# Warmup Iteration   1: 6.974 ns/op
# Warmup Iteration   2: 6.957 ns/op
# Warmup Iteration   3: 6.907 ns/op
# Warmup Iteration   4: 6.914 ns/op
# Warmup Iteration   5: 6.912 ns/op
Iteration   1: 6.899 ns/op
Iteration   2: 6.911 ns/op
Iteration   3: 6.903 ns/op
Iteration   4: 6.906 ns/op
Iteration   5: 6.897 ns/op


Result "fastMathAtan":
  6.911 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (6.897, 6.911, 6.929), stdev = 0.010
  CI (99.9%): [6.896, 6.926] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 85, b = 10)

# Run progress: 62.93% complete, ETA 00:40:47
# Fork: 1 of 2
# Warmup Iteration   1: 7.012 ns/op
# Warmup Iteration   2: 6.990 ns/op
# Warmup Iteration   3: 6.920 ns/op
# Warmup Iteration   4: 6.916 ns/op
# Warmup Iteration   5: 6.919 ns/op
Iteration   1: 6.904 ns/op
Iteration   2: 6.915 ns/op
Iteration   3: 6.910 ns/op
Iteration   4: 6.912 ns/op
Iteration   5: 6.922 ns/op

# Run progress: 63.10% complete, ETA 00:40:36
# Fork: 2 of 2
# Warmup Iteration   1: 6.972 ns/op
# Warmup Iteration   2: 6.953 ns/op
# Warmup Iteration   3: 6.909 ns/op
# Warmup Iteration   4: 6.898 ns/op
# Warmup Iteration   5: 6.915 ns/op
Iteration   1: 6.921 ns/op
Iteration   2: 6.913 ns/op
Iteration   3: 6.907 ns/op
Iteration   4: 6.903 ns/op
Iteration   5: 6.898 ns/op


Result "fastMathAtan":
  6.911 ±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (6.898, 6.911, 6.922), stdev = 0.008
  CI (99.9%): [6.899, 6.922] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 85, b = 100)

# Run progress: 63.27% complete, ETA 00:40:25
# Fork: 1 of 2
# Warmup Iteration   1: 7.002 ns/op
# Warmup Iteration   2: 6.983 ns/op
# Warmup Iteration   3: 6.908 ns/op
# Warmup Iteration   4: 6.922 ns/op
# Warmup Iteration   5: 6.934 ns/op
Iteration   1: 6.914 ns/op
Iteration   2: 6.909 ns/op
Iteration   3: 6.914 ns/op
Iteration   4: 6.932 ns/op
Iteration   5: 6.926 ns/op

# Run progress: 63.44% complete, ETA 00:40:14
# Fork: 2 of 2
# Warmup Iteration   1: 6.995 ns/op
# Warmup Iteration   2: 6.963 ns/op
# Warmup Iteration   3: 6.919 ns/op
# Warmup Iteration   4: 6.903 ns/op
# Warmup Iteration   5: 6.907 ns/op
Iteration   1: 6.897 ns/op
Iteration   2: 6.923 ns/op
Iteration   3: 6.902 ns/op
Iteration   4: 6.905 ns/op
Iteration   5: 6.913 ns/op


Result "fastMathAtan":
  6.913 ±(99.9%) 0.017 ns/op [Average]
  (min, avg, max) = (6.897, 6.913, 6.932), stdev = 0.011
  CI (99.9%): [6.897, 6.930] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 85, b = 1000)

# Run progress: 63.61% complete, ETA 00:40:02
# Fork: 1 of 2
# Warmup Iteration   1: 7.001 ns/op
# Warmup Iteration   2: 6.963 ns/op
# Warmup Iteration   3: 6.911 ns/op
# Warmup Iteration   4: 6.914 ns/op
# Warmup Iteration   5: 6.922 ns/op
Iteration   1: 6.904 ns/op
Iteration   2: 6.911 ns/op
Iteration   3: 6.914 ns/op
Iteration   4: 6.906 ns/op
Iteration   5: 6.907 ns/op

# Run progress: 63.78% complete, ETA 00:39:51
# Fork: 2 of 2
# Warmup Iteration   1: 6.978 ns/op
# Warmup Iteration   2: 6.965 ns/op
# Warmup Iteration   3: 6.911 ns/op
# Warmup Iteration   4: 6.912 ns/op
# Warmup Iteration   5: 6.918 ns/op
Iteration   1: 6.913 ns/op
Iteration   2: 6.926 ns/op
Iteration   3: 6.917 ns/op
Iteration   4: 6.920 ns/op
Iteration   5: 6.911 ns/op


Result "fastMathAtan":
  6.913 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (6.904, 6.913, 6.926), stdev = 0.007
  CI (99.9%): [6.903, 6.923] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 85, b = 10000)

# Run progress: 63.95% complete, ETA 00:39:40
# Fork: 1 of 2
# Warmup Iteration   1: 6.969 ns/op
# Warmup Iteration   2: 6.956 ns/op
# Warmup Iteration   3: 6.913 ns/op
# Warmup Iteration   4: 6.910 ns/op
# Warmup Iteration   5: 6.909 ns/op
Iteration   1: 6.913 ns/op
Iteration   2: 6.915 ns/op
Iteration   3: 6.903 ns/op
Iteration   4: 6.897 ns/op
Iteration   5: 6.916 ns/op

# Run progress: 64.12% complete, ETA 00:39:29
# Fork: 2 of 2
# Warmup Iteration   1: 7.010 ns/op
# Warmup Iteration   2: 6.995 ns/op
# Warmup Iteration   3: 6.930 ns/op
# Warmup Iteration   4: 6.921 ns/op
# Warmup Iteration   5: 6.921 ns/op
Iteration   1: 6.916 ns/op
Iteration   2: 6.924 ns/op
Iteration   3: 6.923 ns/op
Iteration   4: 6.919 ns/op
Iteration   5: 6.918 ns/op


Result "fastMathAtan":
  6.914 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (6.897, 6.914, 6.924), stdev = 0.008
  CI (99.9%): [6.902, 6.927] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 90, b = 0.5)

# Run progress: 64.29% complete, ETA 00:39:17
# Fork: 1 of 2
# Warmup Iteration   1: 6.969 ns/op
# Warmup Iteration   2: 6.949 ns/op
# Warmup Iteration   3: 6.895 ns/op
# Warmup Iteration   4: 6.920 ns/op
# Warmup Iteration   5: 6.904 ns/op
Iteration   1: 6.904 ns/op
Iteration   2: 6.903 ns/op
Iteration   3: 6.910 ns/op
Iteration   4: 6.900 ns/op
Iteration   5: 6.894 ns/op

# Run progress: 64.46% complete, ETA 00:39:06
# Fork: 2 of 2
# Warmup Iteration   1: 7.002 ns/op
# Warmup Iteration   2: 6.980 ns/op
# Warmup Iteration   3: 6.917 ns/op
# Warmup Iteration   4: 6.911 ns/op
# Warmup Iteration   5: 6.923 ns/op
Iteration   1: 6.923 ns/op
Iteration   2: 6.912 ns/op
Iteration   3: 6.917 ns/op
Iteration   4: 6.919 ns/op
Iteration   5: 6.912 ns/op


Result "fastMathAtan":
  6.909 ±(99.9%) 0.014 ns/op [Average]
  (min, avg, max) = (6.894, 6.909, 6.923), stdev = 0.009
  CI (99.9%): [6.895, 6.923] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 90, b = 1)

# Run progress: 64.63% complete, ETA 00:38:55
# Fork: 1 of 2
# Warmup Iteration   1: 6.966 ns/op
# Warmup Iteration   2: 6.965 ns/op
# Warmup Iteration   3: 6.901 ns/op
# Warmup Iteration   4: 6.908 ns/op
# Warmup Iteration   5: 6.916 ns/op
Iteration   1: 6.911 ns/op
Iteration   2: 6.901 ns/op
Iteration   3: 6.896 ns/op
Iteration   4: 6.904 ns/op
Iteration   5: 6.903 ns/op

# Run progress: 64.80% complete, ETA 00:38:44
# Fork: 2 of 2
# Warmup Iteration   1: 6.994 ns/op
# Warmup Iteration   2: 6.967 ns/op
# Warmup Iteration   3: 6.920 ns/op
# Warmup Iteration   4: 6.919 ns/op
# Warmup Iteration   5: 6.923 ns/op
Iteration   1: 6.920 ns/op
Iteration   2: 6.905 ns/op
Iteration   3: 6.914 ns/op
Iteration   4: 6.912 ns/op
Iteration   5: 6.938 ns/op


Result "fastMathAtan":
  6.910 ±(99.9%) 0.018 ns/op [Average]
  (min, avg, max) = (6.896, 6.910, 6.938), stdev = 0.012
  CI (99.9%): [6.892, 6.929] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 90, b = 5)

# Run progress: 64.97% complete, ETA 00:38:33
# Fork: 1 of 2
# Warmup Iteration   1: 6.957 ns/op
# Warmup Iteration   2: 6.959 ns/op
# Warmup Iteration   3: 6.912 ns/op
# Warmup Iteration   4: 6.908 ns/op
# Warmup Iteration   5: 6.920 ns/op
Iteration   1: 6.902 ns/op
Iteration   2: 6.899 ns/op
Iteration   3: 6.893 ns/op
Iteration   4: 6.906 ns/op
Iteration   5: 6.917 ns/op

# Run progress: 65.14% complete, ETA 00:38:21
# Fork: 2 of 2
# Warmup Iteration   1: 7.009 ns/op
# Warmup Iteration   2: 6.986 ns/op
# Warmup Iteration   3: 6.912 ns/op
# Warmup Iteration   4: 6.917 ns/op
# Warmup Iteration   5: 6.931 ns/op
Iteration   1: 6.905 ns/op
Iteration   2: 6.905 ns/op
Iteration   3: 6.907 ns/op
Iteration   4: 6.915 ns/op
Iteration   5: 6.906 ns/op


Result "fastMathAtan":
  6.906 ±(99.9%) 0.011 ns/op [Average]
  (min, avg, max) = (6.893, 6.906, 6.917), stdev = 0.007
  CI (99.9%): [6.895, 6.916] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 90, b = 10)

# Run progress: 65.31% complete, ETA 00:38:10
# Fork: 1 of 2
# Warmup Iteration   1: 6.965 ns/op
# Warmup Iteration   2: 6.983 ns/op
# Warmup Iteration   3: 6.911 ns/op
# Warmup Iteration   4: 6.906 ns/op
# Warmup Iteration   5: 6.908 ns/op
Iteration   1: 6.905 ns/op
Iteration   2: 6.913 ns/op
Iteration   3: 6.901 ns/op
Iteration   4: 6.903 ns/op
Iteration   5: 6.918 ns/op

# Run progress: 65.48% complete, ETA 00:37:59
# Fork: 2 of 2
# Warmup Iteration   1: 6.987 ns/op
# Warmup Iteration   2: 6.963 ns/op
# Warmup Iteration   3: 6.898 ns/op
# Warmup Iteration   4: 6.910 ns/op
# Warmup Iteration   5: 6.914 ns/op
Iteration   1: 6.908 ns/op
Iteration   2: 6.906 ns/op
Iteration   3: 6.918 ns/op
Iteration   4: 6.913 ns/op
Iteration   5: 6.910 ns/op


Result "fastMathAtan":
  6.910 ±(99.9%) 0.009 ns/op [Average]
  (min, avg, max) = (6.901, 6.910, 6.918), stdev = 0.006
  CI (99.9%): [6.900, 6.919] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 90, b = 100)

# Run progress: 65.65% complete, ETA 00:37:48
# Fork: 1 of 2
# Warmup Iteration   1: 6.971 ns/op
# Warmup Iteration   2: 6.970 ns/op
# Warmup Iteration   3: 6.911 ns/op
# Warmup Iteration   4: 6.923 ns/op
# Warmup Iteration   5: 6.913 ns/op
Iteration   1: 6.914 ns/op
Iteration   2: 6.918 ns/op
Iteration   3: 6.920 ns/op
Iteration   4: 6.916 ns/op
Iteration   5: 6.922 ns/op

# Run progress: 65.82% complete, ETA 00:37:36
# Fork: 2 of 2
# Warmup Iteration   1: 6.974 ns/op
# Warmup Iteration   2: 6.957 ns/op
# Warmup Iteration   3: 6.917 ns/op
# Warmup Iteration   4: 6.900 ns/op
# Warmup Iteration   5: 6.922 ns/op
Iteration   1: 6.900 ns/op
Iteration   2: 6.910 ns/op
Iteration   3: 6.902 ns/op
Iteration   4: 7.038 ns/op
Iteration   5: 6.983 ns/op


Result "fastMathAtan":
  6.932 ±(99.9%) 0.066 ns/op [Average]
  (min, avg, max) = (6.900, 6.932, 7.038), stdev = 0.044
  CI (99.9%): [6.866, 6.999] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 90, b = 1000)

# Run progress: 65.99% complete, ETA 00:37:25
# Fork: 1 of 2
# Warmup Iteration   1: 6.981 ns/op
# Warmup Iteration   2: 6.968 ns/op
# Warmup Iteration   3: 6.928 ns/op
# Warmup Iteration   4: 6.918 ns/op
# Warmup Iteration   5: 6.925 ns/op
Iteration   1: 6.923 ns/op
Iteration   2: 6.922 ns/op
Iteration   3: 6.914 ns/op
Iteration   4: 6.914 ns/op
Iteration   5: 6.917 ns/op

# Run progress: 66.16% complete, ETA 00:37:14
# Fork: 2 of 2
# Warmup Iteration   1: 6.997 ns/op
# Warmup Iteration   2: 6.966 ns/op
# Warmup Iteration   3: 6.909 ns/op
# Warmup Iteration   4: 6.895 ns/op
# Warmup Iteration   5: 6.910 ns/op
Iteration   1: 6.905 ns/op
Iteration   2: 6.903 ns/op
Iteration   3: 6.909 ns/op
Iteration   4: 6.900 ns/op
Iteration   5: 6.905 ns/op


Result "fastMathAtan":
  6.911 ±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (6.900, 6.911, 6.923), stdev = 0.008
  CI (99.9%): [6.899, 6.924] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathAtan
# Parameters: (a = 90, b = 10000)

# Run progress: 66.33% complete, ETA 00:37:03
# Fork: 1 of 2
# Warmup Iteration   1: 6.982 ns/op
# Warmup Iteration   2: 6.967 ns/op
# Warmup Iteration   3: 6.940 ns/op
# Warmup Iteration   4: 6.910 ns/op
# Warmup Iteration   5: 6.912 ns/op
Iteration   1: 6.922 ns/op
Iteration   2: 6.931 ns/op
Iteration   3: 6.916 ns/op
Iteration   4: 6.908 ns/op
Iteration   5: 6.920 ns/op

# Run progress: 66.50% complete, ETA 00:36:51
# Fork: 2 of 2
# Warmup Iteration   1: 6.975 ns/op
# Warmup Iteration   2: 6.968 ns/op
# Warmup Iteration   3: 6.910 ns/op
# Warmup Iteration   4: 6.904 ns/op
# Warmup Iteration   5: 6.898 ns/op
Iteration   1: 6.911 ns/op
Iteration   2: 6.915 ns/op
Iteration   3: 6.910 ns/op
Iteration   4: 6.912 ns/op
Iteration   5: 6.899 ns/op


Result "fastMathAtan":
  6.914 ±(99.9%) 0.013 ns/op [Average]
  (min, avg, max) = (6.899, 6.914, 6.931), stdev = 0.009
  CI (99.9%): [6.901, 6.928] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 0, b = 0.5)

# Run progress: 66.67% complete, ETA 00:36:40
# Fork: 1 of 2
# Warmup Iteration   1: 47.426 ns/op
# Warmup Iteration   2: 47.460 ns/op
# Warmup Iteration   3: 47.043 ns/op
# Warmup Iteration   4: 47.109 ns/op
# Warmup Iteration   5: 47.023 ns/op
Iteration   1: 46.991 ns/op
Iteration   2: 46.974 ns/op
Iteration   3: 47.005 ns/op
Iteration   4: 46.581 ns/op
Iteration   5: 46.510 ns/op

# Run progress: 66.84% complete, ETA 00:36:29
# Fork: 2 of 2
# Warmup Iteration   1: 47.530 ns/op
# Warmup Iteration   2: 48.179 ns/op
# Warmup Iteration   3: 46.407 ns/op
# Warmup Iteration   4: 46.363 ns/op
# Warmup Iteration   5: 46.328 ns/op
Iteration   1: 46.417 ns/op
Iteration   2: 46.242 ns/op
Iteration   3: 46.207 ns/op
Iteration   4: 46.244 ns/op
Iteration   5: 46.992 ns/op


Result "fastMathCos":
  46.616 ±(99.9%) 0.519 ns/op [Average]
  (min, avg, max) = (46.207, 46.616, 47.005), stdev = 0.343
  CI (99.9%): [46.098, 47.135] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 0, b = 1)

# Run progress: 67.01% complete, ETA 00:36:18
# Fork: 1 of 2
# Warmup Iteration   1: 47.681 ns/op
# Warmup Iteration   2: 48.155 ns/op
# Warmup Iteration   3: 46.653 ns/op
# Warmup Iteration   4: 46.628 ns/op
# Warmup Iteration   5: 46.718 ns/op
Iteration   1: 46.749 ns/op
Iteration   2: 46.682 ns/op
Iteration   3: 46.673 ns/op
Iteration   4: 47.033 ns/op
Iteration   5: 47.005 ns/op

# Run progress: 67.18% complete, ETA 00:36:07
# Fork: 2 of 2
# Warmup Iteration   1: 47.677 ns/op
# Warmup Iteration   2: 48.155 ns/op
# Warmup Iteration   3: 46.175 ns/op
# Warmup Iteration   4: 46.333 ns/op
# Warmup Iteration   5: 46.220 ns/op
Iteration   1: 46.186 ns/op
Iteration   2: 46.162 ns/op
Iteration   3: 46.229 ns/op
Iteration   4: 46.386 ns/op
Iteration   5: 46.396 ns/op


Result "fastMathCos":
  46.550 ±(99.9%) 0.491 ns/op [Average]
  (min, avg, max) = (46.162, 46.550, 47.033), stdev = 0.325
  CI (99.9%): [46.059, 47.041] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 0, b = 5)

# Run progress: 67.35% complete, ETA 00:35:55
# Fork: 1 of 2
# Warmup Iteration   1: 47.652 ns/op
# Warmup Iteration   2: 48.132 ns/op
# Warmup Iteration   3: 46.993 ns/op
# Warmup Iteration   4: 46.898 ns/op
# Warmup Iteration   5: 46.949 ns/op
Iteration   1: 46.983 ns/op
Iteration   2: 46.996 ns/op
Iteration   3: 47.045 ns/op
Iteration   4: 46.119 ns/op
Iteration   5: 46.075 ns/op

# Run progress: 67.52% complete, ETA 00:35:44
# Fork: 2 of 2
# Warmup Iteration   1: 47.668 ns/op
# Warmup Iteration   2: 47.825 ns/op
# Warmup Iteration   3: 46.676 ns/op
# Warmup Iteration   4: 46.732 ns/op
# Warmup Iteration   5: 46.712 ns/op
Iteration   1: 46.771 ns/op
Iteration   2: 46.746 ns/op
Iteration   3: 46.702 ns/op
Iteration   4: 46.720 ns/op
Iteration   5: 47.062 ns/op


Result "fastMathCos":
  46.722 ±(99.9%) 0.540 ns/op [Average]
  (min, avg, max) = (46.075, 46.722, 47.062), stdev = 0.357
  CI (99.9%): [46.182, 47.262] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 0, b = 10)

# Run progress: 67.69% complete, ETA 00:35:33
# Fork: 1 of 2
# Warmup Iteration   1: 47.554 ns/op
# Warmup Iteration   2: 47.942 ns/op
# Warmup Iteration   3: 46.325 ns/op
# Warmup Iteration   4: 46.312 ns/op
# Warmup Iteration   5: 46.345 ns/op
Iteration   1: 46.286 ns/op
Iteration   2: 46.305 ns/op
Iteration   3: 46.242 ns/op
Iteration   4: 46.924 ns/op
Iteration   5: 46.861 ns/op

# Run progress: 67.86% complete, ETA 00:35:22
# Fork: 2 of 2
# Warmup Iteration   1: 47.551 ns/op
# Warmup Iteration   2: 47.919 ns/op
# Warmup Iteration   3: 47.092 ns/op
# Warmup Iteration   4: 47.103 ns/op
# Warmup Iteration   5: 47.079 ns/op
Iteration   1: 47.038 ns/op
Iteration   2: 47.030 ns/op
Iteration   3: 47.067 ns/op
Iteration   4: 46.528 ns/op
Iteration   5: 46.559 ns/op


Result "fastMathCos":
  46.684 ±(99.9%) 0.509 ns/op [Average]
  (min, avg, max) = (46.242, 46.684, 47.067), stdev = 0.336
  CI (99.9%): [46.175, 47.193] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 0, b = 100)

# Run progress: 68.03% complete, ETA 00:35:10
# Fork: 1 of 2
# Warmup Iteration   1: 47.618 ns/op
# Warmup Iteration   2: 48.112 ns/op
# Warmup Iteration   3: 46.501 ns/op
# Warmup Iteration   4: 46.530 ns/op
# Warmup Iteration   5: 46.471 ns/op
Iteration   1: 46.555 ns/op
Iteration   2: 46.407 ns/op
Iteration   3: 46.539 ns/op
Iteration   4: 46.413 ns/op
Iteration   5: 46.087 ns/op

# Run progress: 68.20% complete, ETA 00:34:59
# Fork: 2 of 2
# Warmup Iteration   1: 47.707 ns/op
# Warmup Iteration   2: 48.246 ns/op
# Warmup Iteration   3: 46.682 ns/op
# Warmup Iteration   4: 46.725 ns/op
# Warmup Iteration   5: 46.708 ns/op
Iteration   1: 46.682 ns/op
Iteration   2: 46.740 ns/op
Iteration   3: 46.638 ns/op
Iteration   4: 48.037 ns/op
Iteration   5: 48.018 ns/op


Result "fastMathCos":
  46.812 ±(99.9%) 1.007 ns/op [Average]
  (min, avg, max) = (46.087, 46.812, 48.037), stdev = 0.666
  CI (99.9%): [45.804, 47.819] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 0, b = 1000)

# Run progress: 68.37% complete, ETA 00:34:48
# Fork: 1 of 2
# Warmup Iteration   1: 47.515 ns/op
# Warmup Iteration   2: 47.853 ns/op
# Warmup Iteration   3: 46.522 ns/op
# Warmup Iteration   4: 46.491 ns/op
# Warmup Iteration   5: 46.493 ns/op
Iteration   1: 46.489 ns/op
Iteration   2: 46.474 ns/op
Iteration   3: 46.460 ns/op
Iteration   4: 46.459 ns/op
Iteration   5: 46.602 ns/op

# Run progress: 68.54% complete, ETA 00:34:37
# Fork: 2 of 2
# Warmup Iteration   1: 47.341 ns/op
# Warmup Iteration   2: 47.533 ns/op
# Warmup Iteration   3: 46.794 ns/op
# Warmup Iteration   4: 46.784 ns/op
# Warmup Iteration   5: 46.818 ns/op
Iteration   1: 46.858 ns/op
Iteration   2: 46.879 ns/op
Iteration   3: 46.816 ns/op
Iteration   4: 47.079 ns/op
Iteration   5: 46.989 ns/op


Result "fastMathCos":
  46.710 ±(99.9%) 0.362 ns/op [Average]
  (min, avg, max) = (46.459, 46.710, 47.079), stdev = 0.240
  CI (99.9%): [46.348, 47.073] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 0, b = 10000)

# Run progress: 68.71% complete, ETA 00:34:26
# Fork: 1 of 2
# Warmup Iteration   1: 47.621 ns/op
# Warmup Iteration   2: 48.061 ns/op
# Warmup Iteration   3: 46.273 ns/op
# Warmup Iteration   4: 46.236 ns/op
# Warmup Iteration   5: 46.253 ns/op
Iteration   1: 46.310 ns/op
Iteration   2: 46.331 ns/op
Iteration   3: 46.278 ns/op
Iteration   4: 46.989 ns/op
Iteration   5: 47.012 ns/op

# Run progress: 68.88% complete, ETA 00:34:14
# Fork: 2 of 2
# Warmup Iteration   1: 47.734 ns/op
# Warmup Iteration   2: 48.166 ns/op
# Warmup Iteration   3: 47.033 ns/op
# Warmup Iteration   4: 47.081 ns/op
# Warmup Iteration   5: 47.080 ns/op
Iteration   1: 47.011 ns/op
Iteration   2: 47.027 ns/op
Iteration   3: 47.039 ns/op
Iteration   4: 47.086 ns/op
Iteration   5: 46.996 ns/op


Result "fastMathCos":
  46.808 ±(99.9%) 0.525 ns/op [Average]
  (min, avg, max) = (46.278, 46.808, 47.086), stdev = 0.347
  CI (99.9%): [46.283, 47.333] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 5, b = 0.5)

# Run progress: 69.05% complete, ETA 00:34:03
# Fork: 1 of 2
# Warmup Iteration   1: 29.823 ns/op
# Warmup Iteration   2: 30.452 ns/op
# Warmup Iteration   3: 30.016 ns/op
# Warmup Iteration   4: 29.970 ns/op
# Warmup Iteration   5: 29.957 ns/op
Iteration   1: 29.974 ns/op
Iteration   2: 30.026 ns/op
Iteration   3: 30.027 ns/op
Iteration   4: 29.498 ns/op
Iteration   5: 29.562 ns/op

# Run progress: 69.22% complete, ETA 00:33:52
# Fork: 2 of 2
# Warmup Iteration   1: 29.906 ns/op
# Warmup Iteration   2: 30.321 ns/op
# Warmup Iteration   3: 28.934 ns/op
# Warmup Iteration   4: 29.076 ns/op
# Warmup Iteration   5: 29.000 ns/op
Iteration   1: 28.927 ns/op
Iteration   2: 29.000 ns/op
Iteration   3: 28.924 ns/op
Iteration   4: 28.873 ns/op
Iteration   5: 28.889 ns/op


Result "fastMathCos":
  29.370 ±(99.9%) 0.763 ns/op [Average]
  (min, avg, max) = (28.873, 29.370, 30.027), stdev = 0.504
  CI (99.9%): [28.607, 30.133] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 5, b = 1)

# Run progress: 69.39% complete, ETA 00:33:41
# Fork: 1 of 2
# Warmup Iteration   1: 29.860 ns/op
# Warmup Iteration   2: 30.776 ns/op
# Warmup Iteration   3: 28.765 ns/op
# Warmup Iteration   4: 28.771 ns/op
# Warmup Iteration   5: 28.807 ns/op
Iteration   1: 28.794 ns/op
Iteration   2: 28.768 ns/op
Iteration   3: 28.827 ns/op
Iteration   4: 28.799 ns/op
Iteration   5: 28.845 ns/op

# Run progress: 69.56% complete, ETA 00:33:29
# Fork: 2 of 2
# Warmup Iteration   1: 29.774 ns/op
# Warmup Iteration   2: 30.089 ns/op
# Warmup Iteration   3: 28.845 ns/op
# Warmup Iteration   4: 28.774 ns/op
# Warmup Iteration   5: 28.907 ns/op
Iteration   1: 28.764 ns/op
Iteration   2: 28.742 ns/op
Iteration   3: 28.822 ns/op
Iteration   4: 28.750 ns/op
Iteration   5: 28.762 ns/op


Result "fastMathCos":
  28.787 ±(99.9%) 0.054 ns/op [Average]
  (min, avg, max) = (28.742, 28.787, 28.845), stdev = 0.036
  CI (99.9%): [28.734, 28.841] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 5, b = 5)

# Run progress: 69.73% complete, ETA 00:33:18
# Fork: 1 of 2
# Warmup Iteration   1: 29.625 ns/op
# Warmup Iteration   2: 30.422 ns/op
# Warmup Iteration   3: 29.283 ns/op
# Warmup Iteration   4: 29.215 ns/op
# Warmup Iteration   5: 29.262 ns/op
Iteration   1: 29.218 ns/op
Iteration   2: 29.194 ns/op
Iteration   3: 29.253 ns/op
Iteration   4: 29.217 ns/op
Iteration   5: 29.992 ns/op

# Run progress: 69.90% complete, ETA 00:33:07
# Fork: 2 of 2
# Warmup Iteration   1: 29.769 ns/op
# Warmup Iteration   2: 30.075 ns/op
# Warmup Iteration   3: 28.837 ns/op
# Warmup Iteration   4: 28.788 ns/op
# Warmup Iteration   5: 28.812 ns/op
Iteration   1: 28.799 ns/op
Iteration   2: 28.747 ns/op
Iteration   3: 28.786 ns/op
Iteration   4: 28.901 ns/op
Iteration   5: 28.786 ns/op


Result "fastMathCos":
  29.089 ±(99.9%) 0.576 ns/op [Average]
  (min, avg, max) = (28.747, 29.089, 29.992), stdev = 0.381
  CI (99.9%): [28.513, 29.665] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 5, b = 10)

# Run progress: 70.07% complete, ETA 00:32:56
# Fork: 1 of 2
# Warmup Iteration   1: 29.584 ns/op
# Warmup Iteration   2: 30.615 ns/op
# Warmup Iteration   3: 28.849 ns/op
# Warmup Iteration   4: 28.810 ns/op
# Warmup Iteration   5: 28.789 ns/op
Iteration   1: 28.834 ns/op
Iteration   2: 28.864 ns/op
Iteration   3: 28.835 ns/op
Iteration   4: 28.805 ns/op
Iteration   5: 28.782 ns/op

# Run progress: 70.24% complete, ETA 00:32:44
# Fork: 2 of 2
# Warmup Iteration   1: 30.321 ns/op
# Warmup Iteration   2: 30.385 ns/op
# Warmup Iteration   3: 29.000 ns/op
# Warmup Iteration   4: 29.047 ns/op
# Warmup Iteration   5: 29.018 ns/op
Iteration   1: 29.009 ns/op
Iteration   2: 29.021 ns/op
Iteration   3: 28.961 ns/op
Iteration   4: 29.059 ns/op
Iteration   5: 29.009 ns/op


Result "fastMathCos":
  28.918 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (28.782, 28.918, 29.059), stdev = 0.104
  CI (99.9%): [28.761, 29.075] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 5, b = 100)

# Run progress: 70.41% complete, ETA 00:32:33
# Fork: 1 of 2
# Warmup Iteration   1: 31.116 ns/op
# Warmup Iteration   2: 30.334 ns/op
# Warmup Iteration   3: 30.552 ns/op
# Warmup Iteration   4: 30.493 ns/op
# Warmup Iteration   5: 30.551 ns/op
Iteration   1: 30.523 ns/op
Iteration   2: 30.491 ns/op
Iteration   3: 30.490 ns/op
Iteration   4: 30.498 ns/op
Iteration   5: 30.454 ns/op

# Run progress: 70.58% complete, ETA 00:32:22
# Fork: 2 of 2
# Warmup Iteration   1: 30.133 ns/op
# Warmup Iteration   2: 30.609 ns/op
# Warmup Iteration   3: 30.029 ns/op
# Warmup Iteration   4: 30.113 ns/op
# Warmup Iteration   5: 30.012 ns/op
Iteration   1: 30.032 ns/op
Iteration   2: 30.043 ns/op
Iteration   3: 29.952 ns/op
Iteration   4: 29.077 ns/op
Iteration   5: 29.081 ns/op


Result "fastMathCos":
  30.064 ±(99.9%) 0.853 ns/op [Average]
  (min, avg, max) = (29.077, 30.064, 30.523), stdev = 0.565
  CI (99.9%): [29.211, 30.918] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 5, b = 1000)

# Run progress: 70.75% complete, ETA 00:32:11
# Fork: 1 of 2
# Warmup Iteration   1: 29.822 ns/op
# Warmup Iteration   2: 30.249 ns/op
# Warmup Iteration   3: 28.832 ns/op
# Warmup Iteration   4: 28.812 ns/op
# Warmup Iteration   5: 28.768 ns/op
Iteration   1: 28.804 ns/op
Iteration   2: 28.808 ns/op
Iteration   3: 28.792 ns/op
Iteration   4: 28.862 ns/op
Iteration   5: 28.808 ns/op

# Run progress: 70.92% complete, ETA 00:32:00
# Fork: 2 of 2
# Warmup Iteration   1: 29.757 ns/op
# Warmup Iteration   2: 30.670 ns/op
# Warmup Iteration   3: 28.758 ns/op
# Warmup Iteration   4: 28.778 ns/op
# Warmup Iteration   5: 28.801 ns/op
Iteration   1: 28.735 ns/op
Iteration   2: 28.837 ns/op
Iteration   3: 28.771 ns/op
Iteration   4: 28.798 ns/op
Iteration   5: 28.864 ns/op


Result "fastMathCos":
  28.808 ±(99.9%) 0.060 ns/op [Average]
  (min, avg, max) = (28.735, 28.808, 28.864), stdev = 0.039
  CI (99.9%): [28.748, 28.867] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 5, b = 10000)

# Run progress: 71.09% complete, ETA 00:31:48
# Fork: 1 of 2
# Warmup Iteration   1: 29.929 ns/op
# Warmup Iteration   2: 30.448 ns/op
# Warmup Iteration   3: 28.800 ns/op
# Warmup Iteration   4: 28.777 ns/op
# Warmup Iteration   5: 28.818 ns/op
Iteration   1: 28.764 ns/op
Iteration   2: 28.808 ns/op
Iteration   3: 28.780 ns/op
Iteration   4: 28.800 ns/op
Iteration   5: 28.826 ns/op

# Run progress: 71.26% complete, ETA 00:31:37
# Fork: 2 of 2
# Warmup Iteration   1: 29.765 ns/op
# Warmup Iteration   2: 30.573 ns/op
# Warmup Iteration   3: 28.838 ns/op
# Warmup Iteration   4: 28.807 ns/op
# Warmup Iteration   5: 28.852 ns/op
Iteration   1: 28.840 ns/op
Iteration   2: 28.846 ns/op
Iteration   3: 28.854 ns/op
Iteration   4: 28.841 ns/op
Iteration   5: 28.858 ns/op


Result "fastMathCos":
  28.822 ±(99.9%) 0.049 ns/op [Average]
  (min, avg, max) = (28.764, 28.822, 28.858), stdev = 0.032
  CI (99.9%): [28.773, 28.871] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 30, b = 0.5)

# Run progress: 71.43% complete, ETA 00:31:26
# Fork: 1 of 2
# Warmup Iteration   1: 29.823 ns/op
# Warmup Iteration   2: 30.085 ns/op
# Warmup Iteration   3: 28.736 ns/op
# Warmup Iteration   4: 28.773 ns/op
# Warmup Iteration   5: 28.787 ns/op
Iteration   1: 28.774 ns/op
Iteration   2: 28.796 ns/op
Iteration   3: 28.784 ns/op
Iteration   4: 28.796 ns/op
Iteration   5: 28.746 ns/op

# Run progress: 71.60% complete, ETA 00:31:15
# Fork: 2 of 2
# Warmup Iteration   1: 30.026 ns/op
# Warmup Iteration   2: 30.102 ns/op
# Warmup Iteration   3: 28.795 ns/op
# Warmup Iteration   4: 28.795 ns/op
# Warmup Iteration   5: 28.809 ns/op
Iteration   1: 28.824 ns/op
Iteration   2: 28.828 ns/op
Iteration   3: 28.802 ns/op
Iteration   4: 28.798 ns/op
Iteration   5: 28.795 ns/op


Result "fastMathCos":
  28.794 ±(99.9%) 0.035 ns/op [Average]
  (min, avg, max) = (28.746, 28.794, 28.828), stdev = 0.023
  CI (99.9%): [28.759, 28.830] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 30, b = 1)

# Run progress: 71.77% complete, ETA 00:31:03
# Fork: 1 of 2
# Warmup Iteration   1: 29.592 ns/op
# Warmup Iteration   2: 30.659 ns/op
# Warmup Iteration   3: 28.846 ns/op
# Warmup Iteration   4: 28.903 ns/op
# Warmup Iteration   5: 28.875 ns/op
Iteration   1: 28.900 ns/op
Iteration   2: 28.981 ns/op
Iteration   3: 28.844 ns/op
Iteration   4: 28.879 ns/op
Iteration   5: 28.746 ns/op

# Run progress: 71.94% complete, ETA 00:30:52
# Fork: 2 of 2
# Warmup Iteration   1: 29.663 ns/op
# Warmup Iteration   2: 30.452 ns/op
# Warmup Iteration   3: 29.420 ns/op
# Warmup Iteration   4: 29.412 ns/op
# Warmup Iteration   5: 29.380 ns/op
Iteration   1: 29.411 ns/op
Iteration   2: 29.371 ns/op
Iteration   3: 29.355 ns/op
Iteration   4: 29.382 ns/op
Iteration   5: 30.240 ns/op


Result "fastMathCos":
  29.211 ±(99.9%) 0.674 ns/op [Average]
  (min, avg, max) = (28.746, 29.211, 30.240), stdev = 0.446
  CI (99.9%): [28.537, 29.884] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 30, b = 5)

# Run progress: 72.11% complete, ETA 00:30:41
# Fork: 1 of 2
# Warmup Iteration   1: 30.019 ns/op
# Warmup Iteration   2: 30.098 ns/op
# Warmup Iteration   3: 28.918 ns/op
# Warmup Iteration   4: 28.936 ns/op
# Warmup Iteration   5: 28.902 ns/op
Iteration   1: 28.944 ns/op
Iteration   2: 28.954 ns/op
Iteration   3: 28.925 ns/op
Iteration   4: 28.766 ns/op
Iteration   5: 28.765 ns/op

# Run progress: 72.28% complete, ETA 00:30:30
# Fork: 2 of 2
# Warmup Iteration   1: 31.099 ns/op
# Warmup Iteration   2: 30.399 ns/op
# Warmup Iteration   3: 29.181 ns/op
# Warmup Iteration   4: 29.207 ns/op
# Warmup Iteration   5: 29.056 ns/op
Iteration   1: 29.108 ns/op
Iteration   2: 29.085 ns/op
Iteration   3: 29.054 ns/op
Iteration   4: 29.178 ns/op
Iteration   5: 29.033 ns/op


Result "fastMathCos":
  28.981 ±(99.9%) 0.209 ns/op [Average]
  (min, avg, max) = (28.765, 28.981, 29.178), stdev = 0.138
  CI (99.9%): [28.772, 29.190] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 30, b = 10)

# Run progress: 72.45% complete, ETA 00:30:18
# Fork: 1 of 2
# Warmup Iteration   1: 30.280 ns/op
# Warmup Iteration   2: 29.982 ns/op
# Warmup Iteration   3: 28.722 ns/op
# Warmup Iteration   4: 28.771 ns/op
# Warmup Iteration   5: 28.752 ns/op
Iteration   1: 28.767 ns/op
Iteration   2: 28.790 ns/op
Iteration   3: 28.743 ns/op
Iteration   4: 28.747 ns/op
Iteration   5: 28.810 ns/op

# Run progress: 72.62% complete, ETA 00:30:07
# Fork: 2 of 2
# Warmup Iteration   1: 29.807 ns/op
# Warmup Iteration   2: 30.290 ns/op
# Warmup Iteration   3: 28.836 ns/op
# Warmup Iteration   4: 28.789 ns/op
# Warmup Iteration   5: 28.767 ns/op
Iteration   1: 28.754 ns/op
Iteration   2: 28.797 ns/op
Iteration   3: 28.767 ns/op
Iteration   4: 28.807 ns/op
Iteration   5: 28.772 ns/op


Result "fastMathCos":
  28.775 ±(99.9%) 0.037 ns/op [Average]
  (min, avg, max) = (28.743, 28.775, 28.810), stdev = 0.024
  CI (99.9%): [28.739, 28.812] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 30, b = 100)

# Run progress: 72.79% complete, ETA 00:29:56
# Fork: 1 of 2
# Warmup Iteration   1: 29.969 ns/op
# Warmup Iteration   2: 30.467 ns/op
# Warmup Iteration   3: 28.902 ns/op
# Warmup Iteration   4: 28.858 ns/op
# Warmup Iteration   5: 28.775 ns/op
Iteration   1: 28.794 ns/op
Iteration   2: 28.884 ns/op
Iteration   3: 28.834 ns/op
Iteration   4: 28.855 ns/op
Iteration   5: 28.845 ns/op

# Run progress: 72.96% complete, ETA 00:29:45
# Fork: 2 of 2
# Warmup Iteration   1: 29.952 ns/op
# Warmup Iteration   2: 30.681 ns/op
# Warmup Iteration   3: 28.766 ns/op
# Warmup Iteration   4: 28.916 ns/op
# Warmup Iteration   5: 28.785 ns/op
Iteration   1: 28.780 ns/op
Iteration   2: 28.797 ns/op
Iteration   3: 28.802 ns/op
Iteration   4: 28.795 ns/op
Iteration   5: 28.799 ns/op


Result "fastMathCos":
  28.818 ±(99.9%) 0.051 ns/op [Average]
  (min, avg, max) = (28.780, 28.818, 28.884), stdev = 0.034
  CI (99.9%): [28.767, 28.870] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 30, b = 1000)

# Run progress: 73.13% complete, ETA 00:29:34
# Fork: 1 of 2
# Warmup Iteration   1: 30.318 ns/op
# Warmup Iteration   2: 30.473 ns/op
# Warmup Iteration   3: 29.279 ns/op
# Warmup Iteration   4: 29.209 ns/op
# Warmup Iteration   5: 29.249 ns/op
Iteration   1: 29.223 ns/op
Iteration   2: 29.280 ns/op
Iteration   3: 29.269 ns/op
Iteration   4: 29.973 ns/op
Iteration   5: 29.967 ns/op

# Run progress: 73.30% complete, ETA 00:29:22
# Fork: 2 of 2
# Warmup Iteration   1: 29.807 ns/op
# Warmup Iteration   2: 30.506 ns/op
# Warmup Iteration   3: 28.901 ns/op
# Warmup Iteration   4: 28.783 ns/op
# Warmup Iteration   5: 28.868 ns/op
Iteration   1: 28.804 ns/op
Iteration   2: 28.768 ns/op
Iteration   3: 28.791 ns/op
Iteration   4: 28.757 ns/op
Iteration   5: 28.728 ns/op


Result "fastMathCos":
  29.156 ±(99.9%) 0.732 ns/op [Average]
  (min, avg, max) = (28.728, 29.156, 29.973), stdev = 0.484
  CI (99.9%): [28.425, 29.888] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 30, b = 10000)

# Run progress: 73.47% complete, ETA 00:29:11
# Fork: 1 of 2
# Warmup Iteration   1: 29.853 ns/op
# Warmup Iteration   2: 30.702 ns/op
# Warmup Iteration   3: 28.813 ns/op
# Warmup Iteration   4: 28.759 ns/op
# Warmup Iteration   5: 28.825 ns/op
Iteration   1: 28.898 ns/op
Iteration   2: 28.788 ns/op
Iteration   3: 28.855 ns/op
Iteration   4: 28.821 ns/op
Iteration   5: 28.797 ns/op

# Run progress: 73.64% complete, ETA 00:29:00
# Fork: 2 of 2
# Warmup Iteration   1: 29.564 ns/op
# Warmup Iteration   2: 30.055 ns/op
# Warmup Iteration   3: 28.808 ns/op
# Warmup Iteration   4: 28.768 ns/op
# Warmup Iteration   5: 28.746 ns/op
Iteration   1: 28.789 ns/op
Iteration   2: 28.792 ns/op
Iteration   3: 28.764 ns/op
Iteration   4: 28.772 ns/op
Iteration   5: 28.758 ns/op


Result "fastMathCos":
  28.803 ±(99.9%) 0.066 ns/op [Average]
  (min, avg, max) = (28.758, 28.803, 28.898), stdev = 0.044
  CI (99.9%): [28.738, 28.869] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 45, b = 0.5)

# Run progress: 73.81% complete, ETA 00:28:49
# Fork: 1 of 2
# Warmup Iteration   1: 30.121 ns/op
# Warmup Iteration   2: 30.463 ns/op
# Warmup Iteration   3: 28.836 ns/op
# Warmup Iteration   4: 28.772 ns/op
# Warmup Iteration   5: 28.867 ns/op
Iteration   1: 28.836 ns/op
Iteration   2: 28.782 ns/op
Iteration   3: 28.783 ns/op
Iteration   4: 28.800 ns/op
Iteration   5: 29.610 ns/op

# Run progress: 73.98% complete, ETA 00:28:37
# Fork: 2 of 2
# Warmup Iteration   1: 29.525 ns/op
# Warmup Iteration   2: 30.661 ns/op
# Warmup Iteration   3: 29.596 ns/op
# Warmup Iteration   4: 29.628 ns/op
# Warmup Iteration   5: 29.531 ns/op
Iteration   1: 29.551 ns/op
Iteration   2: 29.502 ns/op
Iteration   3: 29.558 ns/op
Iteration   4: 29.607 ns/op
Iteration   5: 29.967 ns/op


Result "fastMathCos":
  29.300 ±(99.9%) 0.677 ns/op [Average]
  (min, avg, max) = (28.782, 29.300, 29.967), stdev = 0.448
  CI (99.9%): [28.622, 29.977] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 45, b = 1)

# Run progress: 74.15% complete, ETA 00:28:26
# Fork: 1 of 2
# Warmup Iteration   1: 29.993 ns/op
# Warmup Iteration   2: 30.695 ns/op
# Warmup Iteration   3: 28.832 ns/op
# Warmup Iteration   4: 28.956 ns/op
# Warmup Iteration   5: 28.852 ns/op
Iteration   1: 28.840 ns/op
Iteration   2: 28.841 ns/op
Iteration   3: 28.843 ns/op
Iteration   4: 28.890 ns/op
Iteration   5: 28.848 ns/op

# Run progress: 74.32% complete, ETA 00:28:15
# Fork: 2 of 2
# Warmup Iteration   1: 29.833 ns/op
# Warmup Iteration   2: 30.377 ns/op
# Warmup Iteration   3: 28.780 ns/op
# Warmup Iteration   4: 28.790 ns/op
# Warmup Iteration   5: 28.746 ns/op
Iteration   1: 28.784 ns/op
Iteration   2: 28.745 ns/op
Iteration   3: 28.747 ns/op
Iteration   4: 28.837 ns/op
Iteration   5: 28.852 ns/op


Result "fastMathCos":
  28.823 ±(99.9%) 0.072 ns/op [Average]
  (min, avg, max) = (28.745, 28.823, 28.890), stdev = 0.048
  CI (99.9%): [28.750, 28.895] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 45, b = 5)

# Run progress: 74.49% complete, ETA 00:28:04
# Fork: 1 of 2
# Warmup Iteration   1: 29.920 ns/op
# Warmup Iteration   2: 30.448 ns/op
# Warmup Iteration   3: 28.860 ns/op
# Warmup Iteration   4: 28.789 ns/op
# Warmup Iteration   5: 28.767 ns/op
Iteration   1: 28.765 ns/op
Iteration   2: 28.804 ns/op
Iteration   3: 28.810 ns/op
Iteration   4: 28.813 ns/op
Iteration   5: 28.771 ns/op

# Run progress: 74.66% complete, ETA 00:27:53
# Fork: 2 of 2
# Warmup Iteration   1: 29.663 ns/op
# Warmup Iteration   2: 30.412 ns/op
# Warmup Iteration   3: 28.822 ns/op
# Warmup Iteration   4: 28.847 ns/op
# Warmup Iteration   5: 29.035 ns/op
Iteration   1: 28.839 ns/op
Iteration   2: 28.878 ns/op
Iteration   3: 28.832 ns/op
Iteration   4: 28.796 ns/op
Iteration   5: 28.982 ns/op


Result "fastMathCos":
  28.829 ±(99.9%) 0.095 ns/op [Average]
  (min, avg, max) = (28.765, 28.829, 28.982), stdev = 0.063
  CI (99.9%): [28.734, 28.924] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 45, b = 10)

# Run progress: 74.83% complete, ETA 00:27:41
# Fork: 1 of 2
# Warmup Iteration   1: 29.793 ns/op
# Warmup Iteration   2: 30.526 ns/op
# Warmup Iteration   3: 29.963 ns/op
# Warmup Iteration   4: 29.904 ns/op
# Warmup Iteration   5: 29.917 ns/op
Iteration   1: 29.935 ns/op
Iteration   2: 29.921 ns/op
Iteration   3: 29.836 ns/op
Iteration   4: 29.553 ns/op
Iteration   5: 29.465 ns/op

# Run progress: 75.00% complete, ETA 00:27:30
# Fork: 2 of 2
# Warmup Iteration   1: 30.866 ns/op
# Warmup Iteration   2: 30.707 ns/op
# Warmup Iteration   3: 29.118 ns/op
# Warmup Iteration   4: 29.264 ns/op
# Warmup Iteration   5: 29.121 ns/op
Iteration   1: 29.177 ns/op
Iteration   2: 29.146 ns/op
Iteration   3: 29.201 ns/op
Iteration   4: 29.043 ns/op
Iteration   5: 29.143 ns/op


Result "fastMathCos":
  29.442 ±(99.9%) 0.530 ns/op [Average]
  (min, avg, max) = (29.043, 29.442, 29.935), stdev = 0.351
  CI (99.9%): [28.912, 29.972] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 45, b = 100)

# Run progress: 75.17% complete, ETA 00:27:19
# Fork: 1 of 2
# Warmup Iteration   1: 30.047 ns/op
# Warmup Iteration   2: 30.392 ns/op
# Warmup Iteration   3: 28.825 ns/op
# Warmup Iteration   4: 28.806 ns/op
# Warmup Iteration   5: 28.834 ns/op
Iteration   1: 28.744 ns/op
Iteration   2: 28.739 ns/op
Iteration   3: 28.813 ns/op
Iteration   4: 28.775 ns/op
Iteration   5: 28.751 ns/op

# Run progress: 75.34% complete, ETA 00:27:08
# Fork: 2 of 2
# Warmup Iteration   1: 29.942 ns/op
# Warmup Iteration   2: 30.464 ns/op
# Warmup Iteration   3: 28.926 ns/op
# Warmup Iteration   4: 28.958 ns/op
# Warmup Iteration   5: 29.000 ns/op
Iteration   1: 28.931 ns/op
Iteration   2: 28.895 ns/op
Iteration   3: 28.919 ns/op
Iteration   4: 28.823 ns/op
Iteration   5: 28.787 ns/op


Result "fastMathCos":
  28.818 ±(99.9%) 0.110 ns/op [Average]
  (min, avg, max) = (28.739, 28.818, 28.931), stdev = 0.073
  CI (99.9%): [28.707, 28.928] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 45, b = 1000)

# Run progress: 75.51% complete, ETA 00:26:56
# Fork: 1 of 2
# Warmup Iteration   1: 29.778 ns/op
# Warmup Iteration   2: 30.576 ns/op
# Warmup Iteration   3: 28.772 ns/op
# Warmup Iteration   4: 28.786 ns/op
# Warmup Iteration   5: 28.730 ns/op
Iteration   1: 28.742 ns/op
Iteration   2: 28.752 ns/op
Iteration   3: 28.769 ns/op
Iteration   4: 28.771 ns/op
Iteration   5: 28.743 ns/op

# Run progress: 75.68% complete, ETA 00:26:45
# Fork: 2 of 2
# Warmup Iteration   1: 31.316 ns/op
# Warmup Iteration   2: 29.995 ns/op
# Warmup Iteration   3: 29.176 ns/op
# Warmup Iteration   4: 29.043 ns/op
# Warmup Iteration   5: 29.030 ns/op
Iteration   1: 28.984 ns/op
Iteration   2: 29.017 ns/op
Iteration   3: 28.962 ns/op
Iteration   4: 29.025 ns/op
Iteration   5: 29.012 ns/op


Result "fastMathCos":
  28.878 ±(99.9%) 0.197 ns/op [Average]
  (min, avg, max) = (28.742, 28.878, 29.025), stdev = 0.130
  CI (99.9%): [28.680, 29.075] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 45, b = 10000)

# Run progress: 75.85% complete, ETA 00:26:34
# Fork: 1 of 2
# Warmup Iteration   1: 29.629 ns/op
# Warmup Iteration   2: 30.655 ns/op
# Warmup Iteration   3: 28.837 ns/op
# Warmup Iteration   4: 28.761 ns/op
# Warmup Iteration   5: 28.732 ns/op
Iteration   1: 28.761 ns/op
Iteration   2: 28.834 ns/op
Iteration   3: 28.824 ns/op
Iteration   4: 28.766 ns/op
Iteration   5: 28.895 ns/op

# Run progress: 76.02% complete, ETA 00:26:23
# Fork: 2 of 2
# Warmup Iteration   1: 29.892 ns/op
# Warmup Iteration   2: 30.477 ns/op
# Warmup Iteration   3: 28.786 ns/op
# Warmup Iteration   4: 28.809 ns/op
# Warmup Iteration   5: 28.792 ns/op
Iteration   1: 28.795 ns/op
Iteration   2: 28.801 ns/op
Iteration   3: 28.759 ns/op
Iteration   4: 28.903 ns/op
Iteration   5: 28.937 ns/op


Result "fastMathCos":
  28.827 ±(99.9%) 0.097 ns/op [Average]
  (min, avg, max) = (28.759, 28.827, 28.937), stdev = 0.064
  CI (99.9%): [28.731, 28.924] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 60, b = 0.5)

# Run progress: 76.19% complete, ETA 00:26:11
# Fork: 1 of 2
# Warmup Iteration   1: 29.704 ns/op
# Warmup Iteration   2: 30.480 ns/op
# Warmup Iteration   3: 29.767 ns/op
# Warmup Iteration   4: 29.838 ns/op
# Warmup Iteration   5: 29.826 ns/op
Iteration   1: 29.820 ns/op
Iteration   2: 29.769 ns/op
Iteration   3: 29.847 ns/op
Iteration   4: 30.277 ns/op
Iteration   5: 30.254 ns/op

# Run progress: 76.36% complete, ETA 00:26:00
# Fork: 2 of 2
# Warmup Iteration   1: 29.803 ns/op
# Warmup Iteration   2: 30.565 ns/op
# Warmup Iteration   3: 28.798 ns/op
# Warmup Iteration   4: 28.769 ns/op
# Warmup Iteration   5: 28.818 ns/op
Iteration   1: 28.806 ns/op
Iteration   2: 28.768 ns/op
Iteration   3: 28.781 ns/op
Iteration   4: 28.816 ns/op
Iteration   5: 28.804 ns/op


Result "fastMathCos":
  29.394 ±(99.9%) 0.988 ns/op [Average]
  (min, avg, max) = (28.768, 29.394, 30.277), stdev = 0.653
  CI (99.9%): [28.407, 30.382] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 60, b = 1)

# Run progress: 76.53% complete, ETA 00:25:49
# Fork: 1 of 2
# Warmup Iteration   1: 32.147 ns/op
# Warmup Iteration   2: 31.651 ns/op
# Warmup Iteration   3: 28.857 ns/op
# Warmup Iteration   4: 28.852 ns/op
# Warmup Iteration   5: 28.795 ns/op
Iteration   1: 28.773 ns/op
Iteration   2: 28.819 ns/op
Iteration   3: 28.761 ns/op
Iteration   4: 28.777 ns/op
Iteration   5: 28.819 ns/op

# Run progress: 76.70% complete, ETA 00:25:38
# Fork: 2 of 2
# Warmup Iteration   1: 29.607 ns/op
# Warmup Iteration   2: 30.374 ns/op
# Warmup Iteration   3: 29.011 ns/op
# Warmup Iteration   4: 28.988 ns/op
# Warmup Iteration   5: 28.987 ns/op
Iteration   1: 29.073 ns/op
Iteration   2: 29.069 ns/op
Iteration   3: 28.966 ns/op
Iteration   4: 29.070 ns/op
Iteration   5: 28.917 ns/op


Result "fastMathCos":
  28.904 ±(99.9%) 0.199 ns/op [Average]
  (min, avg, max) = (28.761, 28.904, 29.073), stdev = 0.131
  CI (99.9%): [28.706, 29.103] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 60, b = 5)

# Run progress: 76.87% complete, ETA 00:25:27
# Fork: 1 of 2
# Warmup Iteration   1: 30.062 ns/op
# Warmup Iteration   2: 30.081 ns/op
# Warmup Iteration   3: 28.838 ns/op
# Warmup Iteration   4: 28.826 ns/op
# Warmup Iteration   5: 28.854 ns/op
Iteration   1: 28.819 ns/op
Iteration   2: 28.854 ns/op
Iteration   3: 28.809 ns/op
Iteration   4: 28.821 ns/op
Iteration   5: 28.852 ns/op

# Run progress: 77.04% complete, ETA 00:25:15
# Fork: 2 of 2
# Warmup Iteration   1: 29.760 ns/op
# Warmup Iteration   2: 30.063 ns/op
# Warmup Iteration   3: 28.773 ns/op
# Warmup Iteration   4: 28.808 ns/op
# Warmup Iteration   5: 28.772 ns/op
Iteration   1: 28.761 ns/op
Iteration   2: 28.748 ns/op
Iteration   3: 28.761 ns/op
Iteration   4: 28.786 ns/op
Iteration   5: 28.781 ns/op


Result "fastMathCos":
  28.799 ±(99.9%) 0.057 ns/op [Average]
  (min, avg, max) = (28.748, 28.799, 28.854), stdev = 0.038
  CI (99.9%): [28.742, 28.856] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 60, b = 10)

# Run progress: 77.21% complete, ETA 00:25:04
# Fork: 1 of 2
# Warmup Iteration   1: 29.583 ns/op
# Warmup Iteration   2: 30.657 ns/op
# Warmup Iteration   3: 28.800 ns/op
# Warmup Iteration   4: 28.847 ns/op
# Warmup Iteration   5: 28.837 ns/op
Iteration   1: 28.863 ns/op
Iteration   2: 28.834 ns/op
Iteration   3: 28.807 ns/op
Iteration   4: 28.770 ns/op
Iteration   5: 28.852 ns/op

# Run progress: 77.38% complete, ETA 00:24:53
# Fork: 2 of 2
# Warmup Iteration   1: 29.793 ns/op
# Warmup Iteration   2: 30.056 ns/op
# Warmup Iteration   3: 28.759 ns/op
# Warmup Iteration   4: 28.766 ns/op
# Warmup Iteration   5: 28.761 ns/op
Iteration   1: 28.752 ns/op
Iteration   2: 28.773 ns/op
Iteration   3: 28.802 ns/op
Iteration   4: 28.752 ns/op
Iteration   5: 28.776 ns/op


Result "fastMathCos":
  28.798 ±(99.9%) 0.061 ns/op [Average]
  (min, avg, max) = (28.752, 28.798, 28.863), stdev = 0.040
  CI (99.9%): [28.737, 28.859] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 60, b = 100)

# Run progress: 77.55% complete, ETA 00:24:42
# Fork: 1 of 2
# Warmup Iteration   1: 29.876 ns/op
# Warmup Iteration   2: 30.465 ns/op
# Warmup Iteration   3: 28.866 ns/op
# Warmup Iteration   4: 28.838 ns/op
# Warmup Iteration   5: 28.893 ns/op
Iteration   1: 28.878 ns/op
Iteration   2: 28.892 ns/op
Iteration   3: 28.867 ns/op
Iteration   4: 28.819 ns/op
Iteration   5: 28.838 ns/op

# Run progress: 77.72% complete, ETA 00:24:30
# Fork: 2 of 2
# Warmup Iteration   1: 29.786 ns/op
# Warmup Iteration   2: 30.459 ns/op
# Warmup Iteration   3: 28.918 ns/op
# Warmup Iteration   4: 28.849 ns/op
# Warmup Iteration   5: 28.960 ns/op
Iteration   1: 28.826 ns/op
Iteration   2: 28.913 ns/op
Iteration   3: 28.926 ns/op
Iteration   4: 28.886 ns/op
Iteration   5: 28.985 ns/op


Result "fastMathCos":
  28.883 ±(99.9%) 0.076 ns/op [Average]
  (min, avg, max) = (28.819, 28.883, 28.985), stdev = 0.050
  CI (99.9%): [28.807, 28.959] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 60, b = 1000)

# Run progress: 77.89% complete, ETA 00:24:19
# Fork: 1 of 2
# Warmup Iteration   1: 29.770 ns/op
# Warmup Iteration   2: 30.129 ns/op
# Warmup Iteration   3: 28.814 ns/op
# Warmup Iteration   4: 28.766 ns/op
# Warmup Iteration   5: 28.817 ns/op
Iteration   1: 28.787 ns/op
Iteration   2: 28.769 ns/op
Iteration   3: 28.794 ns/op
Iteration   4: 28.841 ns/op
Iteration   5: 28.808 ns/op

# Run progress: 78.06% complete, ETA 00:24:08
# Fork: 2 of 2
# Warmup Iteration   1: 29.876 ns/op
# Warmup Iteration   2: 30.465 ns/op
# Warmup Iteration   3: 29.874 ns/op
# Warmup Iteration   4: 29.967 ns/op
# Warmup Iteration   5: 29.985 ns/op
Iteration   1: 29.951 ns/op
Iteration   2: 29.930 ns/op
Iteration   3: 29.895 ns/op
Iteration   4: 29.892 ns/op
Iteration   5: 30.016 ns/op


Result "fastMathCos":
  29.368 ±(99.9%) 0.908 ns/op [Average]
  (min, avg, max) = (28.769, 29.368, 30.016), stdev = 0.601
  CI (99.9%): [28.460, 30.276] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 60, b = 10000)

# Run progress: 78.23% complete, ETA 00:23:57
# Fork: 1 of 2
# Warmup Iteration   1: 29.649 ns/op
# Warmup Iteration   2: 30.350 ns/op
# Warmup Iteration   3: 29.090 ns/op
# Warmup Iteration   4: 29.033 ns/op
# Warmup Iteration   5: 29.089 ns/op
Iteration   1: 29.023 ns/op
Iteration   2: 29.092 ns/op
Iteration   3: 29.076 ns/op
Iteration   4: 29.935 ns/op
Iteration   5: 29.954 ns/op

# Run progress: 78.40% complete, ETA 00:23:46
# Fork: 2 of 2
# Warmup Iteration   1: 29.852 ns/op
# Warmup Iteration   2: 31.039 ns/op
# Warmup Iteration   3: 30.587 ns/op
# Warmup Iteration   4: 30.534 ns/op
# Warmup Iteration   5: 30.507 ns/op
Iteration   1: 30.569 ns/op
Iteration   2: 30.582 ns/op
Iteration   3: 30.573 ns/op
Iteration   4: 30.083 ns/op
Iteration   5: 30.138 ns/op


Result "fastMathCos":
  29.902 ±(99.9%) 0.951 ns/op [Average]
  (min, avg, max) = (29.023, 29.902, 30.582), stdev = 0.629
  CI (99.9%): [28.952, 30.853] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 85, b = 0.5)

# Run progress: 78.57% complete, ETA 00:23:34
# Fork: 1 of 2
# Warmup Iteration   1: 29.878 ns/op
# Warmup Iteration   2: 29.912 ns/op
# Warmup Iteration   3: 30.093 ns/op
# Warmup Iteration   4: 30.119 ns/op
# Warmup Iteration   5: 30.128 ns/op
Iteration   1: 30.135 ns/op
Iteration   2: 30.102 ns/op
Iteration   3: 30.154 ns/op
Iteration   4: 29.724 ns/op
Iteration   5: 29.708 ns/op

# Run progress: 78.74% complete, ETA 00:23:23
# Fork: 2 of 2
# Warmup Iteration   1: 29.640 ns/op
# Warmup Iteration   2: 30.424 ns/op
# Warmup Iteration   3: 28.845 ns/op
# Warmup Iteration   4: 28.834 ns/op
# Warmup Iteration   5: 28.817 ns/op
Iteration   1: 28.826 ns/op
Iteration   2: 28.792 ns/op
Iteration   3: 28.790 ns/op
Iteration   4: 28.871 ns/op
Iteration   5: 28.801 ns/op


Result "fastMathCos":
  29.390 ±(99.9%) 0.944 ns/op [Average]
  (min, avg, max) = (28.790, 29.390, 30.154), stdev = 0.624
  CI (99.9%): [28.446, 30.334] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 85, b = 1)

# Run progress: 78.91% complete, ETA 00:23:12
# Fork: 1 of 2
# Warmup Iteration   1: 29.774 ns/op
# Warmup Iteration   2: 30.320 ns/op
# Warmup Iteration   3: 28.720 ns/op
# Warmup Iteration   4: 28.791 ns/op
# Warmup Iteration   5: 28.740 ns/op
Iteration   1: 28.778 ns/op
Iteration   2: 28.799 ns/op
Iteration   3: 28.710 ns/op
Iteration   4: 28.792 ns/op
Iteration   5: 28.761 ns/op

# Run progress: 79.08% complete, ETA 00:23:01
# Fork: 2 of 2
# Warmup Iteration   1: 29.713 ns/op
# Warmup Iteration   2: 30.401 ns/op
# Warmup Iteration   3: 30.556 ns/op
# Warmup Iteration   4: 30.530 ns/op
# Warmup Iteration   5: 30.490 ns/op
Iteration   1: 30.539 ns/op
Iteration   2: 30.548 ns/op
Iteration   3: 30.538 ns/op
Iteration   4: 30.491 ns/op
Iteration   5: 29.107 ns/op


Result "fastMathCos":
  29.506 ±(99.9%) 1.340 ns/op [Average]
  (min, avg, max) = (28.710, 29.506, 30.548), stdev = 0.886
  CI (99.9%): [28.166, 30.847] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 85, b = 5)

# Run progress: 79.25% complete, ETA 00:22:49
# Fork: 1 of 2
# Warmup Iteration   1: 29.688 ns/op
# Warmup Iteration   2: 30.628 ns/op
# Warmup Iteration   3: 28.798 ns/op
# Warmup Iteration   4: 28.815 ns/op
# Warmup Iteration   5: 28.800 ns/op
Iteration   1: 28.753 ns/op
Iteration   2: 28.801 ns/op
Iteration   3: 28.780 ns/op
Iteration   4: 28.713 ns/op
Iteration   5: 28.765 ns/op

# Run progress: 79.42% complete, ETA 00:22:38
# Fork: 2 of 2
# Warmup Iteration   1: 29.835 ns/op
# Warmup Iteration   2: 30.404 ns/op
# Warmup Iteration   3: 28.810 ns/op
# Warmup Iteration   4: 28.828 ns/op
# Warmup Iteration   5: 28.789 ns/op
Iteration   1: 28.760 ns/op
Iteration   2: 28.779 ns/op
Iteration   3: 28.811 ns/op
Iteration   4: 28.633 ns/op
Iteration   5: 28.711 ns/op


Result "fastMathCos":
  28.751 ±(99.9%) 0.080 ns/op [Average]
  (min, avg, max) = (28.633, 28.751, 28.811), stdev = 0.053
  CI (99.9%): [28.671, 28.830] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 85, b = 10)

# Run progress: 79.59% complete, ETA 00:22:27
# Fork: 1 of 2
# Warmup Iteration   1: 30.111 ns/op
# Warmup Iteration   2: 30.074 ns/op
# Warmup Iteration   3: 28.762 ns/op
# Warmup Iteration   4: 28.733 ns/op
# Warmup Iteration   5: 28.725 ns/op
Iteration   1: 28.878 ns/op
Iteration   2: 28.754 ns/op
Iteration   3: 28.797 ns/op
Iteration   4: 28.789 ns/op
Iteration   5: 28.947 ns/op

# Run progress: 79.76% complete, ETA 00:22:16
# Fork: 2 of 2
# Warmup Iteration   1: 29.612 ns/op
# Warmup Iteration   2: 30.444 ns/op
# Warmup Iteration   3: 28.788 ns/op
# Warmup Iteration   4: 28.811 ns/op
# Warmup Iteration   5: 28.822 ns/op
Iteration   1: 28.851 ns/op
Iteration   2: 28.760 ns/op
Iteration   3: 28.798 ns/op
Iteration   4: 28.754 ns/op
Iteration   5: 28.793 ns/op


Result "fastMathCos":
  28.812 ±(99.9%) 0.094 ns/op [Average]
  (min, avg, max) = (28.754, 28.812, 28.947), stdev = 0.062
  CI (99.9%): [28.718, 28.906] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 85, b = 100)

# Run progress: 79.93% complete, ETA 00:22:04
# Fork: 1 of 2
# Warmup Iteration   1: 31.277 ns/op
# Warmup Iteration   2: 30.474 ns/op
# Warmup Iteration   3: 30.099 ns/op
# Warmup Iteration   4: 30.212 ns/op
# Warmup Iteration   5: 30.232 ns/op
Iteration   1: 30.160 ns/op
Iteration   2: 30.165 ns/op
Iteration   3: 30.125 ns/op
Iteration   4: 29.999 ns/op
Iteration   5: 30.029 ns/op

# Run progress: 80.10% complete, ETA 00:21:53
# Fork: 2 of 2
# Warmup Iteration   1: 29.910 ns/op
# Warmup Iteration   2: 30.680 ns/op
# Warmup Iteration   3: 28.806 ns/op
# Warmup Iteration   4: 28.856 ns/op
# Warmup Iteration   5: 28.788 ns/op
Iteration   1: 28.783 ns/op
Iteration   2: 28.862 ns/op
Iteration   3: 28.829 ns/op
Iteration   4: 28.786 ns/op
Iteration   5: 28.806 ns/op


Result "fastMathCos":
  29.454 ±(99.9%) 1.026 ns/op [Average]
  (min, avg, max) = (28.783, 29.454, 30.165), stdev = 0.678
  CI (99.9%): [28.429, 30.480] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 85, b = 1000)

# Run progress: 80.27% complete, ETA 00:21:42
# Fork: 1 of 2
# Warmup Iteration   1: 29.857 ns/op
# Warmup Iteration   2: 30.440 ns/op
# Warmup Iteration   3: 28.821 ns/op
# Warmup Iteration   4: 28.854 ns/op
# Warmup Iteration   5: 28.848 ns/op
Iteration   1: 28.822 ns/op
Iteration   2: 28.819 ns/op
Iteration   3: 28.836 ns/op
Iteration   4: 28.859 ns/op
Iteration   5: 28.850 ns/op

# Run progress: 80.44% complete, ETA 00:21:31
# Fork: 2 of 2
# Warmup Iteration   1: 29.862 ns/op
# Warmup Iteration   2: 29.998 ns/op
# Warmup Iteration   3: 29.021 ns/op
# Warmup Iteration   4: 28.919 ns/op
# Warmup Iteration   5: 29.043 ns/op
Iteration   1: 28.997 ns/op
Iteration   2: 29.110 ns/op
Iteration   3: 28.993 ns/op
Iteration   4: 28.946 ns/op
Iteration   5: 28.976 ns/op


Result "fastMathCos":
  28.921 ±(99.9%) 0.148 ns/op [Average]
  (min, avg, max) = (28.819, 28.921, 29.110), stdev = 0.098
  CI (99.9%): [28.773, 29.069] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 85, b = 10000)

# Run progress: 80.61% complete, ETA 00:21:20
# Fork: 1 of 2
# Warmup Iteration   1: 29.674 ns/op
# Warmup Iteration   2: 30.434 ns/op
# Warmup Iteration   3: 28.768 ns/op
# Warmup Iteration   4: 28.768 ns/op
# Warmup Iteration   5: 28.774 ns/op
Iteration   1: 28.807 ns/op
Iteration   2: 28.809 ns/op
Iteration   3: 28.783 ns/op
Iteration   4: 28.866 ns/op
Iteration   5: 28.869 ns/op

# Run progress: 80.78% complete, ETA 00:21:08
# Fork: 2 of 2
# Warmup Iteration   1: 30.105 ns/op
# Warmup Iteration   2: 30.494 ns/op
# Warmup Iteration   3: 28.822 ns/op
# Warmup Iteration   4: 28.762 ns/op
# Warmup Iteration   5: 28.780 ns/op
Iteration   1: 28.790 ns/op
Iteration   2: 28.751 ns/op
Iteration   3: 28.796 ns/op
Iteration   4: 28.743 ns/op
Iteration   5: 28.822 ns/op


Result "fastMathCos":
  28.803 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (28.743, 28.803, 28.869), stdev = 0.042
  CI (99.9%): [28.740, 28.867] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 90, b = 0.5)

# Run progress: 80.95% complete, ETA 00:20:57
# Fork: 1 of 2
# Warmup Iteration   1: 30.894 ns/op
# Warmup Iteration   2: 30.834 ns/op
# Warmup Iteration   3: 29.083 ns/op
# Warmup Iteration   4: 29.148 ns/op
# Warmup Iteration   5: 29.128 ns/op
Iteration   1: 29.099 ns/op
Iteration   2: 29.078 ns/op
Iteration   3: 29.092 ns/op
Iteration   4: 28.722 ns/op
Iteration   5: 28.773 ns/op

# Run progress: 81.12% complete, ETA 00:20:46
# Fork: 2 of 2
# Warmup Iteration   1: 30.877 ns/op
# Warmup Iteration   2: 30.775 ns/op
# Warmup Iteration   3: 28.824 ns/op
# Warmup Iteration   4: 28.717 ns/op
# Warmup Iteration   5: 28.758 ns/op
Iteration   1: 28.821 ns/op
Iteration   2: 28.742 ns/op
Iteration   3: 28.720 ns/op
Iteration   4: 28.716 ns/op
Iteration   5: 28.802 ns/op


Result "fastMathCos":
  28.856 ±(99.9%) 0.249 ns/op [Average]
  (min, avg, max) = (28.716, 28.856, 29.099), stdev = 0.165
  CI (99.9%): [28.607, 29.105] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 90, b = 1)

# Run progress: 81.29% complete, ETA 00:20:35
# Fork: 1 of 2
# Warmup Iteration   1: 30.849 ns/op
# Warmup Iteration   2: 31.052 ns/op
# Warmup Iteration   3: 30.217 ns/op
# Warmup Iteration   4: 30.278 ns/op
# Warmup Iteration   5: 30.273 ns/op
Iteration   1: 30.227 ns/op
Iteration   2: 30.332 ns/op
Iteration   3: 30.277 ns/op
Iteration   4: 30.254 ns/op
Iteration   5: 29.646 ns/op

# Run progress: 81.46% complete, ETA 00:20:23
# Fork: 2 of 2
# Warmup Iteration   1: 30.729 ns/op
# Warmup Iteration   2: 30.790 ns/op
# Warmup Iteration   3: 28.739 ns/op
# Warmup Iteration   4: 28.809 ns/op
# Warmup Iteration   5: 28.657 ns/op
Iteration   1: 28.761 ns/op
Iteration   2: 28.716 ns/op
Iteration   3: 28.719 ns/op
Iteration   4: 28.694 ns/op
Iteration   5: 29.513 ns/op


Result "fastMathCos":
  29.514 ±(99.9%) 1.108 ns/op [Average]
  (min, avg, max) = (28.694, 29.514, 30.332), stdev = 0.733
  CI (99.9%): [28.406, 30.622] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 90, b = 5)

# Run progress: 81.63% complete, ETA 00:20:12
# Fork: 1 of 2
# Warmup Iteration   1: 30.882 ns/op
# Warmup Iteration   2: 30.839 ns/op
# Warmup Iteration   3: 29.152 ns/op
# Warmup Iteration   4: 29.133 ns/op
# Warmup Iteration   5: 29.125 ns/op
Iteration   1: 29.094 ns/op
Iteration   2: 29.089 ns/op
Iteration   3: 29.084 ns/op
Iteration   4: 29.144 ns/op
Iteration   5: 29.088 ns/op

# Run progress: 81.80% complete, ETA 00:20:01
# Fork: 2 of 2
# Warmup Iteration   1: 30.873 ns/op
# Warmup Iteration   2: 30.868 ns/op
# Warmup Iteration   3: 28.779 ns/op
# Warmup Iteration   4: 28.928 ns/op
# Warmup Iteration   5: 28.824 ns/op
Iteration   1: 28.775 ns/op
Iteration   2: 28.816 ns/op
Iteration   3: 28.806 ns/op
Iteration   4: 28.843 ns/op
Iteration   5: 28.840 ns/op


Result "fastMathCos":
  28.958 ±(99.9%) 0.229 ns/op [Average]
  (min, avg, max) = (28.775, 28.958, 29.144), stdev = 0.152
  CI (99.9%): [28.729, 29.187] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 90, b = 10)

# Run progress: 81.97% complete, ETA 00:19:50
# Fork: 1 of 2
# Warmup Iteration   1: 30.906 ns/op
# Warmup Iteration   2: 30.806 ns/op
# Warmup Iteration   3: 29.419 ns/op
# Warmup Iteration   4: 29.459 ns/op
# Warmup Iteration   5: 29.506 ns/op
Iteration   1: 29.436 ns/op
Iteration   2: 29.409 ns/op
Iteration   3: 29.500 ns/op
Iteration   4: 28.772 ns/op
Iteration   5: 28.831 ns/op

# Run progress: 82.14% complete, ETA 00:19:39
# Fork: 2 of 2
# Warmup Iteration   1: 30.993 ns/op
# Warmup Iteration   2: 30.880 ns/op
# Warmup Iteration   3: 29.172 ns/op
# Warmup Iteration   4: 29.221 ns/op
# Warmup Iteration   5: 29.113 ns/op
Iteration   1: 29.102 ns/op
Iteration   2: 29.232 ns/op
Iteration   3: 29.223 ns/op
Iteration   4: 28.871 ns/op
Iteration   5: 28.781 ns/op


Result "fastMathCos":
  29.116 ±(99.9%) 0.431 ns/op [Average]
  (min, avg, max) = (28.772, 29.116, 29.500), stdev = 0.285
  CI (99.9%): [28.684, 29.547] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 90, b = 100)

# Run progress: 82.31% complete, ETA 00:19:27
# Fork: 1 of 2
# Warmup Iteration   1: 30.893 ns/op
# Warmup Iteration   2: 30.940 ns/op
# Warmup Iteration   3: 29.047 ns/op
# Warmup Iteration   4: 29.067 ns/op
# Warmup Iteration   5: 29.104 ns/op
Iteration   1: 29.134 ns/op
Iteration   2: 29.080 ns/op
Iteration   3: 29.081 ns/op
Iteration   4: 28.686 ns/op
Iteration   5: 28.702 ns/op

# Run progress: 82.48% complete, ETA 00:19:16
# Fork: 2 of 2
# Warmup Iteration   1: 30.926 ns/op
# Warmup Iteration   2: 30.916 ns/op
# Warmup Iteration   3: 28.813 ns/op
# Warmup Iteration   4: 28.824 ns/op
# Warmup Iteration   5: 28.886 ns/op
Iteration   1: 28.818 ns/op
Iteration   2: 28.926 ns/op
Iteration   3: 28.783 ns/op
Iteration   4: 29.109 ns/op
Iteration   5: 29.147 ns/op


Result "fastMathCos":
  28.947 ±(99.9%) 0.280 ns/op [Average]
  (min, avg, max) = (28.686, 28.947, 29.147), stdev = 0.185
  CI (99.9%): [28.666, 29.227] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 90, b = 1000)

# Run progress: 82.65% complete, ETA 00:19:05
# Fork: 1 of 2
# Warmup Iteration   1: 30.850 ns/op
# Warmup Iteration   2: 30.792 ns/op
# Warmup Iteration   3: 28.732 ns/op
# Warmup Iteration   4: 28.841 ns/op
# Warmup Iteration   5: 28.772 ns/op
Iteration   1: 28.754 ns/op
Iteration   2: 28.838 ns/op
Iteration   3: 28.732 ns/op
Iteration   4: 28.832 ns/op
Iteration   5: 29.109 ns/op

# Run progress: 82.82% complete, ETA 00:18:54
# Fork: 2 of 2
# Warmup Iteration   1: 30.971 ns/op
# Warmup Iteration   2: 30.831 ns/op
# Warmup Iteration   3: 28.780 ns/op
# Warmup Iteration   4: 28.838 ns/op
# Warmup Iteration   5: 28.820 ns/op
Iteration   1: 28.829 ns/op
Iteration   2: 28.814 ns/op
Iteration   3: 28.809 ns/op
Iteration   4: 28.860 ns/op
Iteration   5: 28.792 ns/op


Result "fastMathCos":
  28.837 ±(99.9%) 0.156 ns/op [Average]
  (min, avg, max) = (28.732, 28.837, 29.109), stdev = 0.103
  CI (99.9%): [28.681, 28.993] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathCos
# Parameters: (a = 90, b = 10000)

# Run progress: 82.99% complete, ETA 00:18:42
# Fork: 1 of 2
# Warmup Iteration   1: 30.894 ns/op
# Warmup Iteration   2: 30.777 ns/op
# Warmup Iteration   3: 28.856 ns/op
# Warmup Iteration   4: 28.825 ns/op
# Warmup Iteration   5: 28.750 ns/op
Iteration   1: 28.967 ns/op
Iteration   2: 28.715 ns/op
Iteration   3: 28.718 ns/op
Iteration   4: 28.713 ns/op
Iteration   5: 28.689 ns/op

# Run progress: 83.16% complete, ETA 00:18:31
# Fork: 2 of 2
# Warmup Iteration   1: 31.034 ns/op
# Warmup Iteration   2: 31.009 ns/op
# Warmup Iteration   3: 28.831 ns/op
# Warmup Iteration   4: 28.782 ns/op
# Warmup Iteration   5: 28.821 ns/op
Iteration   1: 28.790 ns/op
Iteration   2: 28.799 ns/op
Iteration   3: 28.776 ns/op
Iteration   4: 28.766 ns/op
Iteration   5: 29.122 ns/op


Result "fastMathCos":
  28.805 ±(99.9%) 0.206 ns/op [Average]
  (min, avg, max) = (28.689, 28.805, 29.122), stdev = 0.136
  CI (99.9%): [28.600, 29.011] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 0, b = 0.5)

# Run progress: 83.33% complete, ETA 00:18:20
# Fork: 1 of 2
# Warmup Iteration   1: 47.173 ns/op
# Warmup Iteration   2: 46.991 ns/op
# Warmup Iteration   3: 46.471 ns/op
# Warmup Iteration   4: 46.558 ns/op
# Warmup Iteration   5: 46.491 ns/op
Iteration   1: 46.446 ns/op
Iteration   2: 46.547 ns/op
Iteration   3: 46.522 ns/op
Iteration   4: 46.271 ns/op
Iteration   5: 46.182 ns/op

# Run progress: 83.50% complete, ETA 00:18:09
# Fork: 2 of 2
# Warmup Iteration   1: 47.186 ns/op
# Warmup Iteration   2: 47.054 ns/op
# Warmup Iteration   3: 45.908 ns/op
# Warmup Iteration   4: 45.897 ns/op
# Warmup Iteration   5: 45.912 ns/op
Iteration   1: 45.864 ns/op
Iteration   2: 45.946 ns/op
Iteration   3: 46.008 ns/op
Iteration   4: 45.951 ns/op
Iteration   5: 46.492 ns/op


Result "fastMathSin":
  46.223 ±(99.9%) 0.405 ns/op [Average]
  (min, avg, max) = (45.864, 46.223, 46.547), stdev = 0.268
  CI (99.9%): [45.818, 46.628] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 0, b = 1)

# Run progress: 83.67% complete, ETA 00:17:57
# Fork: 1 of 2
# Warmup Iteration   1: 47.255 ns/op
# Warmup Iteration   2: 46.974 ns/op
# Warmup Iteration   3: 46.706 ns/op
# Warmup Iteration   4: 46.675 ns/op
# Warmup Iteration   5: 46.803 ns/op
Iteration   1: 46.632 ns/op
Iteration   2: 46.642 ns/op
Iteration   3: 46.706 ns/op
Iteration   4: 46.247 ns/op
Iteration   5: 46.268 ns/op

# Run progress: 83.84% complete, ETA 00:17:46
# Fork: 2 of 2
# Warmup Iteration   1: 47.131 ns/op
# Warmup Iteration   2: 46.979 ns/op
# Warmup Iteration   3: 46.644 ns/op
# Warmup Iteration   4: 46.673 ns/op
# Warmup Iteration   5: 46.583 ns/op
Iteration   1: 46.611 ns/op
Iteration   2: 46.542 ns/op
Iteration   3: 46.576 ns/op
Iteration   4: 46.639 ns/op
Iteration   5: 46.201 ns/op


Result "fastMathSin":
  46.506 ±(99.9%) 0.288 ns/op [Average]
  (min, avg, max) = (46.201, 46.506, 46.706), stdev = 0.190
  CI (99.9%): [46.218, 46.794] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 0, b = 5)

# Run progress: 84.01% complete, ETA 00:17:35
# Fork: 1 of 2
# Warmup Iteration   1: 47.090 ns/op
# Warmup Iteration   2: 47.099 ns/op
# Warmup Iteration   3: 46.117 ns/op
# Warmup Iteration   4: 46.106 ns/op
# Warmup Iteration   5: 46.100 ns/op
Iteration   1: 46.177 ns/op
Iteration   2: 46.134 ns/op
Iteration   3: 46.040 ns/op
Iteration   4: 46.531 ns/op
Iteration   5: 46.501 ns/op

# Run progress: 84.18% complete, ETA 00:17:24
# Fork: 2 of 2
# Warmup Iteration   1: 47.211 ns/op
# Warmup Iteration   2: 46.921 ns/op
# Warmup Iteration   3: 46.241 ns/op
# Warmup Iteration   4: 46.173 ns/op
# Warmup Iteration   5: 46.168 ns/op
Iteration   1: 46.190 ns/op
Iteration   2: 46.218 ns/op
Iteration   3: 46.161 ns/op
Iteration   4: 46.196 ns/op
Iteration   5: 46.456 ns/op


Result "fastMathSin":
  46.260 ±(99.9%) 0.258 ns/op [Average]
  (min, avg, max) = (46.040, 46.260, 46.531), stdev = 0.171
  CI (99.9%): [46.002, 46.518] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 0, b = 10)

# Run progress: 84.35% complete, ETA 00:17:13
# Fork: 1 of 2
# Warmup Iteration   1: 47.147 ns/op
# Warmup Iteration   2: 46.989 ns/op
# Warmup Iteration   3: 46.340 ns/op
# Warmup Iteration   4: 46.287 ns/op
# Warmup Iteration   5: 46.344 ns/op
Iteration   1: 46.258 ns/op
Iteration   2: 46.227 ns/op
Iteration   3: 46.266 ns/op
Iteration   4: 46.965 ns/op
Iteration   5: 46.857 ns/op

# Run progress: 84.52% complete, ETA 00:17:01
# Fork: 2 of 2
# Warmup Iteration   1: 47.149 ns/op
# Warmup Iteration   2: 47.140 ns/op
# Warmup Iteration   3: 46.583 ns/op
# Warmup Iteration   4: 46.643 ns/op
# Warmup Iteration   5: 46.538 ns/op
Iteration   1: 46.656 ns/op
Iteration   2: 46.587 ns/op
Iteration   3: 46.645 ns/op
Iteration   4: 46.110 ns/op
Iteration   5: 46.156 ns/op


Result "fastMathSin":
  46.473 ±(99.9%) 0.464 ns/op [Average]
  (min, avg, max) = (46.110, 46.473, 46.965), stdev = 0.307
  CI (99.9%): [46.009, 46.937] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 0, b = 100)

# Run progress: 84.69% complete, ETA 00:16:50
# Fork: 1 of 2
# Warmup Iteration   1: 47.284 ns/op
# Warmup Iteration   2: 46.902 ns/op
# Warmup Iteration   3: 46.483 ns/op
# Warmup Iteration   4: 46.488 ns/op
# Warmup Iteration   5: 46.525 ns/op
Iteration   1: 46.453 ns/op
Iteration   2: 46.554 ns/op
Iteration   3: 46.532 ns/op
Iteration   4: 46.685 ns/op
Iteration   5: 46.954 ns/op

# Run progress: 84.86% complete, ETA 00:16:39
# Fork: 2 of 2
# Warmup Iteration   1: 47.238 ns/op
# Warmup Iteration   2: 47.064 ns/op
# Warmup Iteration   3: 46.318 ns/op
# Warmup Iteration   4: 46.258 ns/op
# Warmup Iteration   5: 46.200 ns/op
Iteration   1: 46.370 ns/op
Iteration   2: 46.235 ns/op
Iteration   3: 46.336 ns/op
Iteration   4: 46.503 ns/op
Iteration   5: 46.550 ns/op


Result "fastMathSin":
  46.517 ±(99.9%) 0.302 ns/op [Average]
  (min, avg, max) = (46.235, 46.517, 46.954), stdev = 0.200
  CI (99.9%): [46.215, 46.820] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 0, b = 1000)

# Run progress: 85.03% complete, ETA 00:16:28
# Fork: 1 of 2
# Warmup Iteration   1: 47.243 ns/op
# Warmup Iteration   2: 46.963 ns/op
# Warmup Iteration   3: 46.736 ns/op
# Warmup Iteration   4: 46.714 ns/op
# Warmup Iteration   5: 46.624 ns/op
Iteration   1: 46.664 ns/op
Iteration   2: 46.636 ns/op
Iteration   3: 46.624 ns/op
Iteration   4: 46.630 ns/op
Iteration   5: 46.707 ns/op

# Run progress: 85.20% complete, ETA 00:16:16
# Fork: 2 of 2
# Warmup Iteration   1: 47.109 ns/op
# Warmup Iteration   2: 47.003 ns/op
# Warmup Iteration   3: 46.196 ns/op
# Warmup Iteration   4: 46.157 ns/op
# Warmup Iteration   5: 46.233 ns/op
Iteration   1: 46.209 ns/op
Iteration   2: 46.322 ns/op
Iteration   3: 46.251 ns/op
Iteration   4: 46.234 ns/op
Iteration   5: 46.503 ns/op


Result "fastMathSin":
  46.478 ±(99.9%) 0.304 ns/op [Average]
  (min, avg, max) = (46.209, 46.478, 46.707), stdev = 0.201
  CI (99.9%): [46.174, 46.782] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 0, b = 10000)

# Run progress: 85.37% complete, ETA 00:16:05
# Fork: 1 of 2
# Warmup Iteration   1: 47.160 ns/op
# Warmup Iteration   2: 46.953 ns/op
# Warmup Iteration   3: 46.619 ns/op
# Warmup Iteration   4: 46.670 ns/op
# Warmup Iteration   5: 46.571 ns/op
Iteration   1: 46.718 ns/op
Iteration   2: 46.557 ns/op
Iteration   3: 46.624 ns/op
Iteration   4: 46.199 ns/op
Iteration   5: 46.230 ns/op

# Run progress: 85.54% complete, ETA 00:15:54
# Fork: 2 of 2
# Warmup Iteration   1: 47.290 ns/op
# Warmup Iteration   2: 47.112 ns/op
# Warmup Iteration   3: 46.181 ns/op
# Warmup Iteration   4: 46.201 ns/op
# Warmup Iteration   5: 46.254 ns/op
Iteration   1: 46.221 ns/op
Iteration   2: 46.237 ns/op
Iteration   3: 46.247 ns/op
Iteration   4: 46.220 ns/op
Iteration   5: 46.533 ns/op


Result "fastMathSin":
  46.379 ±(99.9%) 0.308 ns/op [Average]
  (min, avg, max) = (46.199, 46.379, 46.718), stdev = 0.204
  CI (99.9%): [46.071, 46.686] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 5, b = 0.5)

# Run progress: 85.71% complete, ETA 00:15:43
# Fork: 1 of 2
# Warmup Iteration   1: 29.814 ns/op
# Warmup Iteration   2: 29.647 ns/op
# Warmup Iteration   3: 28.763 ns/op
# Warmup Iteration   4: 28.811 ns/op
# Warmup Iteration   5: 28.905 ns/op
Iteration   1: 28.884 ns/op
Iteration   2: 28.853 ns/op
Iteration   3: 28.821 ns/op
Iteration   4: 28.850 ns/op
Iteration   5: 28.596 ns/op

# Run progress: 85.88% complete, ETA 00:15:31
# Fork: 2 of 2
# Warmup Iteration   1: 30.100 ns/op
# Warmup Iteration   2: 29.818 ns/op
# Warmup Iteration   3: 29.085 ns/op
# Warmup Iteration   4: 29.099 ns/op
# Warmup Iteration   5: 28.943 ns/op
Iteration   1: 29.016 ns/op
Iteration   2: 29.086 ns/op
Iteration   3: 29.075 ns/op
Iteration   4: 29.100 ns/op
Iteration   5: 29.049 ns/op


Result "fastMathSin":
  28.933 ±(99.9%) 0.243 ns/op [Average]
  (min, avg, max) = (28.596, 28.933, 29.100), stdev = 0.161
  CI (99.9%): [28.689, 29.176] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 5, b = 1)

# Run progress: 86.05% complete, ETA 00:15:20
# Fork: 1 of 2
# Warmup Iteration   1: 30.035 ns/op
# Warmup Iteration   2: 29.747 ns/op
# Warmup Iteration   3: 28.560 ns/op
# Warmup Iteration   4: 28.509 ns/op
# Warmup Iteration   5: 28.513 ns/op
Iteration   1: 28.574 ns/op
Iteration   2: 28.561 ns/op
Iteration   3: 28.499 ns/op
Iteration   4: 28.659 ns/op
Iteration   5: 28.697 ns/op

# Run progress: 86.22% complete, ETA 00:15:09
# Fork: 2 of 2
# Warmup Iteration   1: 29.826 ns/op
# Warmup Iteration   2: 29.889 ns/op
# Warmup Iteration   3: 28.736 ns/op
# Warmup Iteration   4: 28.839 ns/op
# Warmup Iteration   5: 28.715 ns/op
Iteration   1: 28.825 ns/op
Iteration   2: 28.761 ns/op
Iteration   3: 28.758 ns/op
Iteration   4: 28.783 ns/op
Iteration   5: 28.875 ns/op


Result "fastMathSin":
  28.699 ±(99.9%) 0.187 ns/op [Average]
  (min, avg, max) = (28.499, 28.699, 28.875), stdev = 0.124
  CI (99.9%): [28.512, 28.886] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 5, b = 5)

# Run progress: 86.39% complete, ETA 00:14:58
# Fork: 1 of 2
# Warmup Iteration   1: 29.835 ns/op
# Warmup Iteration   2: 29.780 ns/op
# Warmup Iteration   3: 28.883 ns/op
# Warmup Iteration   4: 28.859 ns/op
# Warmup Iteration   5: 28.939 ns/op
Iteration   1: 28.870 ns/op
Iteration   2: 28.975 ns/op
Iteration   3: 28.876 ns/op
Iteration   4: 28.962 ns/op
Iteration   5: 28.844 ns/op

# Run progress: 86.56% complete, ETA 00:14:47
# Fork: 2 of 2
# Warmup Iteration   1: 30.773 ns/op
# Warmup Iteration   2: 30.787 ns/op
# Warmup Iteration   3: 30.326 ns/op
# Warmup Iteration   4: 30.362 ns/op
# Warmup Iteration   5: 30.313 ns/op
Iteration   1: 30.392 ns/op
Iteration   2: 30.370 ns/op
Iteration   3: 30.366 ns/op
Iteration   4: 30.410 ns/op
Iteration   5: 29.009 ns/op


Result "fastMathSin":
  29.507 ±(99.9%) 1.144 ns/op [Average]
  (min, avg, max) = (28.844, 29.507, 30.410), stdev = 0.757
  CI (99.9%): [28.364, 30.651] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 5, b = 10)

# Run progress: 86.73% complete, ETA 00:14:35
# Fork: 1 of 2
# Warmup Iteration   1: 29.796 ns/op
# Warmup Iteration   2: 29.666 ns/op
# Warmup Iteration   3: 28.588 ns/op
# Warmup Iteration   4: 28.541 ns/op
# Warmup Iteration   5: 28.512 ns/op
Iteration   1: 28.524 ns/op
Iteration   2: 28.548 ns/op
Iteration   3: 28.558 ns/op
Iteration   4: 28.572 ns/op
Iteration   5: 28.858 ns/op

# Run progress: 86.90% complete, ETA 00:14:24
# Fork: 2 of 2
# Warmup Iteration   1: 29.927 ns/op
# Warmup Iteration   2: 29.716 ns/op
# Warmup Iteration   3: 29.365 ns/op
# Warmup Iteration   4: 29.293 ns/op
# Warmup Iteration   5: 29.271 ns/op
Iteration   1: 29.296 ns/op
Iteration   2: 29.272 ns/op
Iteration   3: 29.301 ns/op
Iteration   4: 29.039 ns/op
Iteration   5: 28.948 ns/op


Result "fastMathSin":
  28.892 ±(99.9%) 0.496 ns/op [Average]
  (min, avg, max) = (28.524, 28.892, 29.301), stdev = 0.328
  CI (99.9%): [28.396, 29.387] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 5, b = 100)

# Run progress: 87.07% complete, ETA 00:14:13
# Fork: 1 of 2
# Warmup Iteration   1: 29.815 ns/op
# Warmup Iteration   2: 29.744 ns/op
# Warmup Iteration   3: 28.876 ns/op
# Warmup Iteration   4: 28.978 ns/op
# Warmup Iteration   5: 28.970 ns/op
Iteration   1: 28.923 ns/op
Iteration   2: 28.861 ns/op
Iteration   3: 28.917 ns/op
Iteration   4: 28.842 ns/op
Iteration   5: 28.753 ns/op

# Run progress: 87.24% complete, ETA 00:14:02
# Fork: 2 of 2
# Warmup Iteration   1: 29.775 ns/op
# Warmup Iteration   2: 29.667 ns/op
# Warmup Iteration   3: 29.037 ns/op
# Warmup Iteration   4: 29.072 ns/op
# Warmup Iteration   5: 29.081 ns/op
Iteration   1: 28.988 ns/op
Iteration   2: 29.045 ns/op
Iteration   3: 29.052 ns/op
Iteration   4: 29.042 ns/op
Iteration   5: 29.171 ns/op


Result "fastMathSin":
  28.959 ±(99.9%) 0.187 ns/op [Average]
  (min, avg, max) = (28.753, 28.959, 29.171), stdev = 0.124
  CI (99.9%): [28.773, 29.146] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 5, b = 1000)

# Run progress: 87.41% complete, ETA 00:13:50
# Fork: 1 of 2
# Warmup Iteration   1: 29.908 ns/op
# Warmup Iteration   2: 30.058 ns/op
# Warmup Iteration   3: 28.783 ns/op
# Warmup Iteration   4: 28.771 ns/op
# Warmup Iteration   5: 28.786 ns/op
Iteration   1: 28.838 ns/op
Iteration   2: 28.779 ns/op
Iteration   3: 28.858 ns/op
Iteration   4: 29.026 ns/op
Iteration   5: 28.994 ns/op

# Run progress: 87.59% complete, ETA 00:13:39
# Fork: 2 of 2
# Warmup Iteration   1: 29.873 ns/op
# Warmup Iteration   2: 29.747 ns/op
# Warmup Iteration   3: 28.760 ns/op
# Warmup Iteration   4: 28.678 ns/op
# Warmup Iteration   5: 28.729 ns/op
Iteration   1: 28.653 ns/op
Iteration   2: 28.703 ns/op
Iteration   3: 28.741 ns/op
Iteration   4: 28.715 ns/op
Iteration   5: 28.886 ns/op


Result "fastMathSin":
  28.819 ±(99.9%) 0.188 ns/op [Average]
  (min, avg, max) = (28.653, 28.819, 29.026), stdev = 0.124
  CI (99.9%): [28.631, 29.008] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 5, b = 10000)

# Run progress: 87.76% complete, ETA 00:13:28
# Fork: 1 of 2
# Warmup Iteration   1: 29.971 ns/op
# Warmup Iteration   2: 29.958 ns/op
# Warmup Iteration   3: 28.808 ns/op
# Warmup Iteration   4: 28.931 ns/op
# Warmup Iteration   5: 28.885 ns/op
Iteration   1: 28.925 ns/op
Iteration   2: 28.852 ns/op
Iteration   3: 28.910 ns/op
Iteration   4: 28.912 ns/op
Iteration   5: 28.948 ns/op

# Run progress: 87.93% complete, ETA 00:13:17
# Fork: 2 of 2
# Warmup Iteration   1: 29.757 ns/op
# Warmup Iteration   2: 30.025 ns/op
# Warmup Iteration   3: 29.486 ns/op
# Warmup Iteration   4: 29.373 ns/op
# Warmup Iteration   5: 29.434 ns/op
Iteration   1: 29.333 ns/op
Iteration   2: 29.363 ns/op
Iteration   3: 29.387 ns/op
Iteration   4: 28.626 ns/op
Iteration   5: 28.567 ns/op


Result "fastMathSin":
  28.982 ±(99.9%) 0.440 ns/op [Average]
  (min, avg, max) = (28.567, 28.982, 29.387), stdev = 0.291
  CI (99.9%): [28.542, 29.423] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 30, b = 0.5)

# Run progress: 88.10% complete, ETA 00:13:06
# Fork: 1 of 2
# Warmup Iteration   1: 29.809 ns/op
# Warmup Iteration   2: 29.888 ns/op
# Warmup Iteration   3: 28.909 ns/op
# Warmup Iteration   4: 28.973 ns/op
# Warmup Iteration   5: 28.916 ns/op
Iteration   1: 28.894 ns/op
Iteration   2: 28.948 ns/op
Iteration   3: 28.903 ns/op
Iteration   4: 28.711 ns/op
Iteration   5: 28.781 ns/op

# Run progress: 88.27% complete, ETA 00:12:54
# Fork: 2 of 2
# Warmup Iteration   1: 29.740 ns/op
# Warmup Iteration   2: 30.001 ns/op
# Warmup Iteration   3: 29.111 ns/op
# Warmup Iteration   4: 29.111 ns/op
# Warmup Iteration   5: 29.141 ns/op
Iteration   1: 29.083 ns/op
Iteration   2: 29.104 ns/op
Iteration   3: 29.077 ns/op
Iteration   4: 29.133 ns/op
Iteration   5: 28.864 ns/op


Result "fastMathSin":
  28.950 ±(99.9%) 0.219 ns/op [Average]
  (min, avg, max) = (28.711, 28.950, 29.133), stdev = 0.145
  CI (99.9%): [28.730, 29.169] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 30, b = 1)

# Run progress: 88.44% complete, ETA 00:12:43
# Fork: 1 of 2
# Warmup Iteration   1: 29.834 ns/op
# Warmup Iteration   2: 29.843 ns/op
# Warmup Iteration   3: 29.128 ns/op
# Warmup Iteration   4: 29.144 ns/op
# Warmup Iteration   5: 29.225 ns/op
Iteration   1: 29.148 ns/op
Iteration   2: 29.269 ns/op
Iteration   3: 29.139 ns/op
Iteration   4: 29.110 ns/op
Iteration   5: 30.289 ns/op

# Run progress: 88.61% complete, ETA 00:12:32
# Fork: 2 of 2
# Warmup Iteration   1: 29.868 ns/op
# Warmup Iteration   2: 29.645 ns/op
# Warmup Iteration   3: 28.941 ns/op
# Warmup Iteration   4: 28.892 ns/op
# Warmup Iteration   5: 28.981 ns/op
Iteration   1: 28.928 ns/op
Iteration   2: 28.892 ns/op
Iteration   3: 28.972 ns/op
Iteration   4: 28.992 ns/op
Iteration   5: 29.055 ns/op


Result "fastMathSin":
  29.179 ±(99.9%) 0.614 ns/op [Average]
  (min, avg, max) = (28.892, 29.179, 30.289), stdev = 0.406
  CI (99.9%): [28.565, 29.794] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 30, b = 5)

# Run progress: 88.78% complete, ETA 00:12:21
# Fork: 1 of 2
# Warmup Iteration   1: 29.842 ns/op
# Warmup Iteration   2: 29.939 ns/op
# Warmup Iteration   3: 28.935 ns/op
# Warmup Iteration   4: 28.884 ns/op
# Warmup Iteration   5: 28.872 ns/op
Iteration   1: 28.926 ns/op
Iteration   2: 28.879 ns/op
Iteration   3: 28.976 ns/op
Iteration   4: 29.093 ns/op
Iteration   5: 29.125 ns/op

# Run progress: 88.95% complete, ETA 00:12:09
# Fork: 2 of 2
# Warmup Iteration   1: 29.818 ns/op
# Warmup Iteration   2: 29.836 ns/op
# Warmup Iteration   3: 28.917 ns/op
# Warmup Iteration   4: 28.990 ns/op
# Warmup Iteration   5: 28.950 ns/op
Iteration   1: 28.989 ns/op
Iteration   2: 28.877 ns/op
Iteration   3: 28.907 ns/op
Iteration   4: 28.950 ns/op
Iteration   5: 28.706 ns/op


Result "fastMathSin":
  28.943 ±(99.9%) 0.178 ns/op [Average]
  (min, avg, max) = (28.706, 28.943, 29.125), stdev = 0.118
  CI (99.9%): [28.765, 29.121] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 30, b = 10)

# Run progress: 89.12% complete, ETA 00:11:58
# Fork: 1 of 2
# Warmup Iteration   1: 29.923 ns/op
# Warmup Iteration   2: 29.801 ns/op
# Warmup Iteration   3: 29.438 ns/op
# Warmup Iteration   4: 29.442 ns/op
# Warmup Iteration   5: 29.454 ns/op
Iteration   1: 29.486 ns/op
Iteration   2: 29.448 ns/op
Iteration   3: 29.454 ns/op
Iteration   4: 29.461 ns/op
Iteration   5: 29.099 ns/op

# Run progress: 89.29% complete, ETA 00:11:47
# Fork: 2 of 2
# Warmup Iteration   1: 29.874 ns/op
# Warmup Iteration   2: 30.213 ns/op
# Warmup Iteration   3: 29.426 ns/op
# Warmup Iteration   4: 29.391 ns/op
# Warmup Iteration   5: 29.448 ns/op
Iteration   1: 29.426 ns/op
Iteration   2: 29.445 ns/op
Iteration   3: 29.363 ns/op
Iteration   4: 29.387 ns/op
Iteration   5: 29.429 ns/op


Result "fastMathSin":
  29.400 ±(99.9%) 0.169 ns/op [Average]
  (min, avg, max) = (29.099, 29.400, 29.486), stdev = 0.112
  CI (99.9%): [29.231, 29.569] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 30, b = 100)

# Run progress: 89.46% complete, ETA 00:11:36
# Fork: 1 of 2
# Warmup Iteration   1: 29.857 ns/op
# Warmup Iteration   2: 30.052 ns/op
# Warmup Iteration   3: 28.928 ns/op
# Warmup Iteration   4: 28.878 ns/op
# Warmup Iteration   5: 28.901 ns/op
Iteration   1: 28.831 ns/op
Iteration   2: 28.811 ns/op
Iteration   3: 28.835 ns/op
Iteration   4: 28.697 ns/op
Iteration   5: 28.741 ns/op

# Run progress: 89.63% complete, ETA 00:11:24
# Fork: 2 of 2
# Warmup Iteration   1: 29.851 ns/op
# Warmup Iteration   2: 29.814 ns/op
# Warmup Iteration   3: 29.816 ns/op
# Warmup Iteration   4: 29.775 ns/op
# Warmup Iteration   5: 29.884 ns/op
Iteration   1: 29.779 ns/op
Iteration   2: 29.793 ns/op
Iteration   3: 29.814 ns/op
Iteration   4: 29.407 ns/op
Iteration   5: 29.375 ns/op


Result "fastMathSin":
  29.208 ±(99.9%) 0.716 ns/op [Average]
  (min, avg, max) = (28.697, 29.208, 29.814), stdev = 0.474
  CI (99.9%): [28.492, 29.925] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 30, b = 1000)

# Run progress: 89.80% complete, ETA 00:11:13
# Fork: 1 of 2
# Warmup Iteration   1: 29.787 ns/op
# Warmup Iteration   2: 29.651 ns/op
# Warmup Iteration   3: 28.842 ns/op
# Warmup Iteration   4: 28.899 ns/op
# Warmup Iteration   5: 28.897 ns/op
Iteration   1: 28.899 ns/op
Iteration   2: 28.804 ns/op
Iteration   3: 28.846 ns/op
Iteration   4: 28.899 ns/op
Iteration   5: 28.864 ns/op

# Run progress: 89.97% complete, ETA 00:11:02
# Fork: 2 of 2
# Warmup Iteration   1: 29.851 ns/op
# Warmup Iteration   2: 29.715 ns/op
# Warmup Iteration   3: 28.567 ns/op
# Warmup Iteration   4: 28.600 ns/op
# Warmup Iteration   5: 28.595 ns/op
Iteration   1: 28.554 ns/op
Iteration   2: 28.582 ns/op
Iteration   3: 28.586 ns/op
Iteration   4: 28.597 ns/op
Iteration   5: 28.740 ns/op


Result "fastMathSin":
  28.737 ±(99.9%) 0.216 ns/op [Average]
  (min, avg, max) = (28.554, 28.737, 28.899), stdev = 0.143
  CI (99.9%): [28.521, 28.953] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 30, b = 10000)

# Run progress: 90.14% complete, ETA 00:10:51
# Fork: 1 of 2
# Warmup Iteration   1: 30.799 ns/op
# Warmup Iteration   2: 30.655 ns/op
# Warmup Iteration   3: 30.483 ns/op
# Warmup Iteration   4: 30.464 ns/op
# Warmup Iteration   5: 30.399 ns/op
Iteration   1: 30.445 ns/op
Iteration   2: 30.409 ns/op
Iteration   3: 30.429 ns/op
Iteration   4: 29.488 ns/op
Iteration   5: 29.319 ns/op

# Run progress: 90.31% complete, ETA 00:10:40
# Fork: 2 of 2
# Warmup Iteration   1: 29.788 ns/op
# Warmup Iteration   2: 29.856 ns/op
# Warmup Iteration   3: 28.879 ns/op
# Warmup Iteration   4: 28.855 ns/op
# Warmup Iteration   5: 28.893 ns/op
Iteration   1: 28.923 ns/op
Iteration   2: 28.891 ns/op
Iteration   3: 28.786 ns/op
Iteration   4: 28.898 ns/op
Iteration   5: 28.835 ns/op


Result "fastMathSin":
  29.442 ±(99.9%) 1.081 ns/op [Average]
  (min, avg, max) = (28.786, 29.442, 30.445), stdev = 0.715
  CI (99.9%): [28.362, 30.523] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 45, b = 0.5)

# Run progress: 90.48% complete, ETA 00:10:28
# Fork: 1 of 2
# Warmup Iteration   1: 29.821 ns/op
# Warmup Iteration   2: 30.372 ns/op
# Warmup Iteration   3: 29.375 ns/op
# Warmup Iteration   4: 29.401 ns/op
# Warmup Iteration   5: 29.385 ns/op
Iteration   1: 29.371 ns/op
Iteration   2: 29.342 ns/op
Iteration   3: 29.382 ns/op
Iteration   4: 29.763 ns/op
Iteration   5: 29.746 ns/op

# Run progress: 90.65% complete, ETA 00:10:17
# Fork: 2 of 2
# Warmup Iteration   1: 29.774 ns/op
# Warmup Iteration   2: 29.862 ns/op
# Warmup Iteration   3: 28.771 ns/op
# Warmup Iteration   4: 28.780 ns/op
# Warmup Iteration   5: 28.733 ns/op
Iteration   1: 28.837 ns/op
Iteration   2: 28.721 ns/op
Iteration   3: 28.989 ns/op
Iteration   4: 29.276 ns/op
Iteration   5: 29.162 ns/op


Result "fastMathSin":
  29.259 ±(99.9%) 0.523 ns/op [Average]
  (min, avg, max) = (28.721, 29.259, 29.763), stdev = 0.346
  CI (99.9%): [28.736, 29.782] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 45, b = 1)

# Run progress: 90.82% complete, ETA 00:10:06
# Fork: 1 of 2
# Warmup Iteration   1: 29.803 ns/op
# Warmup Iteration   2: 29.792 ns/op
# Warmup Iteration   3: 29.160 ns/op
# Warmup Iteration   4: 29.176 ns/op
# Warmup Iteration   5: 29.146 ns/op
Iteration   1: 29.107 ns/op
Iteration   2: 29.107 ns/op
Iteration   3: 29.159 ns/op
Iteration   4: 28.834 ns/op
Iteration   5: 28.759 ns/op

# Run progress: 90.99% complete, ETA 00:09:55
# Fork: 2 of 2
# Warmup Iteration   1: 29.809 ns/op
# Warmup Iteration   2: 29.764 ns/op
# Warmup Iteration   3: 29.055 ns/op
# Warmup Iteration   4: 28.945 ns/op
# Warmup Iteration   5: 28.874 ns/op
Iteration   1: 28.889 ns/op
Iteration   2: 28.872 ns/op
Iteration   3: 28.888 ns/op
Iteration   4: 28.927 ns/op
Iteration   5: 28.642 ns/op


Result "fastMathSin":
  28.918 ±(99.9%) 0.248 ns/op [Average]
  (min, avg, max) = (28.642, 28.918, 29.159), stdev = 0.164
  CI (99.9%): [28.670, 29.166] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 45, b = 5)

# Run progress: 91.16% complete, ETA 00:09:43
# Fork: 1 of 2
# Warmup Iteration   1: 29.832 ns/op
# Warmup Iteration   2: 29.858 ns/op
# Warmup Iteration   3: 28.709 ns/op
# Warmup Iteration   4: 28.688 ns/op
# Warmup Iteration   5: 28.724 ns/op
Iteration   1: 28.705 ns/op
Iteration   2: 28.755 ns/op
Iteration   3: 28.696 ns/op
Iteration   4: 28.680 ns/op
Iteration   5: 28.776 ns/op

# Run progress: 91.33% complete, ETA 00:09:32
# Fork: 2 of 2
# Warmup Iteration   1: 29.487 ns/op
# Warmup Iteration   2: 30.384 ns/op
# Warmup Iteration   3: 28.816 ns/op
# Warmup Iteration   4: 28.857 ns/op
# Warmup Iteration   5: 28.887 ns/op
Iteration   1: 28.850 ns/op
Iteration   2: 28.793 ns/op
Iteration   3: 28.800 ns/op
Iteration   4: 28.693 ns/op
Iteration   5: 28.686 ns/op


Result "fastMathSin":
  28.743 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (28.680, 28.743, 28.850), stdev = 0.059
  CI (99.9%): [28.653, 28.833] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 45, b = 10)

# Run progress: 91.50% complete, ETA 00:09:21
# Fork: 1 of 2
# Warmup Iteration   1: 29.973 ns/op
# Warmup Iteration   2: 29.861 ns/op
# Warmup Iteration   3: 28.876 ns/op
# Warmup Iteration   4: 28.914 ns/op
# Warmup Iteration   5: 28.760 ns/op
Iteration   1: 28.943 ns/op
Iteration   2: 28.936 ns/op
Iteration   3: 28.847 ns/op
Iteration   4: 28.850 ns/op
Iteration   5: 28.787 ns/op

# Run progress: 91.67% complete, ETA 00:09:10
# Fork: 2 of 2
# Warmup Iteration   1: 30.089 ns/op
# Warmup Iteration   2: 29.762 ns/op
# Warmup Iteration   3: 28.741 ns/op
# Warmup Iteration   4: 28.737 ns/op
# Warmup Iteration   5: 28.724 ns/op
Iteration   1: 28.657 ns/op
Iteration   2: 28.676 ns/op
Iteration   3: 28.699 ns/op
Iteration   4: 28.677 ns/op
Iteration   5: 30.170 ns/op


Result "fastMathSin":
  28.924 ±(99.9%) 0.681 ns/op [Average]
  (min, avg, max) = (28.657, 28.924, 30.170), stdev = 0.451
  CI (99.9%): [28.243, 29.605] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 45, b = 100)

# Run progress: 91.84% complete, ETA 00:08:58
# Fork: 1 of 2
# Warmup Iteration   1: 29.854 ns/op
# Warmup Iteration   2: 30.081 ns/op
# Warmup Iteration   3: 28.833 ns/op
# Warmup Iteration   4: 28.922 ns/op
# Warmup Iteration   5: 28.841 ns/op
Iteration   1: 28.967 ns/op
Iteration   2: 28.788 ns/op
Iteration   3: 28.892 ns/op
Iteration   4: 28.878 ns/op
Iteration   5: 28.981 ns/op

# Run progress: 92.01% complete, ETA 00:08:47
# Fork: 2 of 2
# Warmup Iteration   1: 29.857 ns/op
# Warmup Iteration   2: 29.782 ns/op
# Warmup Iteration   3: 29.285 ns/op
# Warmup Iteration   4: 29.109 ns/op
# Warmup Iteration   5: 29.327 ns/op
Iteration   1: 29.315 ns/op
Iteration   2: 29.159 ns/op
Iteration   3: 29.223 ns/op
Iteration   4: 29.277 ns/op
Iteration   5: 29.260 ns/op


Result "fastMathSin":
  29.074 ±(99.9%) 0.293 ns/op [Average]
  (min, avg, max) = (28.788, 29.074, 29.315), stdev = 0.193
  CI (99.9%): [28.782, 29.367] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 45, b = 1000)

# Run progress: 92.18% complete, ETA 00:08:36
# Fork: 1 of 2
# Warmup Iteration   1: 29.707 ns/op
# Warmup Iteration   2: 29.776 ns/op
# Warmup Iteration   3: 29.660 ns/op
# Warmup Iteration   4: 29.733 ns/op
# Warmup Iteration   5: 29.669 ns/op
Iteration   1: 29.728 ns/op
Iteration   2: 29.731 ns/op
Iteration   3: 29.720 ns/op
Iteration   4: 29.679 ns/op
Iteration   5: 29.658 ns/op

# Run progress: 92.35% complete, ETA 00:08:25
# Fork: 2 of 2
# Warmup Iteration   1: 30.093 ns/op
# Warmup Iteration   2: 29.860 ns/op
# Warmup Iteration   3: 28.806 ns/op
# Warmup Iteration   4: 28.827 ns/op
# Warmup Iteration   5: 28.908 ns/op
Iteration   1: 28.889 ns/op
Iteration   2: 28.832 ns/op
Iteration   3: 28.888 ns/op
Iteration   4: 29.128 ns/op
Iteration   5: 29.132 ns/op


Result "fastMathSin":
  29.338 ±(99.9%) 0.600 ns/op [Average]
  (min, avg, max) = (28.832, 29.338, 29.731), stdev = 0.397
  CI (99.9%): [28.738, 29.939] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 45, b = 10000)

# Run progress: 92.52% complete, ETA 00:08:14
# Fork: 1 of 2
# Warmup Iteration   1: 29.933 ns/op
# Warmup Iteration   2: 29.811 ns/op
# Warmup Iteration   3: 28.824 ns/op
# Warmup Iteration   4: 28.920 ns/op
# Warmup Iteration   5: 28.803 ns/op
Iteration   1: 28.800 ns/op
Iteration   2: 28.719 ns/op
Iteration   3: 28.768 ns/op
Iteration   4: 28.682 ns/op
Iteration   5: 28.693 ns/op

# Run progress: 92.69% complete, ETA 00:08:02
# Fork: 2 of 2
# Warmup Iteration   1: 29.830 ns/op
# Warmup Iteration   2: 29.677 ns/op
# Warmup Iteration   3: 28.795 ns/op
# Warmup Iteration   4: 28.813 ns/op
# Warmup Iteration   5: 28.807 ns/op
Iteration   1: 28.817 ns/op
Iteration   2: 28.814 ns/op
Iteration   3: 28.760 ns/op
Iteration   4: 28.802 ns/op
Iteration   5: 28.656 ns/op


Result "fastMathSin":
  28.751 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (28.656, 28.751, 28.817), stdev = 0.060
  CI (99.9%): [28.661, 28.841] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 60, b = 0.5)

# Run progress: 92.86% complete, ETA 00:07:51
# Fork: 1 of 2
# Warmup Iteration   1: 29.837 ns/op
# Warmup Iteration   2: 29.854 ns/op
# Warmup Iteration   3: 28.691 ns/op
# Warmup Iteration   4: 28.753 ns/op
# Warmup Iteration   5: 28.724 ns/op
Iteration   1: 28.734 ns/op
Iteration   2: 28.818 ns/op
Iteration   3: 28.695 ns/op
Iteration   4: 28.704 ns/op
Iteration   5: 28.898 ns/op

# Run progress: 93.03% complete, ETA 00:07:40
# Fork: 2 of 2
# Warmup Iteration   1: 30.152 ns/op
# Warmup Iteration   2: 29.840 ns/op
# Warmup Iteration   3: 28.775 ns/op
# Warmup Iteration   4: 28.801 ns/op
# Warmup Iteration   5: 28.773 ns/op
Iteration   1: 28.815 ns/op
Iteration   2: 28.763 ns/op
Iteration   3: 28.826 ns/op
Iteration   4: 28.527 ns/op
Iteration   5: 28.574 ns/op


Result "fastMathSin":
  28.735 ±(99.9%) 0.175 ns/op [Average]
  (min, avg, max) = (28.527, 28.735, 28.898), stdev = 0.116
  CI (99.9%): [28.560, 28.910] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 60, b = 1)

# Run progress: 93.20% complete, ETA 00:07:29
# Fork: 1 of 2
# Warmup Iteration   1: 29.817 ns/op
# Warmup Iteration   2: 29.792 ns/op
# Warmup Iteration   3: 29.011 ns/op
# Warmup Iteration   4: 28.953 ns/op
# Warmup Iteration   5: 28.977 ns/op
Iteration   1: 28.897 ns/op
Iteration   2: 28.963 ns/op
Iteration   3: 28.817 ns/op
Iteration   4: 28.883 ns/op
Iteration   5: 28.914 ns/op

# Run progress: 93.37% complete, ETA 00:07:17
# Fork: 2 of 2
# Warmup Iteration   1: 29.734 ns/op
# Warmup Iteration   2: 30.498 ns/op
# Warmup Iteration   3: 28.917 ns/op
# Warmup Iteration   4: 28.921 ns/op
# Warmup Iteration   5: 28.856 ns/op
Iteration   1: 28.862 ns/op
Iteration   2: 28.906 ns/op
Iteration   3: 28.758 ns/op
Iteration   4: 28.972 ns/op
Iteration   5: 28.825 ns/op


Result "fastMathSin":
  28.880 ±(99.9%) 0.100 ns/op [Average]
  (min, avg, max) = (28.758, 28.880, 28.972), stdev = 0.066
  CI (99.9%): [28.779, 28.980] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 60, b = 5)

# Run progress: 93.54% complete, ETA 00:07:06
# Fork: 1 of 2
# Warmup Iteration   1: 29.793 ns/op
# Warmup Iteration   2: 29.946 ns/op
# Warmup Iteration   3: 29.316 ns/op
# Warmup Iteration   4: 29.319 ns/op
# Warmup Iteration   5: 29.367 ns/op
Iteration   1: 29.314 ns/op
Iteration   2: 29.352 ns/op
Iteration   3: 29.285 ns/op
Iteration   4: 28.875 ns/op
Iteration   5: 29.051 ns/op

# Run progress: 93.71% complete, ETA 00:06:55
# Fork: 2 of 2
# Warmup Iteration   1: 29.813 ns/op
# Warmup Iteration   2: 29.690 ns/op
# Warmup Iteration   3: 28.627 ns/op
# Warmup Iteration   4: 28.659 ns/op
# Warmup Iteration   5: 28.665 ns/op
Iteration   1: 28.673 ns/op
Iteration   2: 28.692 ns/op
Iteration   3: 28.674 ns/op
Iteration   4: 29.623 ns/op
Iteration   5: 29.634 ns/op


Result "fastMathSin":
  29.117 ±(99.9%) 0.571 ns/op [Average]
  (min, avg, max) = (28.673, 29.117, 29.634), stdev = 0.377
  CI (99.9%): [28.547, 29.688] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 60, b = 10)

# Run progress: 93.88% complete, ETA 00:06:44
# Fork: 1 of 2
# Warmup Iteration   1: 30.111 ns/op
# Warmup Iteration   2: 29.605 ns/op
# Warmup Iteration   3: 29.059 ns/op
# Warmup Iteration   4: 29.084 ns/op
# Warmup Iteration   5: 29.083 ns/op
Iteration   1: 29.019 ns/op
Iteration   2: 29.048 ns/op
Iteration   3: 28.975 ns/op
Iteration   4: 28.647 ns/op
Iteration   5: 28.689 ns/op

# Run progress: 94.05% complete, ETA 00:06:33
# Fork: 2 of 2
# Warmup Iteration   1: 29.800 ns/op
# Warmup Iteration   2: 29.964 ns/op
# Warmup Iteration   3: 29.062 ns/op
# Warmup Iteration   4: 28.959 ns/op
# Warmup Iteration   5: 28.917 ns/op
Iteration   1: 28.930 ns/op
Iteration   2: 28.959 ns/op
Iteration   3: 28.988 ns/op
Iteration   4: 28.957 ns/op
Iteration   5: 28.969 ns/op


Result "fastMathSin":
  28.918 ±(99.9%) 0.206 ns/op [Average]
  (min, avg, max) = (28.647, 28.918, 29.048), stdev = 0.136
  CI (99.9%): [28.712, 29.124] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 60, b = 100)

# Run progress: 94.22% complete, ETA 00:06:21
# Fork: 1 of 2
# Warmup Iteration   1: 29.909 ns/op
# Warmup Iteration   2: 29.698 ns/op
# Warmup Iteration   3: 28.616 ns/op
# Warmup Iteration   4: 28.645 ns/op
# Warmup Iteration   5: 28.555 ns/op
Iteration   1: 28.598 ns/op
Iteration   2: 28.609 ns/op
Iteration   3: 28.589 ns/op
Iteration   4: 28.911 ns/op
Iteration   5: 28.948 ns/op

# Run progress: 94.39% complete, ETA 00:06:10
# Fork: 2 of 2
# Warmup Iteration   1: 29.684 ns/op
# Warmup Iteration   2: 30.057 ns/op
# Warmup Iteration   3: 29.157 ns/op
# Warmup Iteration   4: 29.083 ns/op
# Warmup Iteration   5: 29.151 ns/op
Iteration   1: 29.061 ns/op
Iteration   2: 29.070 ns/op
Iteration   3: 29.155 ns/op
Iteration   4: 29.164 ns/op
Iteration   5: 28.731 ns/op


Result "fastMathSin":
  28.884 ±(99.9%) 0.353 ns/op [Average]
  (min, avg, max) = (28.589, 28.884, 29.164), stdev = 0.233
  CI (99.9%): [28.531, 29.236] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 60, b = 1000)

# Run progress: 94.56% complete, ETA 00:05:59
# Fork: 1 of 2
# Warmup Iteration   1: 29.854 ns/op
# Warmup Iteration   2: 29.745 ns/op
# Warmup Iteration   3: 29.075 ns/op
# Warmup Iteration   4: 29.196 ns/op
# Warmup Iteration   5: 29.146 ns/op
Iteration   1: 29.087 ns/op
Iteration   2: 29.178 ns/op
Iteration   3: 29.248 ns/op
Iteration   4: 29.041 ns/op
Iteration   5: 28.947 ns/op

# Run progress: 94.73% complete, ETA 00:05:48
# Fork: 2 of 2
# Warmup Iteration   1: 30.067 ns/op
# Warmup Iteration   2: 29.762 ns/op
# Warmup Iteration   3: 28.693 ns/op
# Warmup Iteration   4: 28.580 ns/op
# Warmup Iteration   5: 28.644 ns/op
Iteration   1: 28.591 ns/op
Iteration   2: 28.644 ns/op
Iteration   3: 28.564 ns/op
Iteration   4: 28.742 ns/op
Iteration   5: 28.771 ns/op


Result "fastMathSin":
  28.881 ±(99.9%) 0.380 ns/op [Average]
  (min, avg, max) = (28.564, 28.881, 29.248), stdev = 0.251
  CI (99.9%): [28.502, 29.261] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 60, b = 10000)

# Run progress: 94.90% complete, ETA 00:05:36
# Fork: 1 of 2
# Warmup Iteration   1: 29.842 ns/op
# Warmup Iteration   2: 29.845 ns/op
# Warmup Iteration   3: 28.798 ns/op
# Warmup Iteration   4: 28.742 ns/op
# Warmup Iteration   5: 28.742 ns/op
Iteration   1: 28.747 ns/op
Iteration   2: 28.687 ns/op
Iteration   3: 28.768 ns/op
Iteration   4: 29.059 ns/op
Iteration   5: 29.077 ns/op

# Run progress: 95.07% complete, ETA 00:05:25
# Fork: 2 of 2
# Warmup Iteration   1: 29.767 ns/op
# Warmup Iteration   2: 29.641 ns/op
# Warmup Iteration   3: 28.721 ns/op
# Warmup Iteration   4: 28.824 ns/op
# Warmup Iteration   5: 28.683 ns/op
Iteration   1: 28.695 ns/op
Iteration   2: 28.645 ns/op
Iteration   3: 28.740 ns/op
Iteration   4: 28.679 ns/op
Iteration   5: 29.106 ns/op


Result "fastMathSin":
  28.820 ±(99.9%) 0.278 ns/op [Average]
  (min, avg, max) = (28.645, 28.820, 29.106), stdev = 0.184
  CI (99.9%): [28.543, 29.098] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 85, b = 0.5)

# Run progress: 95.24% complete, ETA 00:05:14
# Fork: 1 of 2
# Warmup Iteration   1: 29.581 ns/op
# Warmup Iteration   2: 30.575 ns/op
# Warmup Iteration   3: 28.905 ns/op
# Warmup Iteration   4: 29.001 ns/op
# Warmup Iteration   5: 28.808 ns/op
Iteration   1: 28.944 ns/op
Iteration   2: 28.907 ns/op
Iteration   3: 28.856 ns/op
Iteration   4: 29.199 ns/op
Iteration   5: 29.209 ns/op

# Run progress: 95.41% complete, ETA 00:05:03
# Fork: 2 of 2
# Warmup Iteration   1: 29.765 ns/op
# Warmup Iteration   2: 29.814 ns/op
# Warmup Iteration   3: 28.831 ns/op
# Warmup Iteration   4: 28.717 ns/op
# Warmup Iteration   5: 28.725 ns/op
Iteration   1: 28.723 ns/op
Iteration   2: 28.658 ns/op
Iteration   3: 28.747 ns/op
Iteration   4: 28.882 ns/op
Iteration   5: 28.824 ns/op


Result "fastMathSin":
  28.895 ±(99.9%) 0.280 ns/op [Average]
  (min, avg, max) = (28.658, 28.895, 29.209), stdev = 0.185
  CI (99.9%): [28.615, 29.174] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 85, b = 1)

# Run progress: 95.58% complete, ETA 00:04:51
# Fork: 1 of 2
# Warmup Iteration   1: 29.851 ns/op
# Warmup Iteration   2: 29.922 ns/op
# Warmup Iteration   3: 29.346 ns/op
# Warmup Iteration   4: 29.311 ns/op
# Warmup Iteration   5: 29.277 ns/op
Iteration   1: 29.234 ns/op
Iteration   2: 29.324 ns/op
Iteration   3: 29.409 ns/op
Iteration   4: 29.258 ns/op
Iteration   5: 29.336 ns/op

# Run progress: 95.75% complete, ETA 00:04:40
# Fork: 2 of 2
# Warmup Iteration   1: 30.043 ns/op
# Warmup Iteration   2: 29.701 ns/op
# Warmup Iteration   3: 29.243 ns/op
# Warmup Iteration   4: 29.300 ns/op
# Warmup Iteration   5: 29.334 ns/op
Iteration   1: 29.280 ns/op
Iteration   2: 29.204 ns/op
Iteration   3: 29.314 ns/op
Iteration   4: 28.530 ns/op
Iteration   5: 28.566 ns/op


Result "fastMathSin":
  29.146 ±(99.9%) 0.484 ns/op [Average]
  (min, avg, max) = (28.530, 29.146, 29.409), stdev = 0.320
  CI (99.9%): [28.661, 29.630] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 85, b = 5)

# Run progress: 95.92% complete, ETA 00:04:29
# Fork: 1 of 2
# Warmup Iteration   1: 29.809 ns/op
# Warmup Iteration   2: 29.632 ns/op
# Warmup Iteration   3: 29.547 ns/op
# Warmup Iteration   4: 29.538 ns/op
# Warmup Iteration   5: 29.559 ns/op
Iteration   1: 29.682 ns/op
Iteration   2: 29.634 ns/op
Iteration   3: 29.578 ns/op
Iteration   4: 29.555 ns/op
Iteration   5: 29.245 ns/op

# Run progress: 96.09% complete, ETA 00:04:18
# Fork: 2 of 2
# Warmup Iteration   1: 29.826 ns/op
# Warmup Iteration   2: 29.664 ns/op
# Warmup Iteration   3: 29.020 ns/op
# Warmup Iteration   4: 29.040 ns/op
# Warmup Iteration   5: 29.045 ns/op
Iteration   1: 28.984 ns/op
Iteration   2: 28.998 ns/op
Iteration   3: 29.059 ns/op
Iteration   4: 29.028 ns/op
Iteration   5: 29.036 ns/op


Result "fastMathSin":
  29.280 ±(99.9%) 0.448 ns/op [Average]
  (min, avg, max) = (28.984, 29.280, 29.682), stdev = 0.297
  CI (99.9%): [28.831, 29.728] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 85, b = 10)

# Run progress: 96.26% complete, ETA 00:04:07
# Fork: 1 of 2
# Warmup Iteration   1: 30.423 ns/op
# Warmup Iteration   2: 30.221 ns/op
# Warmup Iteration   3: 28.976 ns/op
# Warmup Iteration   4: 28.902 ns/op
# Warmup Iteration   5: 28.961 ns/op
Iteration   1: 28.979 ns/op
Iteration   2: 28.945 ns/op
Iteration   3: 28.862 ns/op
Iteration   4: 28.904 ns/op
Iteration   5: 28.648 ns/op

# Run progress: 96.43% complete, ETA 00:03:55
# Fork: 2 of 2
# Warmup Iteration   1: 29.904 ns/op
# Warmup Iteration   2: 29.676 ns/op
# Warmup Iteration   3: 28.827 ns/op
# Warmup Iteration   4: 28.852 ns/op
# Warmup Iteration   5: 28.855 ns/op
Iteration   1: 28.815 ns/op
Iteration   2: 28.846 ns/op
Iteration   3: 28.863 ns/op
Iteration   4: 28.893 ns/op
Iteration   5: 29.213 ns/op


Result "fastMathSin":
  28.897 ±(99.9%) 0.216 ns/op [Average]
  (min, avg, max) = (28.648, 28.897, 29.213), stdev = 0.143
  CI (99.9%): [28.681, 29.112] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 85, b = 100)

# Run progress: 96.60% complete, ETA 00:03:44
# Fork: 1 of 2
# Warmup Iteration   1: 29.881 ns/op
# Warmup Iteration   2: 29.798 ns/op
# Warmup Iteration   3: 29.482 ns/op
# Warmup Iteration   4: 29.431 ns/op
# Warmup Iteration   5: 29.405 ns/op
Iteration   1: 29.420 ns/op
Iteration   2: 29.520 ns/op
Iteration   3: 29.415 ns/op
Iteration   4: 29.400 ns/op
Iteration   5: 29.405 ns/op

# Run progress: 96.77% complete, ETA 00:03:33
# Fork: 2 of 2
# Warmup Iteration   1: 29.865 ns/op
# Warmup Iteration   2: 29.964 ns/op
# Warmup Iteration   3: 29.635 ns/op
# Warmup Iteration   4: 29.671 ns/op
# Warmup Iteration   5: 29.659 ns/op
Iteration   1: 29.647 ns/op
Iteration   2: 29.644 ns/op
Iteration   3: 29.639 ns/op
Iteration   4: 29.448 ns/op
Iteration   5: 29.489 ns/op


Result "fastMathSin":
  29.503 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (29.400, 29.503, 29.647), stdev = 0.104
  CI (99.9%): [29.345, 29.660] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 85, b = 1000)

# Run progress: 96.94% complete, ETA 00:03:22
# Fork: 1 of 2
# Warmup Iteration   1: 30.117 ns/op
# Warmup Iteration   2: 29.663 ns/op
# Warmup Iteration   3: 28.711 ns/op
# Warmup Iteration   4: 28.799 ns/op
# Warmup Iteration   5: 28.712 ns/op
Iteration   1: 28.786 ns/op
Iteration   2: 28.795 ns/op
Iteration   3: 28.824 ns/op
Iteration   4: 28.880 ns/op
Iteration   5: 28.893 ns/op

# Run progress: 97.11% complete, ETA 00:03:10
# Fork: 2 of 2
# Warmup Iteration   1: 30.132 ns/op
# Warmup Iteration   2: 29.729 ns/op
# Warmup Iteration   3: 28.755 ns/op
# Warmup Iteration   4: 28.787 ns/op
# Warmup Iteration   5: 28.742 ns/op
Iteration   1: 28.721 ns/op
Iteration   2: 28.789 ns/op
Iteration   3: 28.774 ns/op
Iteration   4: 28.894 ns/op
Iteration   5: 28.923 ns/op


Result "fastMathSin":
  28.828 ±(99.9%) 0.100 ns/op [Average]
  (min, avg, max) = (28.721, 28.828, 28.923), stdev = 0.066
  CI (99.9%): [28.728, 28.927] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 85, b = 10000)

# Run progress: 97.28% complete, ETA 00:02:59
# Fork: 1 of 2
# Warmup Iteration   1: 29.783 ns/op
# Warmup Iteration   2: 29.796 ns/op
# Warmup Iteration   3: 28.747 ns/op
# Warmup Iteration   4: 28.687 ns/op
# Warmup Iteration   5: 28.757 ns/op
Iteration   1: 28.721 ns/op
Iteration   2: 28.675 ns/op
Iteration   3: 28.758 ns/op
Iteration   4: 28.627 ns/op
Iteration   5: 29.060 ns/op

# Run progress: 97.45% complete, ETA 00:02:48
# Fork: 2 of 2
# Warmup Iteration   1: 29.787 ns/op
# Warmup Iteration   2: 29.711 ns/op
# Warmup Iteration   3: 28.941 ns/op
# Warmup Iteration   4: 28.881 ns/op
# Warmup Iteration   5: 29.110 ns/op
Iteration   1: 28.955 ns/op
Iteration   2: 28.843 ns/op
Iteration   3: 28.984 ns/op
Iteration   4: 28.729 ns/op
Iteration   5: 28.733 ns/op


Result "fastMathSin":
  28.808 ±(99.9%) 0.220 ns/op [Average]
  (min, avg, max) = (28.627, 28.808, 29.060), stdev = 0.145
  CI (99.9%): [28.589, 29.028] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 90, b = 0.5)

# Run progress: 97.62% complete, ETA 00:02:37
# Fork: 1 of 2
# Warmup Iteration   1: 30.839 ns/op
# Warmup Iteration   2: 30.775 ns/op
# Warmup Iteration   3: 31.049 ns/op
# Warmup Iteration   4: 31.097 ns/op
# Warmup Iteration   5: 31.081 ns/op
Iteration   1: 31.060 ns/op
Iteration   2: 31.138 ns/op
Iteration   3: 31.075 ns/op
Iteration   4: 31.062 ns/op
Iteration   5: 31.090 ns/op

# Run progress: 97.79% complete, ETA 00:02:25
# Fork: 2 of 2
# Warmup Iteration   1: 30.926 ns/op
# Warmup Iteration   2: 30.843 ns/op
# Warmup Iteration   3: 31.056 ns/op
# Warmup Iteration   4: 31.076 ns/op
# Warmup Iteration   5: 31.091 ns/op
Iteration   1: 31.065 ns/op
Iteration   2: 31.085 ns/op
Iteration   3: 31.133 ns/op
Iteration   4: 31.116 ns/op
Iteration   5: 31.108 ns/op


Result "fastMathSin":
  31.093 ±(99.9%) 0.044 ns/op [Average]
  (min, avg, max) = (31.060, 31.093, 31.138), stdev = 0.029
  CI (99.9%): [31.049, 31.137] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 90, b = 1)

# Run progress: 97.96% complete, ETA 00:02:14
# Fork: 1 of 2
# Warmup Iteration   1: 30.621 ns/op
# Warmup Iteration   2: 30.853 ns/op
# Warmup Iteration   3: 31.077 ns/op
# Warmup Iteration   4: 31.124 ns/op
# Warmup Iteration   5: 31.111 ns/op
Iteration   1: 31.099 ns/op
Iteration   2: 31.077 ns/op
Iteration   3: 31.094 ns/op
Iteration   4: 31.069 ns/op
Iteration   5: 30.781 ns/op

# Run progress: 98.13% complete, ETA 00:02:03
# Fork: 2 of 2
# Warmup Iteration   1: 31.034 ns/op
# Warmup Iteration   2: 30.941 ns/op
# Warmup Iteration   3: 31.038 ns/op
# Warmup Iteration   4: 31.117 ns/op
# Warmup Iteration   5: 31.082 ns/op
Iteration   1: 31.092 ns/op
Iteration   2: 31.088 ns/op
Iteration   3: 31.056 ns/op
Iteration   4: 31.152 ns/op
Iteration   5: 31.046 ns/op


Result "fastMathSin":
  31.055 ±(99.9%) 0.152 ns/op [Average]
  (min, avg, max) = (30.781, 31.055, 31.152), stdev = 0.100
  CI (99.9%): [30.904, 31.207] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 90, b = 5)

# Run progress: 98.30% complete, ETA 00:01:52
# Fork: 1 of 2
# Warmup Iteration   1: 30.986 ns/op
# Warmup Iteration   2: 31.026 ns/op
# Warmup Iteration   3: 31.197 ns/op
# Warmup Iteration   4: 31.125 ns/op
# Warmup Iteration   5: 31.087 ns/op
Iteration   1: 31.140 ns/op
Iteration   2: 31.152 ns/op
Iteration   3: 31.116 ns/op
Iteration   4: 31.089 ns/op
Iteration   5: 31.148 ns/op

# Run progress: 98.47% complete, ETA 00:01:41
# Fork: 2 of 2
# Warmup Iteration   1: 30.703 ns/op
# Warmup Iteration   2: 30.694 ns/op
# Warmup Iteration   3: 31.146 ns/op
# Warmup Iteration   4: 31.046 ns/op
# Warmup Iteration   5: 31.081 ns/op
Iteration   1: 31.130 ns/op
Iteration   2: 31.127 ns/op
Iteration   3: 31.117 ns/op
Iteration   4: 31.127 ns/op
Iteration   5: 31.091 ns/op


Result "fastMathSin":
  31.124 ±(99.9%) 0.032 ns/op [Average]
  (min, avg, max) = (31.089, 31.124, 31.152), stdev = 0.021
  CI (99.9%): [31.091, 31.156] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 90, b = 10)

# Run progress: 98.64% complete, ETA 00:01:29
# Fork: 1 of 2
# Warmup Iteration   1: 30.858 ns/op
# Warmup Iteration   2: 30.929 ns/op
# Warmup Iteration   3: 31.220 ns/op
# Warmup Iteration   4: 31.121 ns/op
# Warmup Iteration   5: 31.125 ns/op
Iteration   1: 31.181 ns/op
Iteration   2: 31.185 ns/op
Iteration   3: 31.127 ns/op
Iteration   4: 31.142 ns/op
Iteration   5: 31.105 ns/op

# Run progress: 98.81% complete, ETA 00:01:18
# Fork: 2 of 2
# Warmup Iteration   1: 31.285 ns/op
# Warmup Iteration   2: 30.643 ns/op
# Warmup Iteration   3: 31.051 ns/op
# Warmup Iteration   4: 31.077 ns/op
# Warmup Iteration   5: 31.093 ns/op
Iteration   1: 31.059 ns/op
Iteration   2: 31.007 ns/op
Iteration   3: 31.086 ns/op
Iteration   4: 31.037 ns/op
Iteration   5: 31.056 ns/op


Result "fastMathSin":
  31.098 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (31.007, 31.098, 31.185), stdev = 0.060
  CI (99.9%): [31.007, 31.189] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 90, b = 100)

# Run progress: 98.98% complete, ETA 00:01:07
# Fork: 1 of 2
# Warmup Iteration   1: 30.795 ns/op
# Warmup Iteration   2: 30.875 ns/op
# Warmup Iteration   3: 31.134 ns/op
# Warmup Iteration   4: 31.158 ns/op
# Warmup Iteration   5: 31.137 ns/op
Iteration   1: 31.119 ns/op
Iteration   2: 31.161 ns/op
Iteration   3: 31.114 ns/op
Iteration   4: 31.107 ns/op
Iteration   5: 31.116 ns/op

# Run progress: 99.15% complete, ETA 00:00:56
# Fork: 2 of 2
# Warmup Iteration   1: 30.673 ns/op
# Warmup Iteration   2: 30.860 ns/op
# Warmup Iteration   3: 31.050 ns/op
# Warmup Iteration   4: 31.111 ns/op
# Warmup Iteration   5: 31.062 ns/op
Iteration   1: 31.052 ns/op
Iteration   2: 31.059 ns/op
Iteration   3: 31.056 ns/op
Iteration   4: 31.072 ns/op
Iteration   5: 31.069 ns/op


Result "fastMathSin":
  31.092 ±(99.9%) 0.055 ns/op [Average]
  (min, avg, max) = (31.052, 31.092, 31.161), stdev = 0.036
  CI (99.9%): [31.038, 31.147] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 90, b = 1000)

# Run progress: 99.32% complete, ETA 00:00:44
# Fork: 1 of 2
# Warmup Iteration   1: 30.889 ns/op
# Warmup Iteration   2: 30.900 ns/op
# Warmup Iteration   3: 31.108 ns/op
# Warmup Iteration   4: 31.046 ns/op
# Warmup Iteration   5: 31.071 ns/op
Iteration   1: 31.094 ns/op
Iteration   2: 31.113 ns/op
Iteration   3: 31.141 ns/op
Iteration   4: 31.065 ns/op
Iteration   5: 31.118 ns/op

# Run progress: 99.49% complete, ETA 00:00:33
# Fork: 2 of 2
# Warmup Iteration   1: 30.788 ns/op
# Warmup Iteration   2: 30.817 ns/op
# Warmup Iteration   3: 31.039 ns/op
# Warmup Iteration   4: 31.075 ns/op
# Warmup Iteration   5: 31.063 ns/op
Iteration   1: 31.075 ns/op
Iteration   2: 31.058 ns/op
Iteration   3: 31.054 ns/op
Iteration   4: 31.102 ns/op
Iteration   5: 31.048 ns/op


Result "fastMathSin":
  31.087 ±(99.9%) 0.047 ns/op [Average]
  (min, avg, max) = (31.048, 31.087, 31.141), stdev = 0.031
  CI (99.9%): [31.039, 31.134] (assumes normal distribution)


# JMH 1.9.1 (released 8 days ago)
# VM invoker: C:\Program Files\Java\jdk1.8.0_45\jre\bin\java.exe
# VM options: -Xmx1280m
# Warmup: 5 iterations, 1 s each
# Measurement: 5 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: org.nusco.narjillos.jmh.FastMathBenchmark.fastMathSin
# Parameters: (a = 90, b = 10000)

# Run progress: 99.66% complete, ETA 00:00:22
# Fork: 1 of 2
# Warmup Iteration   1: 30.939 ns/op
# Warmup Iteration   2: 30.822 ns/op
# Warmup Iteration   3: 31.132 ns/op
# Warmup Iteration   4: 31.113 ns/op
# Warmup Iteration   5: 31.089 ns/op
Iteration   1: 31.095 ns/op
Iteration   2: 31.101 ns/op
Iteration   3: 31.067 ns/op
Iteration   4: 31.108 ns/op
Iteration   5: 31.132 ns/op

# Run progress: 99.83% complete, ETA 00:00:11
# Fork: 2 of 2
# Warmup Iteration   1: 30.939 ns/op
# Warmup Iteration   2: 30.897 ns/op
# Warmup Iteration   3: 29.719 ns/op
# Warmup Iteration   4: 29.731 ns/op
# Warmup Iteration   5: 29.705 ns/op
Iteration   1: 29.710 ns/op
Iteration   2: 29.644 ns/op
Iteration   3: 29.741 ns/op
Iteration   4: 29.694 ns/op
Iteration   5: 29.659 ns/op


Result "fastMathSin":
  30.395 ±(99.9%) 1.125 ns/op [Average]
  (min, avg, max) = (29.644, 30.395, 31.132), stdev = 0.744
  CI (99.9%): [29.270, 31.520] (assumes normal distribution)


# Run complete. Total time: 01:50:02

Benchmark                       (a)    (b)  Mode  Cnt   Score    Error  Units
FastMathBenchmark.baselineAtan    0    0.5  avgt   10  51.911 ±  0.269  ns/op
FastMathBenchmark.baselineAtan    0      1  avgt   10  51.852 ±  0.102  ns/op
FastMathBenchmark.baselineAtan    0      5  avgt   10  73.199 ±  0.235  ns/op
FastMathBenchmark.baselineAtan    0     10  avgt   10  74.843 ±  0.182  ns/op
FastMathBenchmark.baselineAtan    0    100  avgt   10  75.957 ±  0.379  ns/op
FastMathBenchmark.baselineAtan    0   1000  avgt   10  75.812 ±  0.175  ns/op
FastMathBenchmark.baselineAtan    0  10000  avgt   10  76.175 ±  0.588  ns/op
FastMathBenchmark.baselineAtan    5    0.5  avgt   10  51.997 ±  0.463  ns/op
FastMathBenchmark.baselineAtan    5      1  avgt   10  51.909 ±  0.112  ns/op
FastMathBenchmark.baselineAtan    5      5  avgt   10  73.235 ±  0.197  ns/op
FastMathBenchmark.baselineAtan    5     10  avgt   10  74.705 ±  0.173  ns/op
FastMathBenchmark.baselineAtan    5    100  avgt   10  75.794 ±  0.267  ns/op
FastMathBenchmark.baselineAtan    5   1000  avgt   10  75.823 ±  0.131  ns/op
FastMathBenchmark.baselineAtan    5  10000  avgt   10  75.799 ±  0.174  ns/op
FastMathBenchmark.baselineAtan   30    0.5  avgt   10  51.779 ±  0.160  ns/op
FastMathBenchmark.baselineAtan   30      1  avgt   10  51.801 ±  0.072  ns/op
FastMathBenchmark.baselineAtan   30      5  avgt   10  73.222 ±  0.365  ns/op
FastMathBenchmark.baselineAtan   30     10  avgt   10  74.841 ±  0.165  ns/op
FastMathBenchmark.baselineAtan   30    100  avgt   10  75.859 ±  0.150  ns/op
FastMathBenchmark.baselineAtan   30   1000  avgt   10  75.883 ±  0.141  ns/op
FastMathBenchmark.baselineAtan   30  10000  avgt   10  75.893 ±  0.466  ns/op
FastMathBenchmark.baselineAtan   45    0.5  avgt   10  52.032 ±  0.504  ns/op
FastMathBenchmark.baselineAtan   45      1  avgt   10  51.893 ±  0.185  ns/op
FastMathBenchmark.baselineAtan   45      5  avgt   10  73.233 ±  0.282  ns/op
FastMathBenchmark.baselineAtan   45     10  avgt   10  74.955 ±  0.170  ns/op
FastMathBenchmark.baselineAtan   45    100  avgt   10  75.912 ±  0.352  ns/op
FastMathBenchmark.baselineAtan   45   1000  avgt   10  75.895 ±  0.175  ns/op
FastMathBenchmark.baselineAtan   45  10000  avgt   10  75.895 ±  0.138  ns/op
FastMathBenchmark.baselineAtan   60    0.5  avgt   10  52.013 ±  0.442  ns/op
FastMathBenchmark.baselineAtan   60      1  avgt   10  51.821 ±  0.081  ns/op
FastMathBenchmark.baselineAtan   60      5  avgt   10  73.173 ±  0.246  ns/op
FastMathBenchmark.baselineAtan   60     10  avgt   10  74.756 ±  0.102  ns/op
FastMathBenchmark.baselineAtan   60    100  avgt   10  75.811 ±  0.194  ns/op
FastMathBenchmark.baselineAtan   60   1000  avgt   10  75.804 ±  0.177  ns/op
FastMathBenchmark.baselineAtan   60  10000  avgt   10  75.851 ±  0.180  ns/op
FastMathBenchmark.baselineAtan   85    0.5  avgt   10  51.954 ±  0.460  ns/op
FastMathBenchmark.baselineAtan   85      1  avgt   10  51.817 ±  0.101  ns/op
FastMathBenchmark.baselineAtan   85      5  avgt   10  73.290 ±  0.290  ns/op
FastMathBenchmark.baselineAtan   85     10  avgt   10  74.960 ±  0.495  ns/op
FastMathBenchmark.baselineAtan   85    100  avgt   10  75.882 ±  0.234  ns/op
FastMathBenchmark.baselineAtan   85   1000  avgt   10  76.120 ±  0.512  ns/op
FastMathBenchmark.baselineAtan   85  10000  avgt   10  75.873 ±  0.181  ns/op
FastMathBenchmark.baselineAtan   90    0.5  avgt   10  51.842 ±  0.126  ns/op
FastMathBenchmark.baselineAtan   90      1  avgt   10  51.759 ±  0.167  ns/op
FastMathBenchmark.baselineAtan   90      5  avgt   10  73.395 ±  0.517  ns/op
FastMathBenchmark.baselineAtan   90     10  avgt   10  75.033 ±  0.586  ns/op
FastMathBenchmark.baselineAtan   90    100  avgt   10  75.847 ±  0.136  ns/op
FastMathBenchmark.baselineAtan   90   1000  avgt   10  75.863 ±  0.174  ns/op
FastMathBenchmark.baselineAtan   90  10000  avgt   10  75.911 ±  0.550  ns/op
FastMathBenchmark.baselineCos     0    0.5  avgt   10  21.752 ±  0.338  ns/op
FastMathBenchmark.baselineCos     0      1  avgt   10  21.632 ±  0.202  ns/op
FastMathBenchmark.baselineCos     0      5  avgt   10  21.667 ±  0.287  ns/op
FastMathBenchmark.baselineCos     0     10  avgt   10  21.669 ±  0.263  ns/op
FastMathBenchmark.baselineCos     0    100  avgt   10  21.698 ±  0.329  ns/op
FastMathBenchmark.baselineCos     0   1000  avgt   10  21.655 ±  0.443  ns/op
FastMathBenchmark.baselineCos     0  10000  avgt   10  21.573 ±  0.045  ns/op
FastMathBenchmark.baselineCos     5    0.5  avgt   10  38.383 ±  0.163  ns/op
FastMathBenchmark.baselineCos     5      1  avgt   10  38.897 ±  1.736  ns/op
FastMathBenchmark.baselineCos     5      5  avgt   10  38.852 ±  0.935  ns/op
FastMathBenchmark.baselineCos     5     10  avgt   10  38.469 ±  0.178  ns/op
FastMathBenchmark.baselineCos     5    100  avgt   10  38.385 ±  0.137  ns/op
FastMathBenchmark.baselineCos     5   1000  avgt   10  38.586 ±  0.451  ns/op
FastMathBenchmark.baselineCos     5  10000  avgt   10  38.414 ±  0.044  ns/op
FastMathBenchmark.baselineCos    30    0.5  avgt   10  38.370 ±  0.088  ns/op
FastMathBenchmark.baselineCos    30      1  avgt   10  38.559 ±  0.480  ns/op
FastMathBenchmark.baselineCos    30      5  avgt   10  38.751 ±  0.987  ns/op
FastMathBenchmark.baselineCos    30     10  avgt   10  38.559 ±  0.345  ns/op
FastMathBenchmark.baselineCos    30    100  avgt   10  38.560 ±  0.811  ns/op
FastMathBenchmark.baselineCos    30   1000  avgt   10  38.446 ±  0.473  ns/op
FastMathBenchmark.baselineCos    30  10000  avgt   10  38.485 ±  0.334  ns/op
FastMathBenchmark.baselineCos    45    0.5  avgt   10  39.879 ±  3.232  ns/op
FastMathBenchmark.baselineCos    45      1  avgt   10  38.823 ±  0.399  ns/op
FastMathBenchmark.baselineCos    45      5  avgt   10  38.907 ±  0.163  ns/op
FastMathBenchmark.baselineCos    45     10  avgt   10  39.355 ±  2.450  ns/op
FastMathBenchmark.baselineCos    45    100  avgt   10  38.955 ±  0.339  ns/op
FastMathBenchmark.baselineCos    45   1000  avgt   10  38.787 ±  0.126  ns/op
FastMathBenchmark.baselineCos    45  10000  avgt   10  38.970 ±  0.529  ns/op
FastMathBenchmark.baselineCos    60    0.5  avgt   10  48.275 ±  1.040  ns/op
FastMathBenchmark.baselineCos    60      1  avgt   10  47.800 ±  0.314  ns/op
FastMathBenchmark.baselineCos    60      5  avgt   10  47.783 ±  0.206  ns/op
FastMathBenchmark.baselineCos    60     10  avgt   10  48.190 ±  1.570  ns/op
FastMathBenchmark.baselineCos    60    100  avgt   10  47.841 ±  0.411  ns/op
FastMathBenchmark.baselineCos    60   1000  avgt   10  48.115 ±  1.086  ns/op
FastMathBenchmark.baselineCos    60  10000  avgt   10  47.757 ±  0.123  ns/op
FastMathBenchmark.baselineCos    85    0.5  avgt   10  41.262 ±  0.174  ns/op
FastMathBenchmark.baselineCos    85      1  avgt   10  41.124 ±  0.146  ns/op
FastMathBenchmark.baselineCos    85      5  avgt   10  41.160 ±  0.124  ns/op
FastMathBenchmark.baselineCos    85     10  avgt   10  41.217 ±  0.176  ns/op
FastMathBenchmark.baselineCos    85    100  avgt   10  42.217 ±  3.177  ns/op
FastMathBenchmark.baselineCos    85   1000  avgt   10  41.436 ±  1.001  ns/op
FastMathBenchmark.baselineCos    85  10000  avgt   10  41.487 ±  1.190  ns/op
FastMathBenchmark.baselineCos    90    0.5  avgt   10  39.670 ±  0.192  ns/op
FastMathBenchmark.baselineCos    90      1  avgt   10  39.748 ±  0.176  ns/op
FastMathBenchmark.baselineCos    90      5  avgt   10  39.722 ±  0.222  ns/op
FastMathBenchmark.baselineCos    90     10  avgt   10  39.658 ±  0.098  ns/op
FastMathBenchmark.baselineCos    90    100  avgt   10  39.834 ±  0.543  ns/op
FastMathBenchmark.baselineCos    90   1000  avgt   10  39.630 ±  0.156  ns/op
FastMathBenchmark.baselineCos    90  10000  avgt   10  39.922 ±  1.270  ns/op
FastMathBenchmark.baselineSin     0    0.5  avgt   10  21.753 ±  0.343  ns/op
FastMathBenchmark.baselineSin     0      1  avgt   10  21.858 ±  0.485  ns/op
FastMathBenchmark.baselineSin     0      5  avgt   10  21.613 ±  0.210  ns/op
FastMathBenchmark.baselineSin     0     10  avgt   10  21.792 ±  0.338  ns/op
FastMathBenchmark.baselineSin     0    100  avgt   10  21.777 ±  0.347  ns/op
FastMathBenchmark.baselineSin     0   1000  avgt   10  21.683 ±  0.293  ns/op
FastMathBenchmark.baselineSin     0  10000  avgt   10  21.975 ±  0.563  ns/op
FastMathBenchmark.baselineSin     5    0.5  avgt   10  40.078 ±  0.099  ns/op
FastMathBenchmark.baselineSin     5      1  avgt   10  40.093 ±  0.105  ns/op
FastMathBenchmark.baselineSin     5      5  avgt   10  40.140 ±  0.103  ns/op
FastMathBenchmark.baselineSin     5     10  avgt   10  40.311 ±  0.702  ns/op
FastMathBenchmark.baselineSin     5    100  avgt   10  40.180 ±  0.152  ns/op
FastMathBenchmark.baselineSin     5   1000  avgt   10  40.173 ±  0.281  ns/op
FastMathBenchmark.baselineSin     5  10000  avgt   10  40.205 ±  0.148  ns/op
FastMathBenchmark.baselineSin    30    0.5  avgt   10  40.119 ±  0.361  ns/op
FastMathBenchmark.baselineSin    30      1  avgt   10  40.302 ±  0.448  ns/op
FastMathBenchmark.baselineSin    30      5  avgt   10  40.163 ±  0.067  ns/op
FastMathBenchmark.baselineSin    30     10  avgt   10  40.077 ±  0.181  ns/op
FastMathBenchmark.baselineSin    30    100  avgt   10  40.125 ±  0.124  ns/op
FastMathBenchmark.baselineSin    30   1000  avgt   10  40.181 ±  0.462  ns/op
FastMathBenchmark.baselineSin    30  10000  avgt   10  40.258 ±  0.452  ns/op
FastMathBenchmark.baselineSin    45    0.5  avgt   10  46.631 ±  1.149  ns/op
FastMathBenchmark.baselineSin    45      1  avgt   10  46.901 ±  1.177  ns/op
FastMathBenchmark.baselineSin    45      5  avgt   10  46.407 ±  0.173  ns/op
FastMathBenchmark.baselineSin    45     10  avgt   10  46.483 ±  0.340  ns/op
FastMathBenchmark.baselineSin    45    100  avgt   10  46.398 ±  0.176  ns/op
FastMathBenchmark.baselineSin    45   1000  avgt   10  46.421 ±  0.098  ns/op
FastMathBenchmark.baselineSin    45  10000  avgt   10  46.858 ±  1.343  ns/op
FastMathBenchmark.baselineSin    60    0.5  avgt   10  39.846 ±  0.486  ns/op
FastMathBenchmark.baselineSin    60      1  avgt   10  40.226 ±  1.615  ns/op
FastMathBenchmark.baselineSin    60      5  avgt   10  39.656 ±  0.157  ns/op
FastMathBenchmark.baselineSin    60     10  avgt   10  39.918 ±  0.426  ns/op
FastMathBenchmark.baselineSin    60    100  avgt   10  39.619 ±  0.224  ns/op
FastMathBenchmark.baselineSin    60   1000  avgt   10  39.789 ±  0.440  ns/op
FastMathBenchmark.baselineSin    60  10000  avgt   10  39.710 ±  0.247  ns/op
FastMathBenchmark.baselineSin    85    0.5  avgt   10  39.748 ±  0.207  ns/op
FastMathBenchmark.baselineSin    85      1  avgt   10  39.616 ±  0.177  ns/op
FastMathBenchmark.baselineSin    85      5  avgt   10  47.036 ± 11.614  ns/op
FastMathBenchmark.baselineSin    85     10  avgt   10  40.063 ±  1.222  ns/op
FastMathBenchmark.baselineSin    85    100  avgt   10  39.701 ±  0.214  ns/op
FastMathBenchmark.baselineSin    85   1000  avgt   10  39.724 ±  0.165  ns/op
FastMathBenchmark.baselineSin    85  10000  avgt   10  39.754 ±  0.541  ns/op
FastMathBenchmark.baselineSin    90    0.5  avgt   10  47.887 ±  0.774  ns/op
FastMathBenchmark.baselineSin    90      1  avgt   10  47.576 ±  0.170  ns/op
FastMathBenchmark.baselineSin    90      5  avgt   10  47.604 ±  0.092  ns/op
FastMathBenchmark.baselineSin    90     10  avgt   10  47.816 ±  1.033  ns/op
FastMathBenchmark.baselineSin    90    100  avgt   10  48.253 ±  2.289  ns/op
FastMathBenchmark.baselineSin    90   1000  avgt   10  47.491 ±  0.172  ns/op
FastMathBenchmark.baselineSin    90  10000  avgt   10  48.051 ±  0.745  ns/op
FastMathBenchmark.fastMathAtan    0    0.5  avgt   10   6.910 ±  0.016  ns/op
FastMathBenchmark.fastMathAtan    0      1  avgt   10   6.908 ±  0.011  ns/op
FastMathBenchmark.fastMathAtan    0      5  avgt   10   6.910 ±  0.019  ns/op
FastMathBenchmark.fastMathAtan    0     10  avgt   10   6.914 ±  0.013  ns/op
FastMathBenchmark.fastMathAtan    0    100  avgt   10   6.916 ±  0.014  ns/op
FastMathBenchmark.fastMathAtan    0   1000  avgt   10   6.914 ±  0.014  ns/op
FastMathBenchmark.fastMathAtan    0  10000  avgt   10   6.909 ±  0.017  ns/op
FastMathBenchmark.fastMathAtan    5    0.5  avgt   10   6.907 ±  0.012  ns/op
FastMathBenchmark.fastMathAtan    5      1  avgt   10   6.919 ±  0.014  ns/op
FastMathBenchmark.fastMathAtan    5      5  avgt   10   6.918 ±  0.015  ns/op
FastMathBenchmark.fastMathAtan    5     10  avgt   10   6.913 ±  0.011  ns/op
FastMathBenchmark.fastMathAtan    5    100  avgt   10   6.911 ±  0.020  ns/op
FastMathBenchmark.fastMathAtan    5   1000  avgt   10   6.909 ±  0.013  ns/op
FastMathBenchmark.fastMathAtan    5  10000  avgt   10   6.909 ±  0.013  ns/op
FastMathBenchmark.fastMathAtan   30    0.5  avgt   10   6.916 ±  0.013  ns/op
FastMathBenchmark.fastMathAtan   30      1  avgt   10   6.914 ±  0.010  ns/op
FastMathBenchmark.fastMathAtan   30      5  avgt   10   6.918 ±  0.024  ns/op
FastMathBenchmark.fastMathAtan   30     10  avgt   10   6.936 ±  0.091  ns/op
FastMathBenchmark.fastMathAtan   30    100  avgt   10   6.920 ±  0.010  ns/op
FastMathBenchmark.fastMathAtan   30   1000  avgt   10   6.944 ±  0.135  ns/op
FastMathBenchmark.fastMathAtan   30  10000  avgt   10   6.946 ±  0.053  ns/op
FastMathBenchmark.fastMathAtan   45    0.5  avgt   10   7.022 ±  0.254  ns/op
FastMathBenchmark.fastMathAtan   45      1  avgt   10   6.911 ±  0.017  ns/op
FastMathBenchmark.fastMathAtan   45      5  avgt   10   6.913 ±  0.017  ns/op
FastMathBenchmark.fastMathAtan   45     10  avgt   10   6.910 ±  0.009  ns/op
FastMathBenchmark.fastMathAtan   45    100  avgt   10   6.915 ±  0.011  ns/op
FastMathBenchmark.fastMathAtan   45   1000  avgt   10   6.915 ±  0.008  ns/op
FastMathBenchmark.fastMathAtan   45  10000  avgt   10   6.911 ±  0.016  ns/op
FastMathBenchmark.fastMathAtan   60    0.5  avgt   10   6.906 ±  0.017  ns/op
FastMathBenchmark.fastMathAtan   60      1  avgt   10   6.922 ±  0.014  ns/op
FastMathBenchmark.fastMathAtan   60      5  avgt   10   6.917 ±  0.014  ns/op
FastMathBenchmark.fastMathAtan   60     10  avgt   10   6.912 ±  0.012  ns/op
FastMathBenchmark.fastMathAtan   60    100  avgt   10   6.912 ±  0.018  ns/op
FastMathBenchmark.fastMathAtan   60   1000  avgt   10   6.912 ±  0.019  ns/op
FastMathBenchmark.fastMathAtan   60  10000  avgt   10   6.907 ±  0.017  ns/op
FastMathBenchmark.fastMathAtan   85    0.5  avgt   10   6.911 ±  0.011  ns/op
FastMathBenchmark.fastMathAtan   85      1  avgt   10   6.916 ±  0.018  ns/op
FastMathBenchmark.fastMathAtan   85      5  avgt   10   6.911 ±  0.015  ns/op
FastMathBenchmark.fastMathAtan   85     10  avgt   10   6.911 ±  0.012  ns/op
FastMathBenchmark.fastMathAtan   85    100  avgt   10   6.913 ±  0.017  ns/op
FastMathBenchmark.fastMathAtan   85   1000  avgt   10   6.913 ±  0.010  ns/op
FastMathBenchmark.fastMathAtan   85  10000  avgt   10   6.914 ±  0.013  ns/op
FastMathBenchmark.fastMathAtan   90    0.5  avgt   10   6.909 ±  0.014  ns/op
FastMathBenchmark.fastMathAtan   90      1  avgt   10   6.910 ±  0.018  ns/op
FastMathBenchmark.fastMathAtan   90      5  avgt   10   6.906 ±  0.011  ns/op
FastMathBenchmark.fastMathAtan   90     10  avgt   10   6.910 ±  0.009  ns/op
FastMathBenchmark.fastMathAtan   90    100  avgt   10   6.932 ±  0.066  ns/op
FastMathBenchmark.fastMathAtan   90   1000  avgt   10   6.911 ±  0.012  ns/op
FastMathBenchmark.fastMathAtan   90  10000  avgt   10   6.914 ±  0.013  ns/op
FastMathBenchmark.fastMathCos     0    0.5  avgt   10  46.616 ±  0.519  ns/op
FastMathBenchmark.fastMathCos     0      1  avgt   10  46.550 ±  0.491  ns/op
FastMathBenchmark.fastMathCos     0      5  avgt   10  46.722 ±  0.540  ns/op
FastMathBenchmark.fastMathCos     0     10  avgt   10  46.684 ±  0.509  ns/op
FastMathBenchmark.fastMathCos     0    100  avgt   10  46.812 ±  1.007  ns/op
FastMathBenchmark.fastMathCos     0   1000  avgt   10  46.710 ±  0.362  ns/op
FastMathBenchmark.fastMathCos     0  10000  avgt   10  46.808 ±  0.525  ns/op
FastMathBenchmark.fastMathCos     5    0.5  avgt   10  29.370 ±  0.763  ns/op
FastMathBenchmark.fastMathCos     5      1  avgt   10  28.787 ±  0.054  ns/op
FastMathBenchmark.fastMathCos     5      5  avgt   10  29.089 ±  0.576  ns/op
FastMathBenchmark.fastMathCos     5     10  avgt   10  28.918 ±  0.157  ns/op
FastMathBenchmark.fastMathCos     5    100  avgt   10  30.064 ±  0.853  ns/op
FastMathBenchmark.fastMathCos     5   1000  avgt   10  28.808 ±  0.060  ns/op
FastMathBenchmark.fastMathCos     5  10000  avgt   10  28.822 ±  0.049  ns/op
FastMathBenchmark.fastMathCos    30    0.5  avgt   10  28.794 ±  0.035  ns/op
FastMathBenchmark.fastMathCos    30      1  avgt   10  29.211 ±  0.674  ns/op
FastMathBenchmark.fastMathCos    30      5  avgt   10  28.981 ±  0.209  ns/op
FastMathBenchmark.fastMathCos    30     10  avgt   10  28.775 ±  0.037  ns/op
FastMathBenchmark.fastMathCos    30    100  avgt   10  28.818 ±  0.051  ns/op
FastMathBenchmark.fastMathCos    30   1000  avgt   10  29.156 ±  0.732  ns/op
FastMathBenchmark.fastMathCos    30  10000  avgt   10  28.803 ±  0.066  ns/op
FastMathBenchmark.fastMathCos    45    0.5  avgt   10  29.300 ±  0.677  ns/op
FastMathBenchmark.fastMathCos    45      1  avgt   10  28.823 ±  0.072  ns/op
FastMathBenchmark.fastMathCos    45      5  avgt   10  28.829 ±  0.095  ns/op
FastMathBenchmark.fastMathCos    45     10  avgt   10  29.442 ±  0.530  ns/op
FastMathBenchmark.fastMathCos    45    100  avgt   10  28.818 ±  0.110  ns/op
FastMathBenchmark.fastMathCos    45   1000  avgt   10  28.878 ±  0.197  ns/op
FastMathBenchmark.fastMathCos    45  10000  avgt   10  28.827 ±  0.097  ns/op
FastMathBenchmark.fastMathCos    60    0.5  avgt   10  29.394 ±  0.988  ns/op
FastMathBenchmark.fastMathCos    60      1  avgt   10  28.904 ±  0.199  ns/op
FastMathBenchmark.fastMathCos    60      5  avgt   10  28.799 ±  0.057  ns/op
FastMathBenchmark.fastMathCos    60     10  avgt   10  28.798 ±  0.061  ns/op
FastMathBenchmark.fastMathCos    60    100  avgt   10  28.883 ±  0.076  ns/op
FastMathBenchmark.fastMathCos    60   1000  avgt   10  29.368 ±  0.908  ns/op
FastMathBenchmark.fastMathCos    60  10000  avgt   10  29.902 ±  0.951  ns/op
FastMathBenchmark.fastMathCos    85    0.5  avgt   10  29.390 ±  0.944  ns/op
FastMathBenchmark.fastMathCos    85      1  avgt   10  29.506 ±  1.340  ns/op
FastMathBenchmark.fastMathCos    85      5  avgt   10  28.751 ±  0.080  ns/op
FastMathBenchmark.fastMathCos    85     10  avgt   10  28.812 ±  0.094  ns/op
FastMathBenchmark.fastMathCos    85    100  avgt   10  29.454 ±  1.026  ns/op
FastMathBenchmark.fastMathCos    85   1000  avgt   10  28.921 ±  0.148  ns/op
FastMathBenchmark.fastMathCos    85  10000  avgt   10  28.803 ±  0.063  ns/op
FastMathBenchmark.fastMathCos    90    0.5  avgt   10  28.856 ±  0.249  ns/op
FastMathBenchmark.fastMathCos    90      1  avgt   10  29.514 ±  1.108  ns/op
FastMathBenchmark.fastMathCos    90      5  avgt   10  28.958 ±  0.229  ns/op
FastMathBenchmark.fastMathCos    90     10  avgt   10  29.116 ±  0.431  ns/op
FastMathBenchmark.fastMathCos    90    100  avgt   10  28.947 ±  0.280  ns/op
FastMathBenchmark.fastMathCos    90   1000  avgt   10  28.837 ±  0.156  ns/op
FastMathBenchmark.fastMathCos    90  10000  avgt   10  28.805 ±  0.206  ns/op
FastMathBenchmark.fastMathSin     0    0.5  avgt   10  46.223 ±  0.405  ns/op
FastMathBenchmark.fastMathSin     0      1  avgt   10  46.506 ±  0.288  ns/op
FastMathBenchmark.fastMathSin     0      5  avgt   10  46.260 ±  0.258  ns/op
FastMathBenchmark.fastMathSin     0     10  avgt   10  46.473 ±  0.464  ns/op
FastMathBenchmark.fastMathSin     0    100  avgt   10  46.517 ±  0.302  ns/op
FastMathBenchmark.fastMathSin     0   1000  avgt   10  46.478 ±  0.304  ns/op
FastMathBenchmark.fastMathSin     0  10000  avgt   10  46.379 ±  0.308  ns/op
FastMathBenchmark.fastMathSin     5    0.5  avgt   10  28.933 ±  0.243  ns/op
FastMathBenchmark.fastMathSin     5      1  avgt   10  28.699 ±  0.187  ns/op
FastMathBenchmark.fastMathSin     5      5  avgt   10  29.507 ±  1.144  ns/op
FastMathBenchmark.fastMathSin     5     10  avgt   10  28.892 ±  0.496  ns/op
FastMathBenchmark.fastMathSin     5    100  avgt   10  28.959 ±  0.187  ns/op
FastMathBenchmark.fastMathSin     5   1000  avgt   10  28.819 ±  0.188  ns/op
FastMathBenchmark.fastMathSin     5  10000  avgt   10  28.982 ±  0.440  ns/op
FastMathBenchmark.fastMathSin    30    0.5  avgt   10  28.950 ±  0.219  ns/op
FastMathBenchmark.fastMathSin    30      1  avgt   10  29.179 ±  0.614  ns/op
FastMathBenchmark.fastMathSin    30      5  avgt   10  28.943 ±  0.178  ns/op
FastMathBenchmark.fastMathSin    30     10  avgt   10  29.400 ±  0.169  ns/op
FastMathBenchmark.fastMathSin    30    100  avgt   10  29.208 ±  0.716  ns/op
FastMathBenchmark.fastMathSin    30   1000  avgt   10  28.737 ±  0.216  ns/op
FastMathBenchmark.fastMathSin    30  10000  avgt   10  29.442 ±  1.081  ns/op
FastMathBenchmark.fastMathSin    45    0.5  avgt   10  29.259 ±  0.523  ns/op
FastMathBenchmark.fastMathSin    45      1  avgt   10  28.918 ±  0.248  ns/op
FastMathBenchmark.fastMathSin    45      5  avgt   10  28.743 ±  0.090  ns/op
FastMathBenchmark.fastMathSin    45     10  avgt   10  28.924 ±  0.681  ns/op
FastMathBenchmark.fastMathSin    45    100  avgt   10  29.074 ±  0.293  ns/op
FastMathBenchmark.fastMathSin    45   1000  avgt   10  29.338 ±  0.600  ns/op
FastMathBenchmark.fastMathSin    45  10000  avgt   10  28.751 ±  0.090  ns/op
FastMathBenchmark.fastMathSin    60    0.5  avgt   10  28.735 ±  0.175  ns/op
FastMathBenchmark.fastMathSin    60      1  avgt   10  28.880 ±  0.100  ns/op
FastMathBenchmark.fastMathSin    60      5  avgt   10  29.117 ±  0.571  ns/op
FastMathBenchmark.fastMathSin    60     10  avgt   10  28.918 ±  0.206  ns/op
FastMathBenchmark.fastMathSin    60    100  avgt   10  28.884 ±  0.353  ns/op
FastMathBenchmark.fastMathSin    60   1000  avgt   10  28.881 ±  0.380  ns/op
FastMathBenchmark.fastMathSin    60  10000  avgt   10  28.820 ±  0.278  ns/op
FastMathBenchmark.fastMathSin    85    0.5  avgt   10  28.895 ±  0.280  ns/op
FastMathBenchmark.fastMathSin    85      1  avgt   10  29.146 ±  0.484  ns/op
FastMathBenchmark.fastMathSin    85      5  avgt   10  29.280 ±  0.448  ns/op
FastMathBenchmark.fastMathSin    85     10  avgt   10  28.897 ±  0.216  ns/op
FastMathBenchmark.fastMathSin    85    100  avgt   10  29.503 ±  0.157  ns/op
FastMathBenchmark.fastMathSin    85   1000  avgt   10  28.828 ±  0.100  ns/op
FastMathBenchmark.fastMathSin    85  10000  avgt   10  28.808 ±  0.220  ns/op
FastMathBenchmark.fastMathSin    90    0.5  avgt   10  31.093 ±  0.044  ns/op
FastMathBenchmark.fastMathSin    90      1  avgt   10  31.055 ±  0.152  ns/op
FastMathBenchmark.fastMathSin    90      5  avgt   10  31.124 ±  0.032  ns/op
FastMathBenchmark.fastMathSin    90     10  avgt   10  31.098 ±  0.091  ns/op
FastMathBenchmark.fastMathSin    90    100  avgt   10  31.092 ±  0.055  ns/op
FastMathBenchmark.fastMathSin    90   1000  avgt   10  31.087 ±  0.047  ns/op
FastMathBenchmark.fastMathSin    90  10000  avgt   10  30.395 ±  1.125  ns/op

Benchmark result is saved to build\reports\jmh\results.txt
